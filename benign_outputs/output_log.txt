Scenarios: message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.012351751327514648
edges: 1.1444091796875e-05
Graph 622 saved.
Drawing graph...
Graph drawn to output/graph622/graph622.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph622/graph622.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph622/nodetypes622.json.
outputting edge types to JSON format...
Edge types outputted to output/graph622/edgetypes622.json.
outputting graph to JSON format...
Graph outputted to output/graph622/graph622.json.
Scenarios: submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.06691169738769531
edges: 1.3589859008789062e-05
Graph 623 saved.
Drawing graph...
Graph drawn to output/graph623/graph623.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph623/graph623.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph623/nodetypes623.json.
outputting edge types to JSON format...
Edge types outputted to output/graph623/edgetypes623.json.
outputting graph to JSON format...
Graph outputted to output/graph623/graph623.json.
Scenarios: query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.012820243835449219
edges: 1.430511474609375e-05
Graph 624 saved.
Drawing graph...
Graph drawn to output/graph624/graph624.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph624/graph624.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph624/nodetypes624.json.
outputting edge types to JSON format...
Edge types outputted to output/graph624/edgetypes624.json.
outputting graph to JSON format...
Graph outputted to output/graph624/graph624.json.
Scenarios: ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.03387784957885742
edges: 1.1205673217773438e-05
Graph 625 saved.
Drawing graph...
Graph drawn to output/graph625/graph625.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph625/graph625.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph625/nodetypes625.json.
outputting edge types to JSON format...
Edge types outputted to output/graph625/edgetypes625.json.
outputting graph to JSON format...
Graph outputted to output/graph625/graph625.json.
Scenarios: databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.02984905242919922
edges: 1.3589859008789062e-05
Graph 626 saved.
Drawing graph...
Graph drawn to output/graph626/graph626.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph626/graph626.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph626/nodetypes626.json.
outputting edge types to JSON format...
Edge types outputted to output/graph626/edgetypes626.json.
outputting graph to JSON format...
Graph outputted to output/graph626/graph626.json.
Scenarios: login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.045667409896850586
edges: 1.1682510375976562e-05
Graph 627 saved.
Drawing graph...
Graph drawn to output/graph627/graph627.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph627/graph627.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph627/nodetypes627.json.
outputting edge types to JSON format...
Edge types outputted to output/graph627/edgetypes627.json.
outputting graph to JSON format...
Graph outputted to output/graph627/graph627.json.
Scenarios: message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.04512596130371094
edges: 1.1920928955078125e-05
Graph 628 saved.
Drawing graph...
Graph drawn to output/graph628/graph628.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph628/graph628.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph628/nodetypes628.json.
outputting edge types to JSON format...
Edge types outputted to output/graph628/edgetypes628.json.
outputting graph to JSON format...
Graph outputted to output/graph628/graph628.json.
Scenarios: message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.037847042083740234
edges: 1.7404556274414062e-05
Graph 629 saved.
Drawing graph...
Graph drawn to output/graph629/graph629.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph629/graph629.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph629/nodetypes629.json.
outputting edge types to JSON format...
Edge types outputted to output/graph629/edgetypes629.json.
outputting graph to JSON format...
Graph outputted to output/graph629/graph629.json.
Scenarios: message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.06879496574401855
edges: 2.0742416381835938e-05
Graph 630 saved.
Drawing graph...
Graph drawn to output/graph630/graph630.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph630/graph630.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph630/nodetypes630.json.
outputting edge types to JSON format...
Edge types outputted to output/graph630/edgetypes630.json.
outputting graph to JSON format...
Graph outputted to output/graph630/graph630.json.
Scenarios: message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.014567852020263672
edges: 1.1205673217773438e-05
Graph 631 saved.
Drawing graph...
Graph drawn to output/graph631/graph631.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph631/graph631.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph631/nodetypes631.json.
outputting edge types to JSON format...
Edge types outputted to output/graph631/edgetypes631.json.
outputting graph to JSON format...
Graph outputted to output/graph631/graph631.json.
Scenarios: message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.053638458251953125
edges: 1.7642974853515625e-05
Graph 632 saved.
Drawing graph...
Graph drawn to output/graph632/graph632.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph632/graph632.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph632/nodetypes632.json.
outputting edge types to JSON format...
Edge types outputted to output/graph632/edgetypes632.json.
outputting graph to JSON format...
Graph outputted to output/graph632/graph632.json.
Scenarios: submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.06232953071594238
edges: 1.1444091796875e-05
Graph 633 saved.
Drawing graph...
Graph drawn to output/graph633/graph633.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph633/graph633.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph633/nodetypes633.json.
outputting edge types to JSON format...
Edge types outputted to output/graph633/edgetypes633.json.
outputting graph to JSON format...
Graph outputted to output/graph633/graph633.json.
Scenarios: submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.0774989128112793
edges: 1.0967254638671875e-05
Graph 634 saved.
Drawing graph...
Graph drawn to output/graph634/graph634.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph634/graph634.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph634/nodetypes634.json.
outputting edge types to JSON format...
Edge types outputted to output/graph634/edgetypes634.json.
outputting graph to JSON format...
Graph outputted to output/graph634/graph634.json.
Scenarios: submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.039350032806396484
edges: 1.2159347534179688e-05
Graph 635 saved.
Drawing graph...
Graph drawn to output/graph635/graph635.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph635/graph635.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph635/nodetypes635.json.
outputting edge types to JSON format...
Edge types outputted to output/graph635/edgetypes635.json.
outputting graph to JSON format...
Graph outputted to output/graph635/graph635.json.
Scenarios: submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.08340573310852051
edges: 1.6927719116210938e-05
Graph 636 saved.
Drawing graph...
Graph drawn to output/graph636/graph636.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph636/graph636.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph636/nodetypes636.json.
outputting edge types to JSON format...
Edge types outputted to output/graph636/edgetypes636.json.
outputting graph to JSON format...
Graph outputted to output/graph636/graph636.json.
Scenarios: submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03998255729675293
edges: 1.1205673217773438e-05
Graph 637 saved.
Drawing graph...
Graph drawn to output/graph637/graph637.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph637/graph637.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph637/nodetypes637.json.
outputting edge types to JSON format...
Edge types outputted to output/graph637/edgetypes637.json.
outputting graph to JSON format...
Graph outputted to output/graph637/graph637.json.
Scenarios: query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.02864980697631836
edges: 1.5735626220703125e-05
Graph 638 saved.
Drawing graph...
Graph drawn to output/graph638/graph638.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph638/graph638.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph638/nodetypes638.json.
outputting edge types to JSON format...
Edge types outputted to output/graph638/edgetypes638.json.
outputting graph to JSON format...
Graph outputted to output/graph638/graph638.json.
Scenarios: query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.02461099624633789
edges: 1.3113021850585938e-05
Graph 639 saved.
Drawing graph...
Graph drawn to output/graph639/graph639.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph639/graph639.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph639/nodetypes639.json.
outputting edge types to JSON format...
Edge types outputted to output/graph639/edgetypes639.json.
outputting graph to JSON format...
Graph outputted to output/graph639/graph639.json.
Scenarios: query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.027819156646728516
edges: 1.5497207641601562e-05
Graph 640 saved.
Drawing graph...
Graph drawn to output/graph640/graph640.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph640/graph640.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph640/nodetypes640.json.
outputting edge types to JSON format...
Edge types outputted to output/graph640/edgetypes640.json.
outputting graph to JSON format...
Graph outputted to output/graph640/graph640.json.
Scenarios: query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.037328243255615234
edges: 1.1205673217773438e-05
Graph 641 saved.
Drawing graph...
Graph drawn to output/graph641/graph641.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph641/graph641.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph641/nodetypes641.json.
outputting edge types to JSON format...
Edge types outputted to output/graph641/edgetypes641.json.
outputting graph to JSON format...
Graph outputted to output/graph641/graph641.json.
Scenarios: query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.12259745597839355
edges: 1.1444091796875e-05
Graph 642 saved.
Drawing graph...
Graph drawn to output/graph642/graph642.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph642/graph642.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph642/nodetypes642.json.
outputting edge types to JSON format...
Edge types outputted to output/graph642/edgetypes642.json.
outputting graph to JSON format...
Graph outputted to output/graph642/graph642.json.
Scenarios: ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.015689849853515625
edges: 1.1205673217773438e-05
Graph 643 saved.
Drawing graph...
Graph drawn to output/graph643/graph643.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph643/graph643.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph643/nodetypes643.json.
outputting edge types to JSON format...
Edge types outputted to output/graph643/edgetypes643.json.
outputting graph to JSON format...
Graph outputted to output/graph643/graph643.json.
Scenarios: ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.02152872085571289
edges: 1.2159347534179688e-05
Graph 644 saved.
Drawing graph...
Graph drawn to output/graph644/graph644.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph644/graph644.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph644/nodetypes644.json.
outputting edge types to JSON format...
Edge types outputted to output/graph644/edgetypes644.json.
outputting graph to JSON format...
Graph outputted to output/graph644/graph644.json.
Scenarios: ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.13819575309753418
edges: 1.1444091796875e-05
Graph 645 saved.
Drawing graph...
Graph drawn to output/graph645/graph645.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph645/graph645.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph645/nodetypes645.json.
outputting edge types to JSON format...
Edge types outputted to output/graph645/edgetypes645.json.
outputting graph to JSON format...
Graph outputted to output/graph645/graph645.json.
Scenarios: ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04956245422363281
edges: 1.2874603271484375e-05
Graph 646 saved.
Drawing graph...
Graph drawn to output/graph646/graph646.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph646/graph646.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph646/nodetypes646.json.
outputting edge types to JSON format...
Edge types outputted to output/graph646/edgetypes646.json.
outputting graph to JSON format...
Graph outputted to output/graph646/graph646.json.
Scenarios: ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.01409459114074707
edges: 1.621246337890625e-05
Graph 647 saved.
Drawing graph...
Graph drawn to output/graph647/graph647.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph647/graph647.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph647/nodetypes647.json.
outputting edge types to JSON format...
Edge types outputted to output/graph647/edgetypes647.json.
outputting graph to JSON format...
Graph outputted to output/graph647/graph647.json.
Scenarios: databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.03213691711425781
edges: 1.1205673217773438e-05
Graph 648 saved.
Drawing graph...
Graph drawn to output/graph648/graph648.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph648/graph648.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph648/nodetypes648.json.
outputting edge types to JSON format...
Edge types outputted to output/graph648/edgetypes648.json.
outputting graph to JSON format...
Graph outputted to output/graph648/graph648.json.
Scenarios: databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.018772125244140625
edges: 1.6689300537109375e-05
Graph 649 saved.
Drawing graph...
Graph drawn to output/graph649/graph649.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph649/graph649.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph649/nodetypes649.json.
outputting edge types to JSON format...
Edge types outputted to output/graph649/edgetypes649.json.
outputting graph to JSON format...
Graph outputted to output/graph649/graph649.json.
Scenarios: databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.03446483612060547
edges: 1.4066696166992188e-05
Graph 650 saved.
Drawing graph...
Graph drawn to output/graph650/graph650.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph650/graph650.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph650/nodetypes650.json.
outputting edge types to JSON format...
Edge types outputted to output/graph650/edgetypes650.json.
outputting graph to JSON format...
Graph outputted to output/graph650/graph650.json.
Scenarios: databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.0490720272064209
edges: 1.1444091796875e-05
Graph 651 saved.
Drawing graph...
Graph drawn to output/graph651/graph651.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph651/graph651.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph651/nodetypes651.json.
outputting edge types to JSON format...
Edge types outputted to output/graph651/edgetypes651.json.
outputting graph to JSON format...
Graph outputted to output/graph651/graph651.json.
Scenarios: databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.05492734909057617
edges: 1.1444091796875e-05
Graph 652 saved.
Drawing graph...
Graph drawn to output/graph652/graph652.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph652/graph652.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph652/nodetypes652.json.
outputting edge types to JSON format...
Edge types outputted to output/graph652/edgetypes652.json.
outputting graph to JSON format...
Graph outputted to output/graph652/graph652.json.
Scenarios: login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.03293967247009277
edges: 1.6927719116210938e-05
Graph 653 saved.
Drawing graph...
Graph drawn to output/graph653/graph653.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph653/graph653.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph653/nodetypes653.json.
outputting edge types to JSON format...
Edge types outputted to output/graph653/edgetypes653.json.
outputting graph to JSON format...
Graph outputted to output/graph653/graph653.json.
Scenarios: login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.04502224922180176
edges: 1.52587890625e-05
Graph 654 saved.
Drawing graph...
Graph drawn to output/graph654/graph654.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph654/graph654.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph654/nodetypes654.json.
outputting edge types to JSON format...
Edge types outputted to output/graph654/edgetypes654.json.
outputting graph to JSON format...
Graph outputted to output/graph654/graph654.json.
Scenarios: login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.031655311584472656
edges: 1.1682510375976562e-05
Graph 655 saved.
Drawing graph...
Graph drawn to output/graph655/graph655.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph655/graph655.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph655/nodetypes655.json.
outputting edge types to JSON format...
Edge types outputted to output/graph655/edgetypes655.json.
outputting graph to JSON format...
Graph outputted to output/graph655/graph655.json.
Scenarios: login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.09139347076416016
edges: 1.1205673217773438e-05
Graph 656 saved.
Drawing graph...
Graph drawn to output/graph656/graph656.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph656/graph656.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph656/nodetypes656.json.
outputting edge types to JSON format...
Edge types outputted to output/graph656/edgetypes656.json.
outputting graph to JSON format...
Graph outputted to output/graph656/graph656.json.
Scenarios: login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.02637791633605957
edges: 1.0967254638671875e-05
Graph 657 saved.
Drawing graph...
Graph drawn to output/graph657/graph657.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph657/graph657.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph657/nodetypes657.json.
outputting edge types to JSON format...
Edge types outputted to output/graph657/edgetypes657.json.
outputting graph to JSON format...
Graph outputted to output/graph657/graph657.json.
Scenarios: message,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.02856278419494629
edges: 1.239776611328125e-05
Graph 658 saved.
Drawing graph...
Graph drawn to output/graph658/graph658.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph658/graph658.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph658/nodetypes658.json.
outputting edge types to JSON format...
Edge types outputted to output/graph658/edgetypes658.json.
outputting graph to JSON format...
Graph outputted to output/graph658/graph658.json.
Scenarios: message,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.05585789680480957
edges: 1.239776611328125e-05
Graph 659 saved.
Drawing graph...
Graph drawn to output/graph659/graph659.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph659/graph659.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph659/nodetypes659.json.
outputting edge types to JSON format...
Edge types outputted to output/graph659/edgetypes659.json.
outputting graph to JSON format...
Graph outputted to output/graph659/graph659.json.
Scenarios: message,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.10678887367248535
edges: 1.6450881958007812e-05
Graph 660 saved.
Drawing graph...
Graph drawn to output/graph660/graph660.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph660/graph660.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph660/nodetypes660.json.
outputting edge types to JSON format...
Edge types outputted to output/graph660/edgetypes660.json.
outputting graph to JSON format...
Graph outputted to output/graph660/graph660.json.
Scenarios: message,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.027068376541137695
edges: 1.621246337890625e-05
Graph 661 saved.
Drawing graph...
Graph drawn to output/graph661/graph661.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph661/graph661.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph661/nodetypes661.json.
outputting edge types to JSON format...
Edge types outputted to output/graph661/edgetypes661.json.
outputting graph to JSON format...
Graph outputted to output/graph661/graph661.json.
Scenarios: message,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.15830707550048828
edges: 1.1682510375976562e-05
Graph 662 saved.
Drawing graph...
Graph drawn to output/graph662/graph662.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph662/graph662.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph662/nodetypes662.json.
outputting edge types to JSON format...
Edge types outputted to output/graph662/edgetypes662.json.
outputting graph to JSON format...
Graph outputted to output/graph662/graph662.json.
Scenarios: message,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.007923126220703125
edges: 1.6450881958007812e-05
Graph 663 saved.
Drawing graph...
Graph drawn to output/graph663/graph663.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph663/graph663.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph663/nodetypes663.json.
outputting edge types to JSON format...
Edge types outputted to output/graph663/edgetypes663.json.
outputting graph to JSON format...
Graph outputted to output/graph663/graph663.json.
Scenarios: message,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.032865285873413086
edges: 1.71661376953125e-05
Graph 664 saved.
Drawing graph...
Graph drawn to output/graph664/graph664.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph664/graph664.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph664/nodetypes664.json.
outputting edge types to JSON format...
Edge types outputted to output/graph664/edgetypes664.json.
outputting graph to JSON format...
Graph outputted to output/graph664/graph664.json.
Scenarios: message,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.05181145668029785
edges: 1.2636184692382812e-05
Graph 665 saved.
Drawing graph...
Graph drawn to output/graph665/graph665.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph665/graph665.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph665/nodetypes665.json.
outputting edge types to JSON format...
Edge types outputted to output/graph665/edgetypes665.json.
outputting graph to JSON format...
Graph outputted to output/graph665/graph665.json.
Scenarios: message,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.01740860939025879
edges: 1.1444091796875e-05
Graph 666 saved.
Drawing graph...
Graph drawn to output/graph666/graph666.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph666/graph666.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph666/nodetypes666.json.
outputting edge types to JSON format...
Edge types outputted to output/graph666/edgetypes666.json.
outputting graph to JSON format...
Graph outputted to output/graph666/graph666.json.
Scenarios: message,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.05779409408569336
edges: 1.9550323486328125e-05
Graph 667 saved.
Drawing graph...
Graph drawn to output/graph667/graph667.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph667/graph667.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph667/nodetypes667.json.
outputting edge types to JSON format...
Edge types outputted to output/graph667/edgetypes667.json.
outputting graph to JSON format...
Graph outputted to output/graph667/graph667.json.
Scenarios: message,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.028339862823486328
edges: 1.621246337890625e-05
Graph 668 saved.
Drawing graph...
Graph drawn to output/graph668/graph668.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph668/graph668.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph668/nodetypes668.json.
outputting edge types to JSON format...
Edge types outputted to output/graph668/edgetypes668.json.
outputting graph to JSON format...
Graph outputted to output/graph668/graph668.json.
Scenarios: message,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.06329941749572754
edges: 1.1682510375976562e-05
Graph 669 saved.
Drawing graph...
Graph drawn to output/graph669/graph669.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph669/graph669.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph669/nodetypes669.json.
outputting edge types to JSON format...
Edge types outputted to output/graph669/edgetypes669.json.
outputting graph to JSON format...
Graph outputted to output/graph669/graph669.json.
Scenarios: message,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.0502018928527832
edges: 1.5497207641601562e-05
Graph 670 saved.
Drawing graph...
Graph drawn to output/graph670/graph670.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph670/graph670.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph670/nodetypes670.json.
outputting edge types to JSON format...
Edge types outputted to output/graph670/edgetypes670.json.
outputting graph to JSON format...
Graph outputted to output/graph670/graph670.json.
Scenarios: message,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.05082201957702637
edges: 1.1444091796875e-05
Graph 671 saved.
Drawing graph...
Graph drawn to output/graph671/graph671.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph671/graph671.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph671/nodetypes671.json.
outputting edge types to JSON format...
Edge types outputted to output/graph671/edgetypes671.json.
outputting graph to JSON format...
Graph outputted to output/graph671/graph671.json.
Scenarios: message,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.09579181671142578
edges: 1.0967254638671875e-05
Graph 672 saved.
Drawing graph...
Graph drawn to output/graph672/graph672.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph672/graph672.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph672/nodetypes672.json.
outputting edge types to JSON format...
Edge types outputted to output/graph672/edgetypes672.json.
outputting graph to JSON format...
Graph outputted to output/graph672/graph672.json.
Scenarios: message,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.07952332496643066
edges: 1.6927719116210938e-05
Graph 673 saved.
Drawing graph...
Graph drawn to output/graph673/graph673.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph673/graph673.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph673/nodetypes673.json.
outputting edge types to JSON format...
Edge types outputted to output/graph673/edgetypes673.json.
outputting graph to JSON format...
Graph outputted to output/graph673/graph673.json.
Scenarios: message,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.051018476486206055
edges: 1.239776611328125e-05
Graph 674 saved.
Drawing graph...
Graph drawn to output/graph674/graph674.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph674/graph674.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph674/nodetypes674.json.
outputting edge types to JSON format...
Edge types outputted to output/graph674/edgetypes674.json.
outputting graph to JSON format...
Graph outputted to output/graph674/graph674.json.
Scenarios: message,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.04252958297729492
edges: 1.1444091796875e-05
Graph 675 saved.
Drawing graph...
Graph drawn to output/graph675/graph675.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph675/graph675.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph675/nodetypes675.json.
outputting edge types to JSON format...
Edge types outputted to output/graph675/edgetypes675.json.
outputting graph to JSON format...
Graph outputted to output/graph675/graph675.json.
Scenarios: message,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.14719867706298828
edges: 1.6689300537109375e-05
Graph 676 saved.
Drawing graph...
Graph drawn to output/graph676/graph676.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph676/graph676.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph676/nodetypes676.json.
outputting edge types to JSON format...
Edge types outputted to output/graph676/edgetypes676.json.
outputting graph to JSON format...
Graph outputted to output/graph676/graph676.json.
Scenarios: message,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.031706809997558594
edges: 1.1205673217773438e-05
Graph 677 saved.
Drawing graph...
Graph drawn to output/graph677/graph677.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph677/graph677.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph677/nodetypes677.json.
outputting edge types to JSON format...
Edge types outputted to output/graph677/edgetypes677.json.
outputting graph to JSON format...
Graph outputted to output/graph677/graph677.json.
Scenarios: submit,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.06213879585266113
edges: 1.33514404296875e-05
Graph 678 saved.
Drawing graph...
Graph drawn to output/graph678/graph678.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph678/graph678.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph678/nodetypes678.json.
outputting edge types to JSON format...
Edge types outputted to output/graph678/edgetypes678.json.
outputting graph to JSON format...
Graph outputted to output/graph678/graph678.json.
Scenarios: submit,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.138291597366333
edges: 1.239776611328125e-05
Graph 679 saved.
Drawing graph...
Graph drawn to output/graph679/graph679.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph679/graph679.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph679/nodetypes679.json.
outputting edge types to JSON format...
Edge types outputted to output/graph679/edgetypes679.json.
outputting graph to JSON format...
Graph outputted to output/graph679/graph679.json.
Scenarios: submit,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.014974117279052734
edges: 1.1444091796875e-05
Graph 680 saved.
Drawing graph...
Graph drawn to output/graph680/graph680.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph680/graph680.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph680/nodetypes680.json.
outputting edge types to JSON format...
Edge types outputted to output/graph680/edgetypes680.json.
outputting graph to JSON format...
Graph outputted to output/graph680/graph680.json.
Scenarios: submit,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.10674476623535156
edges: 1.5974044799804688e-05
Graph 681 saved.
Drawing graph...
Graph drawn to output/graph681/graph681.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph681/graph681.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph681/nodetypes681.json.
outputting edge types to JSON format...
Edge types outputted to output/graph681/edgetypes681.json.
outputting graph to JSON format...
Graph outputted to output/graph681/graph681.json.
Scenarios: submit,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.01879429817199707
edges: 4.2438507080078125e-05
Graph 682 saved.
Drawing graph...
Graph drawn to output/graph682/graph682.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph682/graph682.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph682/nodetypes682.json.
outputting edge types to JSON format...
Edge types outputted to output/graph682/edgetypes682.json.
outputting graph to JSON format...
Graph outputted to output/graph682/graph682.json.
Scenarios: submit,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.052991628646850586
edges: 1.430511474609375e-05
Graph 683 saved.
Drawing graph...
Graph drawn to output/graph683/graph683.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph683/graph683.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph683/nodetypes683.json.
outputting edge types to JSON format...
Edge types outputted to output/graph683/edgetypes683.json.
outputting graph to JSON format...
Graph outputted to output/graph683/graph683.json.
Scenarios: submit,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.014687776565551758
edges: 1.239776611328125e-05
Graph 684 saved.
Drawing graph...
Graph drawn to output/graph684/graph684.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph684/graph684.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph684/nodetypes684.json.
outputting edge types to JSON format...
Edge types outputted to output/graph684/edgetypes684.json.
outputting graph to JSON format...
Graph outputted to output/graph684/graph684.json.
Scenarios: submit,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03753471374511719
edges: 1.239776611328125e-05
Graph 685 saved.
Drawing graph...
Graph drawn to output/graph685/graph685.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph685/graph685.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph685/nodetypes685.json.
outputting edge types to JSON format...
Edge types outputted to output/graph685/edgetypes685.json.
outputting graph to JSON format...
Graph outputted to output/graph685/graph685.json.
Scenarios: submit,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.0574946403503418
edges: 1.1682510375976562e-05
Graph 686 saved.
Drawing graph...
Graph drawn to output/graph686/graph686.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph686/graph686.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph686/nodetypes686.json.
outputting edge types to JSON format...
Edge types outputted to output/graph686/edgetypes686.json.
outputting graph to JSON format...
Graph outputted to output/graph686/graph686.json.
Scenarios: submit,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.06054806709289551
edges: 1.2636184692382812e-05
Graph 687 saved.
Drawing graph...
Graph drawn to output/graph687/graph687.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph687/graph687.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph687/nodetypes687.json.
outputting edge types to JSON format...
Edge types outputted to output/graph687/edgetypes687.json.
outputting graph to JSON format...
Graph outputted to output/graph687/graph687.json.
Scenarios: submit,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.016336679458618164
edges: 2.7418136596679688e-05
Graph 688 saved.
Drawing graph...
Graph drawn to output/graph688/graph688.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph688/graph688.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph688/nodetypes688.json.
outputting edge types to JSON format...
Edge types outputted to output/graph688/edgetypes688.json.
outputting graph to JSON format...
Graph outputted to output/graph688/graph688.json.
Scenarios: submit,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.014470815658569336
edges: 3.814697265625e-05
Graph 689 saved.
Drawing graph...
Graph drawn to output/graph689/graph689.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph689/graph689.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph689/nodetypes689.json.
outputting edge types to JSON format...
Edge types outputted to output/graph689/edgetypes689.json.
outputting graph to JSON format...
Graph outputted to output/graph689/graph689.json.
Scenarios: submit,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.030879497528076172
edges: 1.6689300537109375e-05
Graph 690 saved.
Drawing graph...
Graph drawn to output/graph690/graph690.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph690/graph690.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph690/nodetypes690.json.
outputting edge types to JSON format...
Edge types outputted to output/graph690/edgetypes690.json.
outputting graph to JSON format...
Graph outputted to output/graph690/graph690.json.
Scenarios: submit,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.01743292808532715
edges: 1.3828277587890625e-05
Graph 691 saved.
Drawing graph...
Graph drawn to output/graph691/graph691.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph691/graph691.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph691/nodetypes691.json.
outputting edge types to JSON format...
Edge types outputted to output/graph691/edgetypes691.json.
outputting graph to JSON format...
Graph outputted to output/graph691/graph691.json.
Scenarios: submit,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.012233495712280273
edges: 1.1205673217773438e-05
Graph 692 saved.
Drawing graph...
Graph drawn to output/graph692/graph692.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph692/graph692.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph692/nodetypes692.json.
outputting edge types to JSON format...
Edge types outputted to output/graph692/edgetypes692.json.
outputting graph to JSON format...
Graph outputted to output/graph692/graph692.json.
Scenarios: submit,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.05193352699279785
edges: 1.1444091796875e-05
Graph 693 saved.
Drawing graph...
Graph drawn to output/graph693/graph693.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph693/graph693.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph693/nodetypes693.json.
outputting edge types to JSON format...
Edge types outputted to output/graph693/edgetypes693.json.
outputting graph to JSON format...
Graph outputted to output/graph693/graph693.json.
Scenarios: submit,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.021068096160888672
edges: 1.1205673217773438e-05
Graph 694 saved.
Drawing graph...
Graph drawn to output/graph694/graph694.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph694/graph694.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph694/nodetypes694.json.
outputting edge types to JSON format...
Edge types outputted to output/graph694/edgetypes694.json.
outputting graph to JSON format...
Graph outputted to output/graph694/graph694.json.
Scenarios: submit,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.03096294403076172
edges: 1.0967254638671875e-05
Graph 695 saved.
Drawing graph...
Graph drawn to output/graph695/graph695.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph695/graph695.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph695/nodetypes695.json.
outputting edge types to JSON format...
Edge types outputted to output/graph695/edgetypes695.json.
outputting graph to JSON format...
Graph outputted to output/graph695/graph695.json.
Scenarios: submit,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.031233549118041992
edges: 1.71661376953125e-05
Graph 696 saved.
Drawing graph...
Graph drawn to output/graph696/graph696.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph696/graph696.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph696/nodetypes696.json.
outputting edge types to JSON format...
Edge types outputted to output/graph696/edgetypes696.json.
outputting graph to JSON format...
Graph outputted to output/graph696/graph696.json.
Scenarios: submit,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.03587770462036133
edges: 1.5735626220703125e-05
Graph 697 saved.
Drawing graph...
Graph drawn to output/graph697/graph697.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph697/graph697.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph697/nodetypes697.json.
outputting edge types to JSON format...
Edge types outputted to output/graph697/edgetypes697.json.
outputting graph to JSON format...
Graph outputted to output/graph697/graph697.json.
Scenarios: query,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.03395199775695801
edges: 1.1444091796875e-05
Graph 698 saved.
Drawing graph...
Graph drawn to output/graph698/graph698.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph698/graph698.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph698/nodetypes698.json.
outputting edge types to JSON format...
Edge types outputted to output/graph698/edgetypes698.json.
outputting graph to JSON format...
Graph outputted to output/graph698/graph698.json.
Scenarios: query,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.0353999137878418
edges: 1.2874603271484375e-05
Graph 699 saved.
Drawing graph...
Graph drawn to output/graph699/graph699.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph699/graph699.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph699/nodetypes699.json.
outputting edge types to JSON format...
Edge types outputted to output/graph699/edgetypes699.json.
outputting graph to JSON format...
Graph outputted to output/graph699/graph699.json.
Scenarios: query,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.017143726348876953
edges: 1.1444091796875e-05
Graph 700 saved.
Drawing graph...
Graph drawn to output/graph700/graph700.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph700/graph700.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph700/nodetypes700.json.
outputting edge types to JSON format...
Edge types outputted to output/graph700/edgetypes700.json.
outputting graph to JSON format...
Graph outputted to output/graph700/graph700.json.
Scenarios: query,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.08623194694519043
edges: 1.3113021850585938e-05
Graph 701 saved.
Drawing graph...
Graph drawn to output/graph701/graph701.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph701/graph701.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph701/nodetypes701.json.
outputting edge types to JSON format...
Edge types outputted to output/graph701/edgetypes701.json.
outputting graph to JSON format...
Graph outputted to output/graph701/graph701.json.
Scenarios: query,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.044722557067871094
edges: 1.1682510375976562e-05
Graph 702 saved.
Drawing graph...
Graph drawn to output/graph702/graph702.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph702/graph702.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph702/nodetypes702.json.
outputting edge types to JSON format...
Edge types outputted to output/graph702/edgetypes702.json.
outputting graph to JSON format...
Graph outputted to output/graph702/graph702.json.
Scenarios: query,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.04091501235961914
edges: 1.2874603271484375e-05
Graph 703 saved.
Drawing graph...
Graph drawn to output/graph703/graph703.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph703/graph703.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph703/nodetypes703.json.
outputting edge types to JSON format...
Edge types outputted to output/graph703/edgetypes703.json.
outputting graph to JSON format...
Graph outputted to output/graph703/graph703.json.
Scenarios: query,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.023183107376098633
edges: 1.0728836059570312e-05
Graph 704 saved.
Drawing graph...
Graph drawn to output/graph704/graph704.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph704/graph704.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph704/nodetypes704.json.
outputting edge types to JSON format...
Edge types outputted to output/graph704/edgetypes704.json.
outputting graph to JSON format...
Graph outputted to output/graph704/graph704.json.
Scenarios: query,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.09788823127746582
edges: 2.6226043701171875e-05
Graph 705 saved.
Drawing graph...
Graph drawn to output/graph705/graph705.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph705/graph705.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph705/nodetypes705.json.
outputting edge types to JSON format...
Edge types outputted to output/graph705/edgetypes705.json.
outputting graph to JSON format...
Graph outputted to output/graph705/graph705.json.
Scenarios: query,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.021391630172729492
edges: 1.1205673217773438e-05
Graph 706 saved.
Drawing graph...
Graph drawn to output/graph706/graph706.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph706/graph706.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph706/nodetypes706.json.
outputting edge types to JSON format...
Edge types outputted to output/graph706/edgetypes706.json.
outputting graph to JSON format...
Graph outputted to output/graph706/graph706.json.
Scenarios: query,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.018608570098876953
edges: 1.1444091796875e-05
Graph 707 saved.
Drawing graph...
Graph drawn to output/graph707/graph707.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph707/graph707.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph707/nodetypes707.json.
outputting edge types to JSON format...
Edge types outputted to output/graph707/edgetypes707.json.
outputting graph to JSON format...
Graph outputted to output/graph707/graph707.json.
Scenarios: query,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.023209095001220703
edges: 1.3589859008789062e-05
Graph 708 saved.
Drawing graph...
Graph drawn to output/graph708/graph708.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph708/graph708.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph708/nodetypes708.json.
outputting edge types to JSON format...
Edge types outputted to output/graph708/edgetypes708.json.
outputting graph to JSON format...
Graph outputted to output/graph708/graph708.json.
Scenarios: query,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.015944480895996094
edges: 1.71661376953125e-05
Graph 709 saved.
Drawing graph...
Graph drawn to output/graph709/graph709.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph709/graph709.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph709/nodetypes709.json.
outputting edge types to JSON format...
Edge types outputted to output/graph709/edgetypes709.json.
outputting graph to JSON format...
Graph outputted to output/graph709/graph709.json.
Scenarios: query,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.0804910659790039
edges: 1.33514404296875e-05
Graph 710 saved.
Drawing graph...
Graph drawn to output/graph710/graph710.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph710/graph710.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph710/nodetypes710.json.
outputting edge types to JSON format...
Edge types outputted to output/graph710/edgetypes710.json.
outputting graph to JSON format...
Graph outputted to output/graph710/graph710.json.
Scenarios: query,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.01232290267944336
edges: 1.3589859008789062e-05
Graph 711 saved.
Drawing graph...
Graph drawn to output/graph711/graph711.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph711/graph711.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph711/nodetypes711.json.
outputting edge types to JSON format...
Edge types outputted to output/graph711/edgetypes711.json.
outputting graph to JSON format...
Graph outputted to output/graph711/graph711.json.
Scenarios: query,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.07464241981506348
edges: 1.2636184692382812e-05
Graph 712 saved.
Drawing graph...
Graph drawn to output/graph712/graph712.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph712/graph712.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph712/nodetypes712.json.
outputting edge types to JSON format...
Edge types outputted to output/graph712/edgetypes712.json.
outputting graph to JSON format...
Graph outputted to output/graph712/graph712.json.
Scenarios: query,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.008676767349243164
edges: 1.9550323486328125e-05
Graph 713 saved.
Drawing graph...
Graph drawn to output/graph713/graph713.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph713/graph713.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph713/nodetypes713.json.
outputting edge types to JSON format...
Edge types outputted to output/graph713/edgetypes713.json.
outputting graph to JSON format...
Graph outputted to output/graph713/graph713.json.
Scenarios: query,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.027306318283081055
edges: 1.6689300537109375e-05
Graph 714 saved.
Drawing graph...
Graph drawn to output/graph714/graph714.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph714/graph714.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph714/nodetypes714.json.
outputting edge types to JSON format...
Edge types outputted to output/graph714/edgetypes714.json.
outputting graph to JSON format...
Graph outputted to output/graph714/graph714.json.
Scenarios: query,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.047559261322021484
edges: 1.1444091796875e-05
Graph 715 saved.
Drawing graph...
Graph drawn to output/graph715/graph715.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph715/graph715.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph715/nodetypes715.json.
outputting edge types to JSON format...
Edge types outputted to output/graph715/edgetypes715.json.
outputting graph to JSON format...
Graph outputted to output/graph715/graph715.json.
Scenarios: query,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.046427011489868164
edges: 1.8358230590820312e-05
Graph 716 saved.
Drawing graph...
Graph drawn to output/graph716/graph716.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph716/graph716.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph716/nodetypes716.json.
outputting edge types to JSON format...
Edge types outputted to output/graph716/edgetypes716.json.
outputting graph to JSON format...
Graph outputted to output/graph716/graph716.json.
Scenarios: query,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.027231454849243164
edges: 1.9073486328125e-05
Graph 717 saved.
Drawing graph...
Graph drawn to output/graph717/graph717.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph717/graph717.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph717/nodetypes717.json.
outputting edge types to JSON format...
Edge types outputted to output/graph717/edgetypes717.json.
outputting graph to JSON format...
Graph outputted to output/graph717/graph717.json.
Scenarios: ping,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.07248353958129883
edges: 1.1444091796875e-05
Graph 718 saved.
Drawing graph...
Graph drawn to output/graph718/graph718.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph718/graph718.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph718/nodetypes718.json.
outputting edge types to JSON format...
Edge types outputted to output/graph718/edgetypes718.json.
outputting graph to JSON format...
Graph outputted to output/graph718/graph718.json.
Scenarios: ping,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.010854005813598633
edges: 1.6689300537109375e-05
Graph 719 saved.
Drawing graph...
Graph drawn to output/graph719/graph719.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph719/graph719.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph719/nodetypes719.json.
outputting edge types to JSON format...
Edge types outputted to output/graph719/edgetypes719.json.
outputting graph to JSON format...
Graph outputted to output/graph719/graph719.json.
Scenarios: ping,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.025839805603027344
edges: 1.5735626220703125e-05
Graph 720 saved.
Drawing graph...
Graph drawn to output/graph720/graph720.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph720/graph720.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph720/nodetypes720.json.
outputting edge types to JSON format...
Edge types outputted to output/graph720/edgetypes720.json.
outputting graph to JSON format...
Graph outputted to output/graph720/graph720.json.
Scenarios: ping,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.0726017951965332
edges: 1.1920928955078125e-05
Graph 721 saved.
Drawing graph...
Graph drawn to output/graph721/graph721.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph721/graph721.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph721/nodetypes721.json.
outputting edge types to JSON format...
Edge types outputted to output/graph721/edgetypes721.json.
outputting graph to JSON format...
Graph outputted to output/graph721/graph721.json.
Scenarios: ping,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.08825159072875977
edges: 1.1444091796875e-05
Graph 722 saved.
Drawing graph...
Graph drawn to output/graph722/graph722.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph722/graph722.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph722/nodetypes722.json.
outputting edge types to JSON format...
Edge types outputted to output/graph722/edgetypes722.json.
outputting graph to JSON format...
Graph outputted to output/graph722/graph722.json.
Scenarios: ping,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.09263086318969727
edges: 1.621246337890625e-05
Graph 723 saved.
Drawing graph...
Graph drawn to output/graph723/graph723.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph723/graph723.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph723/nodetypes723.json.
outputting edge types to JSON format...
Edge types outputted to output/graph723/edgetypes723.json.
outputting graph to JSON format...
Graph outputted to output/graph723/graph723.json.
Scenarios: ping,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.0333406925201416
edges: 1.1920928955078125e-05
Graph 724 saved.
Drawing graph...
Graph drawn to output/graph724/graph724.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph724/graph724.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph724/nodetypes724.json.
outputting edge types to JSON format...
Edge types outputted to output/graph724/edgetypes724.json.
outputting graph to JSON format...
Graph outputted to output/graph724/graph724.json.
Scenarios: ping,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.011211633682250977
edges: 1.621246337890625e-05
Graph 725 saved.
Drawing graph...
Graph drawn to output/graph725/graph725.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph725/graph725.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph725/nodetypes725.json.
outputting edge types to JSON format...
Edge types outputted to output/graph725/edgetypes725.json.
outputting graph to JSON format...
Graph outputted to output/graph725/graph725.json.
Scenarios: ping,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.014973163604736328
edges: 1.2874603271484375e-05
Graph 726 saved.
Drawing graph...
Graph drawn to output/graph726/graph726.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph726/graph726.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph726/nodetypes726.json.
outputting edge types to JSON format...
Edge types outputted to output/graph726/edgetypes726.json.
outputting graph to JSON format...
Graph outputted to output/graph726/graph726.json.
Scenarios: ping,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.0520172119140625
edges: 2.1457672119140625e-05
Graph 727 saved.
Drawing graph...
Graph drawn to output/graph727/graph727.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph727/graph727.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph727/nodetypes727.json.
outputting edge types to JSON format...
Edge types outputted to output/graph727/edgetypes727.json.
outputting graph to JSON format...
Graph outputted to output/graph727/graph727.json.
Scenarios: ping,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.014165639877319336
edges: 1.1920928955078125e-05
Graph 728 saved.
Drawing graph...
Graph drawn to output/graph728/graph728.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph728/graph728.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph728/nodetypes728.json.
outputting edge types to JSON format...
Edge types outputted to output/graph728/edgetypes728.json.
outputting graph to JSON format...
Graph outputted to output/graph728/graph728.json.
Scenarios: ping,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.016016006469726562
edges: 1.2874603271484375e-05
Graph 729 saved.
Drawing graph...
Graph drawn to output/graph729/graph729.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph729/graph729.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph729/nodetypes729.json.
outputting edge types to JSON format...
Edge types outputted to output/graph729/edgetypes729.json.
outputting graph to JSON format...
Graph outputted to output/graph729/graph729.json.
Scenarios: ping,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.07736420631408691
edges: 1.1920928955078125e-05
Graph 730 saved.
Drawing graph...
Graph drawn to output/graph730/graph730.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph730/graph730.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph730/nodetypes730.json.
outputting edge types to JSON format...
Edge types outputted to output/graph730/edgetypes730.json.
outputting graph to JSON format...
Graph outputted to output/graph730/graph730.json.
Scenarios: ping,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.012925863265991211
edges: 1.1920928955078125e-05
Graph 731 saved.
Drawing graph...
Graph drawn to output/graph731/graph731.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph731/graph731.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph731/nodetypes731.json.
outputting edge types to JSON format...
Edge types outputted to output/graph731/edgetypes731.json.
outputting graph to JSON format...
Graph outputted to output/graph731/graph731.json.
Scenarios: ping,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.06934475898742676
edges: 1.1444091796875e-05
Graph 732 saved.
Drawing graph...
Graph drawn to output/graph732/graph732.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph732/graph732.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph732/nodetypes732.json.
outputting edge types to JSON format...
Edge types outputted to output/graph732/edgetypes732.json.
outputting graph to JSON format...
Graph outputted to output/graph732/graph732.json.
Scenarios: ping,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.06033658981323242
edges: 1.1920928955078125e-05
Graph 733 saved.
Drawing graph...
Graph drawn to output/graph733/graph733.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph733/graph733.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph733/nodetypes733.json.
outputting edge types to JSON format...
Edge types outputted to output/graph733/edgetypes733.json.
outputting graph to JSON format...
Graph outputted to output/graph733/graph733.json.
Scenarios: ping,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.1061239242553711
edges: 1.1205673217773438e-05
Graph 734 saved.
Drawing graph...
Graph drawn to output/graph734/graph734.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph734/graph734.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph734/nodetypes734.json.
outputting edge types to JSON format...
Edge types outputted to output/graph734/edgetypes734.json.
outputting graph to JSON format...
Graph outputted to output/graph734/graph734.json.
Scenarios: ping,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.07802152633666992
edges: 1.239776611328125e-05
Graph 735 saved.
Drawing graph...
Graph drawn to output/graph735/graph735.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph735/graph735.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph735/nodetypes735.json.
outputting edge types to JSON format...
Edge types outputted to output/graph735/edgetypes735.json.
outputting graph to JSON format...
Graph outputted to output/graph735/graph735.json.
Scenarios: ping,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.010567426681518555
edges: 1.3828277587890625e-05
Graph 736 saved.
Drawing graph...
Graph drawn to output/graph736/graph736.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph736/graph736.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph736/nodetypes736.json.
outputting edge types to JSON format...
Edge types outputted to output/graph736/edgetypes736.json.
outputting graph to JSON format...
Graph outputted to output/graph736/graph736.json.
Scenarios: ping,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.045975685119628906
edges: 1.6450881958007812e-05
Graph 737 saved.
Drawing graph...
Graph drawn to output/graph737/graph737.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph737/graph737.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph737/nodetypes737.json.
outputting edge types to JSON format...
Edge types outputted to output/graph737/edgetypes737.json.
outputting graph to JSON format...
Graph outputted to output/graph737/graph737.json.
Scenarios: databaseentry,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.05265927314758301
edges: 1.4066696166992188e-05
Graph 738 saved.
Drawing graph...
Graph drawn to output/graph738/graph738.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph738/graph738.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph738/nodetypes738.json.
outputting edge types to JSON format...
Edge types outputted to output/graph738/edgetypes738.json.
outputting graph to JSON format...
Graph outputted to output/graph738/graph738.json.
Scenarios: databaseentry,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.05236053466796875
edges: 1.2636184692382812e-05
Graph 739 saved.
Drawing graph...
Graph drawn to output/graph739/graph739.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph739/graph739.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph739/nodetypes739.json.
outputting edge types to JSON format...
Edge types outputted to output/graph739/edgetypes739.json.
outputting graph to JSON format...
Graph outputted to output/graph739/graph739.json.
Scenarios: databaseentry,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.04779958724975586
edges: 1.6689300537109375e-05
Graph 740 saved.
Drawing graph...
Graph drawn to output/graph740/graph740.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph740/graph740.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph740/nodetypes740.json.
outputting edge types to JSON format...
Edge types outputted to output/graph740/edgetypes740.json.
outputting graph to JSON format...
Graph outputted to output/graph740/graph740.json.
Scenarios: databaseentry,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.07553744316101074
edges: 1.9788742065429688e-05
Graph 741 saved.
Drawing graph...
Graph drawn to output/graph741/graph741.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph741/graph741.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph741/nodetypes741.json.
outputting edge types to JSON format...
Edge types outputted to output/graph741/edgetypes741.json.
outputting graph to JSON format...
Graph outputted to output/graph741/graph741.json.
Scenarios: databaseentry,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.015290260314941406
edges: 1.9073486328125e-05
Graph 742 saved.
Drawing graph...
Graph drawn to output/graph742/graph742.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph742/graph742.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph742/nodetypes742.json.
outputting edge types to JSON format...
Edge types outputted to output/graph742/edgetypes742.json.
outputting graph to JSON format...
Graph outputted to output/graph742/graph742.json.
Scenarios: databaseentry,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.028371572494506836
edges: 1.3113021850585938e-05
Graph 743 saved.
Drawing graph...
Graph drawn to output/graph743/graph743.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph743/graph743.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph743/nodetypes743.json.
outputting edge types to JSON format...
Edge types outputted to output/graph743/edgetypes743.json.
outputting graph to JSON format...
Graph outputted to output/graph743/graph743.json.
Scenarios: databaseentry,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.06464457511901855
edges: 1.1920928955078125e-05
Graph 744 saved.
Drawing graph...
Graph drawn to output/graph744/graph744.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph744/graph744.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph744/nodetypes744.json.
outputting edge types to JSON format...
Edge types outputted to output/graph744/edgetypes744.json.
outputting graph to JSON format...
Graph outputted to output/graph744/graph744.json.
Scenarios: databaseentry,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03611469268798828
edges: 1.239776611328125e-05
Graph 745 saved.
Drawing graph...
Graph drawn to output/graph745/graph745.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph745/graph745.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph745/nodetypes745.json.
outputting edge types to JSON format...
Edge types outputted to output/graph745/edgetypes745.json.
outputting graph to JSON format...
Graph outputted to output/graph745/graph745.json.
Scenarios: databaseentry,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.07890200614929199
edges: 1.2159347534179688e-05
Graph 746 saved.
Drawing graph...
Graph drawn to output/graph746/graph746.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph746/graph746.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph746/nodetypes746.json.
outputting edge types to JSON format...
Edge types outputted to output/graph746/edgetypes746.json.
outputting graph to JSON format...
Graph outputted to output/graph746/graph746.json.
Scenarios: databaseentry,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.04955768585205078
edges: 1.3828277587890625e-05
Graph 747 saved.
Drawing graph...
Graph drawn to output/graph747/graph747.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph747/graph747.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph747/nodetypes747.json.
outputting edge types to JSON format...
Edge types outputted to output/graph747/edgetypes747.json.
outputting graph to JSON format...
Graph outputted to output/graph747/graph747.json.
Scenarios: databaseentry,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.041742801666259766
edges: 1.0967254638671875e-05
Graph 748 saved.
Drawing graph...
Graph drawn to output/graph748/graph748.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph748/graph748.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph748/nodetypes748.json.
outputting edge types to JSON format...
Edge types outputted to output/graph748/edgetypes748.json.
outputting graph to JSON format...
Graph outputted to output/graph748/graph748.json.
Scenarios: databaseentry,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.023130178451538086
edges: 2.3603439331054688e-05
Graph 749 saved.
Drawing graph...
Graph drawn to output/graph749/graph749.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph749/graph749.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph749/nodetypes749.json.
outputting edge types to JSON format...
Edge types outputted to output/graph749/edgetypes749.json.
outputting graph to JSON format...
Graph outputted to output/graph749/graph749.json.
Scenarios: databaseentry,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.05943632125854492
edges: 1.2159347534179688e-05
Graph 750 saved.
Drawing graph...
Graph drawn to output/graph750/graph750.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph750/graph750.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph750/nodetypes750.json.
outputting edge types to JSON format...
Edge types outputted to output/graph750/edgetypes750.json.
outputting graph to JSON format...
Graph outputted to output/graph750/graph750.json.
Scenarios: databaseentry,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.014912605285644531
edges: 1.239776611328125e-05
Graph 751 saved.
Drawing graph...
Graph drawn to output/graph751/graph751.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph751/graph751.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph751/nodetypes751.json.
outputting edge types to JSON format...
Edge types outputted to output/graph751/edgetypes751.json.
outputting graph to JSON format...
Graph outputted to output/graph751/graph751.json.
Scenarios: databaseentry,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.01195526123046875
edges: 1.7404556274414062e-05
Graph 752 saved.
Drawing graph...
Graph drawn to output/graph752/graph752.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph752/graph752.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph752/nodetypes752.json.
outputting edge types to JSON format...
Edge types outputted to output/graph752/edgetypes752.json.
outputting graph to JSON format...
Graph outputted to output/graph752/graph752.json.
Scenarios: databaseentry,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.0927724838256836
edges: 1.239776611328125e-05
Graph 753 saved.
Drawing graph...
Graph drawn to output/graph753/graph753.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph753/graph753.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph753/nodetypes753.json.
outputting edge types to JSON format...
Edge types outputted to output/graph753/edgetypes753.json.
outputting graph to JSON format...
Graph outputted to output/graph753/graph753.json.
Scenarios: databaseentry,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.05364108085632324
edges: 1.1920928955078125e-05
Graph 754 saved.
Drawing graph...
Graph drawn to output/graph754/graph754.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph754/graph754.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph754/nodetypes754.json.
outputting edge types to JSON format...
Edge types outputted to output/graph754/edgetypes754.json.
outputting graph to JSON format...
Graph outputted to output/graph754/graph754.json.
Scenarios: databaseentry,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.03273916244506836
edges: 1.1444091796875e-05
Graph 755 saved.
Drawing graph...
Graph drawn to output/graph755/graph755.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph755/graph755.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph755/nodetypes755.json.
outputting edge types to JSON format...
Edge types outputted to output/graph755/edgetypes755.json.
outputting graph to JSON format...
Graph outputted to output/graph755/graph755.json.
Scenarios: databaseentry,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.021570205688476562
edges: 1.1682510375976562e-05
Graph 756 saved.
Drawing graph...
Graph drawn to output/graph756/graph756.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph756/graph756.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph756/nodetypes756.json.
outputting edge types to JSON format...
Edge types outputted to output/graph756/edgetypes756.json.
outputting graph to JSON format...
Graph outputted to output/graph756/graph756.json.
Scenarios: databaseentry,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.05978751182556152
edges: 1.4066696166992188e-05
Graph 757 saved.
Drawing graph...
Graph drawn to output/graph757/graph757.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph757/graph757.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph757/nodetypes757.json.
outputting edge types to JSON format...
Edge types outputted to output/graph757/edgetypes757.json.
outputting graph to JSON format...
Graph outputted to output/graph757/graph757.json.
Scenarios: login,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.07826471328735352
edges: 1.5497207641601562e-05
Graph 758 saved.
Drawing graph...
Graph drawn to output/graph758/graph758.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph758/graph758.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph758/nodetypes758.json.
outputting edge types to JSON format...
Edge types outputted to output/graph758/edgetypes758.json.
outputting graph to JSON format...
Graph outputted to output/graph758/graph758.json.
Scenarios: login,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.03577780723571777
edges: 1.1682510375976562e-05
Graph 759 saved.
Drawing graph...
Graph drawn to output/graph759/graph759.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph759/graph759.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph759/nodetypes759.json.
outputting edge types to JSON format...
Edge types outputted to output/graph759/edgetypes759.json.
outputting graph to JSON format...
Graph outputted to output/graph759/graph759.json.
Scenarios: login,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.02610039710998535
edges: 2.9802322387695312e-05
Graph 760 saved.
Drawing graph...
Graph drawn to output/graph760/graph760.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph760/graph760.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph760/nodetypes760.json.
outputting edge types to JSON format...
Edge types outputted to output/graph760/edgetypes760.json.
outputting graph to JSON format...
Graph outputted to output/graph760/graph760.json.
Scenarios: login,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.07375669479370117
edges: 1.7404556274414062e-05
Graph 761 saved.
Drawing graph...
Graph drawn to output/graph761/graph761.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph761/graph761.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph761/nodetypes761.json.
outputting edge types to JSON format...
Edge types outputted to output/graph761/edgetypes761.json.
outputting graph to JSON format...
Graph outputted to output/graph761/graph761.json.
Scenarios: login,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.021136760711669922
edges: 1.1444091796875e-05
Graph 762 saved.
Drawing graph...
Graph drawn to output/graph762/graph762.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph762/graph762.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph762/nodetypes762.json.
outputting edge types to JSON format...
Edge types outputted to output/graph762/edgetypes762.json.
outputting graph to JSON format...
Graph outputted to output/graph762/graph762.json.
Scenarios: login,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.05579853057861328
edges: 1.2159347534179688e-05
Graph 763 saved.
Drawing graph...
Graph drawn to output/graph763/graph763.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph763/graph763.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph763/nodetypes763.json.
outputting edge types to JSON format...
Edge types outputted to output/graph763/edgetypes763.json.
outputting graph to JSON format...
Graph outputted to output/graph763/graph763.json.
Scenarios: login,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.04318046569824219
edges: 1.2159347534179688e-05
Graph 764 saved.
Drawing graph...
Graph drawn to output/graph764/graph764.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph764/graph764.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph764/nodetypes764.json.
outputting edge types to JSON format...
Edge types outputted to output/graph764/edgetypes764.json.
outputting graph to JSON format...
Graph outputted to output/graph764/graph764.json.
Scenarios: login,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.0785212516784668
edges: 1.1682510375976562e-05
Graph 765 saved.
Drawing graph...
Graph drawn to output/graph765/graph765.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph765/graph765.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph765/nodetypes765.json.
outputting edge types to JSON format...
Edge types outputted to output/graph765/edgetypes765.json.
outputting graph to JSON format...
Graph outputted to output/graph765/graph765.json.
Scenarios: login,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.06811189651489258
edges: 1.1682510375976562e-05
Graph 766 saved.
Drawing graph...
Graph drawn to output/graph766/graph766.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph766/graph766.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph766/nodetypes766.json.
outputting edge types to JSON format...
Edge types outputted to output/graph766/edgetypes766.json.
outputting graph to JSON format...
Graph outputted to output/graph766/graph766.json.
Scenarios: login,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.022446393966674805
edges: 1.6927719116210938e-05
Graph 767 saved.
Drawing graph...
Graph drawn to output/graph767/graph767.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph767/graph767.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph767/nodetypes767.json.
outputting edge types to JSON format...
Edge types outputted to output/graph767/edgetypes767.json.
outputting graph to JSON format...
Graph outputted to output/graph767/graph767.json.
Scenarios: login,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.0905160903930664
edges: 1.3828277587890625e-05
Graph 768 saved.
Drawing graph...
Graph drawn to output/graph768/graph768.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph768/graph768.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph768/nodetypes768.json.
outputting edge types to JSON format...
Edge types outputted to output/graph768/edgetypes768.json.
outputting graph to JSON format...
Graph outputted to output/graph768/graph768.json.
Scenarios: login,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04252886772155762
edges: 1.6689300537109375e-05
Graph 769 saved.
Drawing graph...
Graph drawn to output/graph769/graph769.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph769/graph769.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph769/nodetypes769.json.
outputting edge types to JSON format...
Edge types outputted to output/graph769/edgetypes769.json.
outputting graph to JSON format...
Graph outputted to output/graph769/graph769.json.
Scenarios: login,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.03868436813354492
edges: 1.1920928955078125e-05
Graph 770 saved.
Drawing graph...
Graph drawn to output/graph770/graph770.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph770/graph770.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph770/nodetypes770.json.
outputting edge types to JSON format...
Edge types outputted to output/graph770/edgetypes770.json.
outputting graph to JSON format...
Graph outputted to output/graph770/graph770.json.
Scenarios: login,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.02452874183654785
edges: 1.430511474609375e-05
Graph 771 saved.
Drawing graph...
Graph drawn to output/graph771/graph771.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph771/graph771.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph771/nodetypes771.json.
outputting edge types to JSON format...
Edge types outputted to output/graph771/edgetypes771.json.
outputting graph to JSON format...
Graph outputted to output/graph771/graph771.json.
Scenarios: login,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.04415774345397949
edges: 1.1920928955078125e-05
Graph 772 saved.
Drawing graph...
Graph drawn to output/graph772/graph772.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph772/graph772.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph772/nodetypes772.json.
outputting edge types to JSON format...
Edge types outputted to output/graph772/edgetypes772.json.
outputting graph to JSON format...
Graph outputted to output/graph772/graph772.json.
Scenarios: login,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.048985958099365234
edges: 1.1444091796875e-05
Graph 773 saved.
Drawing graph...
Graph drawn to output/graph773/graph773.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph773/graph773.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph773/nodetypes773.json.
outputting edge types to JSON format...
Edge types outputted to output/graph773/edgetypes773.json.
outputting graph to JSON format...
Graph outputted to output/graph773/graph773.json.
Scenarios: login,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.022513866424560547
edges: 1.5735626220703125e-05
Graph 774 saved.
Drawing graph...
Graph drawn to output/graph774/graph774.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph774/graph774.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph774/nodetypes774.json.
outputting edge types to JSON format...
Edge types outputted to output/graph774/edgetypes774.json.
outputting graph to JSON format...
Graph outputted to output/graph774/graph774.json.
Scenarios: login,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.01568007469177246
edges: 1.5735626220703125e-05
Graph 775 saved.
Drawing graph...
Graph drawn to output/graph775/graph775.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph775/graph775.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph775/nodetypes775.json.
outputting edge types to JSON format...
Edge types outputted to output/graph775/edgetypes775.json.
outputting graph to JSON format...
Graph outputted to output/graph775/graph775.json.
Scenarios: login,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.0794839859008789
edges: 1.5735626220703125e-05
Graph 776 saved.
Drawing graph...
Graph drawn to output/graph776/graph776.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph776/graph776.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph776/nodetypes776.json.
outputting edge types to JSON format...
Edge types outputted to output/graph776/edgetypes776.json.
outputting graph to JSON format...
Graph outputted to output/graph776/graph776.json.
Scenarios: login,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.016579151153564453
edges: 1.2874603271484375e-05
Graph 777 saved.
Drawing graph...
Graph drawn to output/graph777/graph777.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph777/graph777.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph777/nodetypes777.json.
outputting edge types to JSON format...
Edge types outputted to output/graph777/edgetypes777.json.
outputting graph to JSON format...
Graph outputted to output/graph777/graph777.json.
Scenarios: message,submit,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.04141569137573242
edges: 1.1444091796875e-05
Graph 778 saved.
Drawing graph...
Graph drawn to output/graph778/graph778.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph778/graph778.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph778/nodetypes778.json.
outputting edge types to JSON format...
Edge types outputted to output/graph778/edgetypes778.json.
outputting graph to JSON format...
Graph outputted to output/graph778/graph778.json.
Scenarios: message,submit,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.012556314468383789
edges: 1.1205673217773438e-05
Graph 779 saved.
Drawing graph...
Graph drawn to output/graph779/graph779.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph779/graph779.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph779/nodetypes779.json.
outputting edge types to JSON format...
Edge types outputted to output/graph779/edgetypes779.json.
outputting graph to JSON format...
Graph outputted to output/graph779/graph779.json.
Scenarios: message,submit,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.022293806076049805
edges: 1.1205673217773438e-05
Graph 780 saved.
Drawing graph...
Graph drawn to output/graph780/graph780.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph780/graph780.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph780/nodetypes780.json.
outputting edge types to JSON format...
Edge types outputted to output/graph780/edgetypes780.json.
outputting graph to JSON format...
Graph outputted to output/graph780/graph780.json.
Scenarios: message,submit,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.04465031623840332
edges: 1.1444091796875e-05
Graph 781 saved.
Drawing graph...
Graph drawn to output/graph781/graph781.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph781/graph781.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph781/nodetypes781.json.
outputting edge types to JSON format...
Edge types outputted to output/graph781/edgetypes781.json.
outputting graph to JSON format...
Graph outputted to output/graph781/graph781.json.
Scenarios: message,submit,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.027896404266357422
edges: 1.3828277587890625e-05
Graph 782 saved.
Drawing graph...
Graph drawn to output/graph782/graph782.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph782/graph782.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph782/nodetypes782.json.
outputting edge types to JSON format...
Edge types outputted to output/graph782/edgetypes782.json.
outputting graph to JSON format...
Graph outputted to output/graph782/graph782.json.
Scenarios: message,submit,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.016146183013916016
edges: 1.1205673217773438e-05
Graph 783 saved.
Drawing graph...
Graph drawn to output/graph783/graph783.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph783/graph783.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph783/nodetypes783.json.
outputting edge types to JSON format...
Edge types outputted to output/graph783/edgetypes783.json.
outputting graph to JSON format...
Graph outputted to output/graph783/graph783.json.
Scenarios: message,submit,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.04635190963745117
edges: 1.1682510375976562e-05
Graph 784 saved.
Drawing graph...
Graph drawn to output/graph784/graph784.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph784/graph784.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph784/nodetypes784.json.
outputting edge types to JSON format...
Edge types outputted to output/graph784/edgetypes784.json.
outputting graph to JSON format...
Graph outputted to output/graph784/graph784.json.
Scenarios: message,submit,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.06073617935180664
edges: 1.2159347534179688e-05
Graph 785 saved.
Drawing graph...
Graph drawn to output/graph785/graph785.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph785/graph785.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph785/nodetypes785.json.
outputting edge types to JSON format...
Edge types outputted to output/graph785/edgetypes785.json.
outputting graph to JSON format...
Graph outputted to output/graph785/graph785.json.
Scenarios: message,submit,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.01554417610168457
edges: 0.0001671314239501953
Graph 786 saved.
Drawing graph...
Graph drawn to output/graph786/graph786.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph786/graph786.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph786/nodetypes786.json.
outputting edge types to JSON format...
Edge types outputted to output/graph786/edgetypes786.json.
outputting graph to JSON format...
Graph outputted to output/graph786/graph786.json.
Scenarios: message,submit,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.059122323989868164
edges: 1.3589859008789062e-05
Graph 787 saved.
Drawing graph...
Graph drawn to output/graph787/graph787.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph787/graph787.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph787/nodetypes787.json.
outputting edge types to JSON format...
Edge types outputted to output/graph787/edgetypes787.json.
outputting graph to JSON format...
Graph outputted to output/graph787/graph787.json.
Scenarios: message,submit,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.029165029525756836
edges: 1.4066696166992188e-05
Graph 788 saved.
Drawing graph...
Graph drawn to output/graph788/graph788.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph788/graph788.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph788/nodetypes788.json.
outputting edge types to JSON format...
Edge types outputted to output/graph788/edgetypes788.json.
outputting graph to JSON format...
Graph outputted to output/graph788/graph788.json.
Scenarios: message,submit,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04063248634338379
edges: 1.1444091796875e-05
Graph 789 saved.
Drawing graph...
Graph drawn to output/graph789/graph789.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph789/graph789.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph789/nodetypes789.json.
outputting edge types to JSON format...
Edge types outputted to output/graph789/edgetypes789.json.
outputting graph to JSON format...
Graph outputted to output/graph789/graph789.json.
Scenarios: message,query,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.01710653305053711
edges: 1.1444091796875e-05
Graph 790 saved.
Drawing graph...
Graph drawn to output/graph790/graph790.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph790/graph790.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph790/nodetypes790.json.
outputting edge types to JSON format...
Edge types outputted to output/graph790/edgetypes790.json.
outputting graph to JSON format...
Graph outputted to output/graph790/graph790.json.
Scenarios: message,query,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.044547319412231445
edges: 1.1682510375976562e-05
Graph 791 saved.
Drawing graph...
Graph drawn to output/graph791/graph791.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph791/graph791.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph791/nodetypes791.json.
outputting edge types to JSON format...
Edge types outputted to output/graph791/edgetypes791.json.
outputting graph to JSON format...
Graph outputted to output/graph791/graph791.json.
Scenarios: message,query,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.04212021827697754
edges: 1.1205673217773438e-05
Graph 792 saved.
Drawing graph...
Graph drawn to output/graph792/graph792.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph792/graph792.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph792/nodetypes792.json.
outputting edge types to JSON format...
Edge types outputted to output/graph792/edgetypes792.json.
outputting graph to JSON format...
Graph outputted to output/graph792/graph792.json.
Scenarios: message,query,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.03348255157470703
edges: 1.6689300537109375e-05
Graph 793 saved.
Drawing graph...
Graph drawn to output/graph793/graph793.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph793/graph793.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph793/nodetypes793.json.
outputting edge types to JSON format...
Edge types outputted to output/graph793/edgetypes793.json.
outputting graph to JSON format...
Graph outputted to output/graph793/graph793.json.
Scenarios: message,query,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.0985252857208252
edges: 1.0967254638671875e-05
Graph 794 saved.
Drawing graph...
Graph drawn to output/graph794/graph794.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph794/graph794.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph794/nodetypes794.json.
outputting edge types to JSON format...
Edge types outputted to output/graph794/edgetypes794.json.
outputting graph to JSON format...
Graph outputted to output/graph794/graph794.json.
Scenarios: message,query,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03293943405151367
edges: 1.1205673217773438e-05
Graph 795 saved.
Drawing graph...
Graph drawn to output/graph795/graph795.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph795/graph795.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph795/nodetypes795.json.
outputting edge types to JSON format...
Edge types outputted to output/graph795/edgetypes795.json.
outputting graph to JSON format...
Graph outputted to output/graph795/graph795.json.
Scenarios: message,query,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.033579111099243164
edges: 1.5974044799804688e-05
Graph 796 saved.
Drawing graph...
Graph drawn to output/graph796/graph796.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph796/graph796.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph796/nodetypes796.json.
outputting edge types to JSON format...
Edge types outputted to output/graph796/edgetypes796.json.
outputting graph to JSON format...
Graph outputted to output/graph796/graph796.json.
Scenarios: message,query,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.16714191436767578
edges: 1.1205673217773438e-05
Graph 797 saved.
Drawing graph...
Graph drawn to output/graph797/graph797.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph797/graph797.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph797/nodetypes797.json.
outputting edge types to JSON format...
Edge types outputted to output/graph797/edgetypes797.json.
outputting graph to JSON format...
Graph outputted to output/graph797/graph797.json.
Scenarios: message,query,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03655219078063965
edges: 1.6927719116210938e-05
Graph 798 saved.
Drawing graph...
Graph drawn to output/graph798/graph798.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph798/graph798.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph798/nodetypes798.json.
outputting edge types to JSON format...
Edge types outputted to output/graph798/edgetypes798.json.
outputting graph to JSON format...
Graph outputted to output/graph798/graph798.json.
Scenarios: message,query,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.07660984992980957
edges: 1.1205673217773438e-05
Graph 799 saved.
Drawing graph...
Graph drawn to output/graph799/graph799.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph799/graph799.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph799/nodetypes799.json.
outputting edge types to JSON format...
Edge types outputted to output/graph799/edgetypes799.json.
outputting graph to JSON format...
Graph outputted to output/graph799/graph799.json.
Scenarios: message,query,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.0836031436920166
edges: 1.1682510375976562e-05
Graph 800 saved.
Drawing graph...
Graph drawn to output/graph800/graph800.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph800/graph800.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph800/nodetypes800.json.
outputting edge types to JSON format...
Edge types outputted to output/graph800/edgetypes800.json.
outputting graph to JSON format...
Graph outputted to output/graph800/graph800.json.
Scenarios: message,query,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.016253232955932617
edges: 1.1205673217773438e-05
Graph 801 saved.
Drawing graph...
Graph drawn to output/graph801/graph801.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph801/graph801.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph801/nodetypes801.json.
outputting edge types to JSON format...
Edge types outputted to output/graph801/edgetypes801.json.
outputting graph to JSON format...
Graph outputted to output/graph801/graph801.json.
Scenarios: message,ping,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.02727985382080078
edges: 1.1682510375976562e-05
Graph 802 saved.
Drawing graph...
Graph drawn to output/graph802/graph802.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph802/graph802.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph802/nodetypes802.json.
outputting edge types to JSON format...
Edge types outputted to output/graph802/edgetypes802.json.
outputting graph to JSON format...
Graph outputted to output/graph802/graph802.json.
Scenarios: message,ping,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.10375165939331055
edges: 1.5974044799804688e-05
Graph 803 saved.
Drawing graph...
Graph drawn to output/graph803/graph803.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph803/graph803.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph803/nodetypes803.json.
outputting edge types to JSON format...
Edge types outputted to output/graph803/edgetypes803.json.
outputting graph to JSON format...
Graph outputted to output/graph803/graph803.json.
Scenarios: message,ping,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.033806562423706055
edges: 3.337860107421875e-05
Graph 804 saved.
Drawing graph...
Graph drawn to output/graph804/graph804.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph804/graph804.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph804/nodetypes804.json.
outputting edge types to JSON format...
Edge types outputted to output/graph804/edgetypes804.json.
outputting graph to JSON format...
Graph outputted to output/graph804/graph804.json.
Scenarios: message,ping,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.07461667060852051
edges: 1.6450881958007812e-05
Graph 805 saved.
Drawing graph...
Graph drawn to output/graph805/graph805.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph805/graph805.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph805/nodetypes805.json.
outputting edge types to JSON format...
Edge types outputted to output/graph805/edgetypes805.json.
outputting graph to JSON format...
Graph outputted to output/graph805/graph805.json.
Scenarios: message,ping,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.03735637664794922
edges: 2.4557113647460938e-05
Graph 806 saved.
Drawing graph...
Graph drawn to output/graph806/graph806.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph806/graph806.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph806/nodetypes806.json.
outputting edge types to JSON format...
Edge types outputted to output/graph806/edgetypes806.json.
outputting graph to JSON format...
Graph outputted to output/graph806/graph806.json.
Scenarios: message,ping,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.08762812614440918
edges: 1.621246337890625e-05
Graph 807 saved.
Drawing graph...
Graph drawn to output/graph807/graph807.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph807/graph807.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph807/nodetypes807.json.
outputting edge types to JSON format...
Edge types outputted to output/graph807/edgetypes807.json.
outputting graph to JSON format...
Graph outputted to output/graph807/graph807.json.
Scenarios: message,ping,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.08907461166381836
edges: 1.1682510375976562e-05
Graph 808 saved.
Drawing graph...
Graph drawn to output/graph808/graph808.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph808/graph808.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph808/nodetypes808.json.
outputting edge types to JSON format...
Edge types outputted to output/graph808/edgetypes808.json.
outputting graph to JSON format...
Graph outputted to output/graph808/graph808.json.
Scenarios: message,ping,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.0631706714630127
edges: 1.7881393432617188e-05
Graph 809 saved.
Drawing graph...
Graph drawn to output/graph809/graph809.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph809/graph809.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph809/nodetypes809.json.
outputting edge types to JSON format...
Edge types outputted to output/graph809/edgetypes809.json.
outputting graph to JSON format...
Graph outputted to output/graph809/graph809.json.
Scenarios: message,ping,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.016945600509643555
edges: 1.1682510375976562e-05
Graph 810 saved.
Drawing graph...
Graph drawn to output/graph810/graph810.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph810/graph810.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph810/nodetypes810.json.
outputting edge types to JSON format...
Edge types outputted to output/graph810/edgetypes810.json.
outputting graph to JSON format...
Graph outputted to output/graph810/graph810.json.
Scenarios: message,ping,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.0653538703918457
edges: 1.1205673217773438e-05
Graph 811 saved.
Drawing graph...
Graph drawn to output/graph811/graph811.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph811/graph811.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph811/nodetypes811.json.
outputting edge types to JSON format...
Edge types outputted to output/graph811/edgetypes811.json.
outputting graph to JSON format...
Graph outputted to output/graph811/graph811.json.
Scenarios: message,ping,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.0461575984954834
edges: 1.1920928955078125e-05
Graph 812 saved.
Drawing graph...
Graph drawn to output/graph812/graph812.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph812/graph812.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph812/nodetypes812.json.
outputting edge types to JSON format...
Edge types outputted to output/graph812/edgetypes812.json.
outputting graph to JSON format...
Graph outputted to output/graph812/graph812.json.
Scenarios: message,ping,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04139900207519531
edges: 1.1205673217773438e-05
Graph 813 saved.
Drawing graph...
Graph drawn to output/graph813/graph813.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph813/graph813.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph813/nodetypes813.json.
outputting edge types to JSON format...
Edge types outputted to output/graph813/edgetypes813.json.
outputting graph to JSON format...
Graph outputted to output/graph813/graph813.json.
Scenarios: message,databaseentry,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.038840532302856445
edges: 1.1444091796875e-05
Graph 814 saved.
Drawing graph...
Graph drawn to output/graph814/graph814.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph814/graph814.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph814/nodetypes814.json.
outputting edge types to JSON format...
Edge types outputted to output/graph814/edgetypes814.json.
outputting graph to JSON format...
Graph outputted to output/graph814/graph814.json.
Scenarios: message,databaseentry,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.02107548713684082
edges: 1.1682510375976562e-05
Graph 815 saved.
Drawing graph...
Graph drawn to output/graph815/graph815.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph815/graph815.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph815/nodetypes815.json.
outputting edge types to JSON format...
Edge types outputted to output/graph815/edgetypes815.json.
outputting graph to JSON format...
Graph outputted to output/graph815/graph815.json.
Scenarios: message,databaseentry,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.038567543029785156
edges: 1.1682510375976562e-05
Graph 816 saved.
Drawing graph...
Graph drawn to output/graph816/graph816.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph816/graph816.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph816/nodetypes816.json.
outputting edge types to JSON format...
Edge types outputted to output/graph816/edgetypes816.json.
outputting graph to JSON format...
Graph outputted to output/graph816/graph816.json.
Scenarios: message,databaseentry,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.0446321964263916
edges: 1.6450881958007812e-05
Graph 817 saved.
Drawing graph...
Graph drawn to output/graph817/graph817.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph817/graph817.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph817/nodetypes817.json.
outputting edge types to JSON format...
Edge types outputted to output/graph817/edgetypes817.json.
outputting graph to JSON format...
Graph outputted to output/graph817/graph817.json.
Scenarios: message,databaseentry,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.05854201316833496
edges: 1.2874603271484375e-05
Graph 818 saved.
Drawing graph...
Graph drawn to output/graph818/graph818.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph818/graph818.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph818/nodetypes818.json.
outputting edge types to JSON format...
Edge types outputted to output/graph818/edgetypes818.json.
outputting graph to JSON format...
Graph outputted to output/graph818/graph818.json.
Scenarios: message,databaseentry,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.06905555725097656
edges: 1.2159347534179688e-05
Graph 819 saved.
Drawing graph...
Graph drawn to output/graph819/graph819.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph819/graph819.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph819/nodetypes819.json.
outputting edge types to JSON format...
Edge types outputted to output/graph819/edgetypes819.json.
outputting graph to JSON format...
Graph outputted to output/graph819/graph819.json.
Scenarios: message,databaseentry,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.03973197937011719
edges: 1.2159347534179688e-05
Graph 820 saved.
Drawing graph...
Graph drawn to output/graph820/graph820.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph820/graph820.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph820/nodetypes820.json.
outputting edge types to JSON format...
Edge types outputted to output/graph820/edgetypes820.json.
outputting graph to JSON format...
Graph outputted to output/graph820/graph820.json.
Scenarios: message,databaseentry,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.08704352378845215
edges: 5.1021575927734375e-05
Graph 821 saved.
Drawing graph...
Graph drawn to output/graph821/graph821.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph821/graph821.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph821/nodetypes821.json.
outputting edge types to JSON format...
Edge types outputted to output/graph821/edgetypes821.json.
outputting graph to JSON format...
Graph outputted to output/graph821/graph821.json.
Scenarios: message,databaseentry,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.07355880737304688
edges: 1.71661376953125e-05
Graph 822 saved.
Drawing graph...
Graph drawn to output/graph822/graph822.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph822/graph822.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph822/nodetypes822.json.
outputting edge types to JSON format...
Edge types outputted to output/graph822/edgetypes822.json.
outputting graph to JSON format...
Graph outputted to output/graph822/graph822.json.
Scenarios: message,databaseentry,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.06550025939941406
edges: 1.52587890625e-05
Graph 823 saved.
Drawing graph...
Graph drawn to output/graph823/graph823.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph823/graph823.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph823/nodetypes823.json.
outputting edge types to JSON format...
Edge types outputted to output/graph823/edgetypes823.json.
outputting graph to JSON format...
Graph outputted to output/graph823/graph823.json.
Scenarios: message,databaseentry,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.027988672256469727
edges: 1.239776611328125e-05
Graph 824 saved.
Drawing graph...
Graph drawn to output/graph824/graph824.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph824/graph824.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph824/nodetypes824.json.
outputting edge types to JSON format...
Edge types outputted to output/graph824/edgetypes824.json.
outputting graph to JSON format...
Graph outputted to output/graph824/graph824.json.
Scenarios: message,databaseentry,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.044956207275390625
edges: 1.1205673217773438e-05
Graph 825 saved.
Drawing graph...
Graph drawn to output/graph825/graph825.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph825/graph825.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph825/nodetypes825.json.
outputting edge types to JSON format...
Edge types outputted to output/graph825/edgetypes825.json.
outputting graph to JSON format...
Graph outputted to output/graph825/graph825.json.
Scenarios: message,login,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.031015396118164062
edges: 1.7404556274414062e-05
Graph 826 saved.
Drawing graph...
Graph drawn to output/graph826/graph826.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph826/graph826.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph826/nodetypes826.json.
outputting edge types to JSON format...
Edge types outputted to output/graph826/edgetypes826.json.
outputting graph to JSON format...
Graph outputted to output/graph826/graph826.json.
Scenarios: message,login,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.02854299545288086
edges: 2.6226043701171875e-05
Graph 827 saved.
Drawing graph...
Graph drawn to output/graph827/graph827.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph827/graph827.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph827/nodetypes827.json.
outputting edge types to JSON format...
Edge types outputted to output/graph827/edgetypes827.json.
outputting graph to JSON format...
Graph outputted to output/graph827/graph827.json.
Scenarios: message,login,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04881882667541504
edges: 1.1920928955078125e-05
Graph 828 saved.
Drawing graph...
Graph drawn to output/graph828/graph828.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph828/graph828.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph828/nodetypes828.json.
outputting edge types to JSON format...
Edge types outputted to output/graph828/edgetypes828.json.
outputting graph to JSON format...
Graph outputted to output/graph828/graph828.json.
Scenarios: message,login,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.02261662483215332
edges: 1.1205673217773438e-05
Graph 829 saved.
Drawing graph...
Graph drawn to output/graph829/graph829.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph829/graph829.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph829/nodetypes829.json.
outputting edge types to JSON format...
Edge types outputted to output/graph829/edgetypes829.json.
outputting graph to JSON format...
Graph outputted to output/graph829/graph829.json.
Scenarios: message,login,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.052620887756347656
edges: 1.1444091796875e-05
Graph 830 saved.
Drawing graph...
Graph drawn to output/graph830/graph830.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph830/graph830.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph830/nodetypes830.json.
outputting edge types to JSON format...
Edge types outputted to output/graph830/edgetypes830.json.
outputting graph to JSON format...
Graph outputted to output/graph830/graph830.json.
Scenarios: message,login,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.05610990524291992
edges: 4.458427429199219e-05
Graph 831 saved.
Drawing graph...
Graph drawn to output/graph831/graph831.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph831/graph831.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph831/nodetypes831.json.
outputting edge types to JSON format...
Edge types outputted to output/graph831/edgetypes831.json.
outputting graph to JSON format...
Graph outputted to output/graph831/graph831.json.
Scenarios: message,login,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.058983802795410156
edges: 1.4066696166992188e-05
Graph 832 saved.
Drawing graph...
Graph drawn to output/graph832/graph832.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph832/graph832.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph832/nodetypes832.json.
outputting edge types to JSON format...
Edge types outputted to output/graph832/edgetypes832.json.
outputting graph to JSON format...
Graph outputted to output/graph832/graph832.json.
Scenarios: message,login,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.030508756637573242
edges: 1.1205673217773438e-05
Graph 833 saved.
Drawing graph...
Graph drawn to output/graph833/graph833.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph833/graph833.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph833/nodetypes833.json.
outputting edge types to JSON format...
Edge types outputted to output/graph833/edgetypes833.json.
outputting graph to JSON format...
Graph outputted to output/graph833/graph833.json.
Scenarios: message,login,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.044507503509521484
edges: 1.1682510375976562e-05
Graph 834 saved.
Drawing graph...
Graph drawn to output/graph834/graph834.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph834/graph834.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph834/nodetypes834.json.
outputting edge types to JSON format...
Edge types outputted to output/graph834/edgetypes834.json.
outputting graph to JSON format...
Graph outputted to output/graph834/graph834.json.
Scenarios: message,login,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.029276609420776367
edges: 1.1205673217773438e-05
Graph 835 saved.
Drawing graph...
Graph drawn to output/graph835/graph835.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph835/graph835.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph835/nodetypes835.json.
outputting edge types to JSON format...
Edge types outputted to output/graph835/edgetypes835.json.
outputting graph to JSON format...
Graph outputted to output/graph835/graph835.json.
Scenarios: message,login,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.05727648735046387
edges: 1.71661376953125e-05
Graph 836 saved.
Drawing graph...
Graph drawn to output/graph836/graph836.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph836/graph836.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph836/nodetypes836.json.
outputting edge types to JSON format...
Edge types outputted to output/graph836/edgetypes836.json.
outputting graph to JSON format...
Graph outputted to output/graph836/graph836.json.
Scenarios: message,login,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.08724665641784668
edges: 1.1444091796875e-05
Graph 837 saved.
Drawing graph...
Graph drawn to output/graph837/graph837.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph837/graph837.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph837/nodetypes837.json.
outputting edge types to JSON format...
Edge types outputted to output/graph837/edgetypes837.json.
outputting graph to JSON format...
Graph outputted to output/graph837/graph837.json.
Scenarios: submit,message,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.025086641311645508
edges: 1.2874603271484375e-05
Graph 838 saved.
Drawing graph...
Graph drawn to output/graph838/graph838.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph838/graph838.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph838/nodetypes838.json.
outputting edge types to JSON format...
Edge types outputted to output/graph838/edgetypes838.json.
outputting graph to JSON format...
Graph outputted to output/graph838/graph838.json.
Scenarios: submit,message,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.0470585823059082
edges: 1.1682510375976562e-05
Graph 839 saved.
Drawing graph...
Graph drawn to output/graph839/graph839.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph839/graph839.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph839/nodetypes839.json.
outputting edge types to JSON format...
Edge types outputted to output/graph839/edgetypes839.json.
outputting graph to JSON format...
Graph outputted to output/graph839/graph839.json.
Scenarios: submit,message,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.032494306564331055
edges: 1.71661376953125e-05
Graph 840 saved.
Drawing graph...
Graph drawn to output/graph840/graph840.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph840/graph840.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph840/nodetypes840.json.
outputting edge types to JSON format...
Edge types outputted to output/graph840/edgetypes840.json.
outputting graph to JSON format...
Graph outputted to output/graph840/graph840.json.
Scenarios: submit,message,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.033286333084106445
edges: 1.4781951904296875e-05
Graph 841 saved.
Drawing graph...
Graph drawn to output/graph841/graph841.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph841/graph841.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph841/nodetypes841.json.
outputting edge types to JSON format...
Edge types outputted to output/graph841/edgetypes841.json.
outputting graph to JSON format...
Graph outputted to output/graph841/graph841.json.
Scenarios: submit,message,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04618382453918457
edges: 1.2874603271484375e-05
Graph 842 saved.
Drawing graph...
Graph drawn to output/graph842/graph842.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph842/graph842.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph842/nodetypes842.json.
outputting edge types to JSON format...
Edge types outputted to output/graph842/edgetypes842.json.
outputting graph to JSON format...
Graph outputted to output/graph842/graph842.json.
Scenarios: submit,message,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.032483577728271484
edges: 1.7642974853515625e-05
Graph 843 saved.
Drawing graph...
Graph drawn to output/graph843/graph843.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph843/graph843.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph843/nodetypes843.json.
outputting edge types to JSON format...
Edge types outputted to output/graph843/edgetypes843.json.
outputting graph to JSON format...
Graph outputted to output/graph843/graph843.json.
Scenarios: submit,message,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.027548789978027344
edges: 1.1920928955078125e-05
Graph 844 saved.
Drawing graph...
Graph drawn to output/graph844/graph844.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph844/graph844.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph844/nodetypes844.json.
outputting edge types to JSON format...
Edge types outputted to output/graph844/edgetypes844.json.
outputting graph to JSON format...
Graph outputted to output/graph844/graph844.json.
Scenarios: submit,message,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.05357933044433594
edges: 1.6689300537109375e-05
Graph 845 saved.
Drawing graph...
Graph drawn to output/graph845/graph845.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph845/graph845.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph845/nodetypes845.json.
outputting edge types to JSON format...
Edge types outputted to output/graph845/edgetypes845.json.
outputting graph to JSON format...
Graph outputted to output/graph845/graph845.json.
Scenarios: submit,message,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.04555082321166992
edges: 1.2874603271484375e-05
Graph 846 saved.
Drawing graph...
Graph drawn to output/graph846/graph846.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph846/graph846.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph846/nodetypes846.json.
outputting edge types to JSON format...
Edge types outputted to output/graph846/edgetypes846.json.
outputting graph to JSON format...
Graph outputted to output/graph846/graph846.json.
Scenarios: submit,message,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.03192853927612305
edges: 1.1444091796875e-05
Graph 847 saved.
Drawing graph...
Graph drawn to output/graph847/graph847.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph847/graph847.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph847/nodetypes847.json.
outputting edge types to JSON format...
Edge types outputted to output/graph847/edgetypes847.json.
outputting graph to JSON format...
Graph outputted to output/graph847/graph847.json.
Scenarios: submit,message,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.07619667053222656
edges: 1.1444091796875e-05
Graph 848 saved.
Drawing graph...
Graph drawn to output/graph848/graph848.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph848/graph848.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph848/nodetypes848.json.
outputting edge types to JSON format...
Edge types outputted to output/graph848/edgetypes848.json.
outputting graph to JSON format...
Graph outputted to output/graph848/graph848.json.
Scenarios: submit,message,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.028438806533813477
edges: 1.1444091796875e-05
Graph 849 saved.
Drawing graph...
Graph drawn to output/graph849/graph849.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph849/graph849.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph849/nodetypes849.json.
outputting edge types to JSON format...
Edge types outputted to output/graph849/edgetypes849.json.
outputting graph to JSON format...
Graph outputted to output/graph849/graph849.json.
Scenarios: submit,query,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.018323421478271484
edges: 1.1682510375976562e-05
Graph 850 saved.
Drawing graph...
Graph drawn to output/graph850/graph850.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph850/graph850.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph850/nodetypes850.json.
outputting edge types to JSON format...
Edge types outputted to output/graph850/edgetypes850.json.
outputting graph to JSON format...
Graph outputted to output/graph850/graph850.json.
Scenarios: submit,query,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.05468320846557617
edges: 1.1920928955078125e-05
Graph 851 saved.
Drawing graph...
Graph drawn to output/graph851/graph851.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph851/graph851.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph851/nodetypes851.json.
outputting edge types to JSON format...
Edge types outputted to output/graph851/edgetypes851.json.
outputting graph to JSON format...
Graph outputted to output/graph851/graph851.json.
Scenarios: submit,query,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03065037727355957
edges: 1.1205673217773438e-05
Graph 852 saved.
Drawing graph...
Graph drawn to output/graph852/graph852.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph852/graph852.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph852/nodetypes852.json.
outputting edge types to JSON format...
Edge types outputted to output/graph852/edgetypes852.json.
outputting graph to JSON format...
Graph outputted to output/graph852/graph852.json.
Scenarios: submit,query,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.05677175521850586
edges: 1.1920928955078125e-05
Graph 853 saved.
Drawing graph...
Graph drawn to output/graph853/graph853.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph853/graph853.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph853/nodetypes853.json.
outputting edge types to JSON format...
Edge types outputted to output/graph853/edgetypes853.json.
outputting graph to JSON format...
Graph outputted to output/graph853/graph853.json.
Scenarios: submit,query,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.07668399810791016
edges: 1.5974044799804688e-05
Graph 854 saved.
Drawing graph...
Graph drawn to output/graph854/graph854.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph854/graph854.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph854/nodetypes854.json.
outputting edge types to JSON format...
Edge types outputted to output/graph854/edgetypes854.json.
outputting graph to JSON format...
Graph outputted to output/graph854/graph854.json.
Scenarios: submit,query,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.11496758460998535
edges: 1.6450881958007812e-05
Graph 855 saved.
Drawing graph...
Graph drawn to output/graph855/graph855.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph855/graph855.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph855/nodetypes855.json.
outputting edge types to JSON format...
Edge types outputted to output/graph855/edgetypes855.json.
outputting graph to JSON format...
Graph outputted to output/graph855/graph855.json.
Scenarios: submit,query,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.014164447784423828
edges: 1.6689300537109375e-05
Graph 856 saved.
Drawing graph...
Graph drawn to output/graph856/graph856.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph856/graph856.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph856/nodetypes856.json.
outputting edge types to JSON format...
Edge types outputted to output/graph856/edgetypes856.json.
outputting graph to JSON format...
Graph outputted to output/graph856/graph856.json.
Scenarios: submit,query,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.06575250625610352
edges: 1.0967254638671875e-05
Graph 857 saved.
Drawing graph...
Graph drawn to output/graph857/graph857.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph857/graph857.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph857/nodetypes857.json.
outputting edge types to JSON format...
Edge types outputted to output/graph857/edgetypes857.json.
outputting graph to JSON format...
Graph outputted to output/graph857/graph857.json.
Scenarios: submit,query,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.06146574020385742
edges: 1.621246337890625e-05
Graph 858 saved.
Drawing graph...
Graph drawn to output/graph858/graph858.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph858/graph858.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph858/nodetypes858.json.
outputting edge types to JSON format...
Edge types outputted to output/graph858/edgetypes858.json.
outputting graph to JSON format...
Graph outputted to output/graph858/graph858.json.
Scenarios: submit,query,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.06739044189453125
edges: 1.621246337890625e-05
Graph 859 saved.
Drawing graph...
Graph drawn to output/graph859/graph859.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph859/graph859.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph859/nodetypes859.json.
outputting edge types to JSON format...
Edge types outputted to output/graph859/edgetypes859.json.
outputting graph to JSON format...
Graph outputted to output/graph859/graph859.json.
Scenarios: submit,query,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.03392624855041504
edges: 2.2649765014648438e-05
Graph 860 saved.
Drawing graph...
Graph drawn to output/graph860/graph860.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph860/graph860.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph860/nodetypes860.json.
outputting edge types to JSON format...
Edge types outputted to output/graph860/edgetypes860.json.
outputting graph to JSON format...
Graph outputted to output/graph860/graph860.json.
Scenarios: submit,query,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.0225980281829834
edges: 1.2636184692382812e-05
Graph 861 saved.
Drawing graph...
Graph drawn to output/graph861/graph861.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph861/graph861.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph861/nodetypes861.json.
outputting edge types to JSON format...
Edge types outputted to output/graph861/edgetypes861.json.
outputting graph to JSON format...
Graph outputted to output/graph861/graph861.json.
Scenarios: submit,ping,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.10953903198242188
edges: 1.621246337890625e-05
Graph 862 saved.
Drawing graph...
Graph drawn to output/graph862/graph862.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph862/graph862.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph862/nodetypes862.json.
outputting edge types to JSON format...
Edge types outputted to output/graph862/edgetypes862.json.
outputting graph to JSON format...
Graph outputted to output/graph862/graph862.json.
Scenarios: submit,ping,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.05664682388305664
edges: 1.6689300537109375e-05
Graph 863 saved.
Drawing graph...
Graph drawn to output/graph863/graph863.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph863/graph863.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph863/nodetypes863.json.
outputting edge types to JSON format...
Edge types outputted to output/graph863/edgetypes863.json.
outputting graph to JSON format...
Graph outputted to output/graph863/graph863.json.
Scenarios: submit,ping,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.05977988243103027
edges: 1.5974044799804688e-05
Graph 864 saved.
Drawing graph...
Graph drawn to output/graph864/graph864.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph864/graph864.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph864/nodetypes864.json.
outputting edge types to JSON format...
Edge types outputted to output/graph864/edgetypes864.json.
outputting graph to JSON format...
Graph outputted to output/graph864/graph864.json.
Scenarios: submit,ping,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.025488615036010742
edges: 1.6450881958007812e-05
Graph 865 saved.
Drawing graph...
Graph drawn to output/graph865/graph865.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph865/graph865.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph865/nodetypes865.json.
outputting edge types to JSON format...
Edge types outputted to output/graph865/edgetypes865.json.
outputting graph to JSON format...
Graph outputted to output/graph865/graph865.json.
Scenarios: submit,ping,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.05689239501953125
edges: 2.765655517578125e-05
Graph 866 saved.
Drawing graph...
Graph drawn to output/graph866/graph866.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph866/graph866.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph866/nodetypes866.json.
outputting edge types to JSON format...
Edge types outputted to output/graph866/edgetypes866.json.
outputting graph to JSON format...
Graph outputted to output/graph866/graph866.json.
Scenarios: submit,ping,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.04855608940124512
edges: 1.52587890625e-05
Graph 867 saved.
Drawing graph...
Graph drawn to output/graph867/graph867.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph867/graph867.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph867/nodetypes867.json.
outputting edge types to JSON format...
Edge types outputted to output/graph867/edgetypes867.json.
outputting graph to JSON format...
Graph outputted to output/graph867/graph867.json.
Scenarios: submit,ping,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.021419525146484375
edges: 1.1682510375976562e-05
Graph 868 saved.
Drawing graph...
Graph drawn to output/graph868/graph868.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph868/graph868.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph868/nodetypes868.json.
outputting edge types to JSON format...
Edge types outputted to output/graph868/edgetypes868.json.
outputting graph to JSON format...
Graph outputted to output/graph868/graph868.json.
Scenarios: submit,ping,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.040381431579589844
edges: 1.1205673217773438e-05
Graph 869 saved.
Drawing graph...
Graph drawn to output/graph869/graph869.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph869/graph869.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph869/nodetypes869.json.
outputting edge types to JSON format...
Edge types outputted to output/graph869/edgetypes869.json.
outputting graph to JSON format...
Graph outputted to output/graph869/graph869.json.
Scenarios: submit,ping,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.05791950225830078
edges: 1.0728836059570312e-05
Graph 870 saved.
Drawing graph...
Graph drawn to output/graph870/graph870.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph870/graph870.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph870/nodetypes870.json.
outputting edge types to JSON format...
Edge types outputted to output/graph870/edgetypes870.json.
outputting graph to JSON format...
Graph outputted to output/graph870/graph870.json.
Scenarios: submit,ping,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.10354828834533691
edges: 1.1682510375976562e-05
Graph 871 saved.
Drawing graph...
Graph drawn to output/graph871/graph871.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph871/graph871.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph871/nodetypes871.json.
outputting edge types to JSON format...
Edge types outputted to output/graph871/edgetypes871.json.
outputting graph to JSON format...
Graph outputted to output/graph871/graph871.json.
Scenarios: submit,ping,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.024962186813354492
edges: 1.1205673217773438e-05
Graph 872 saved.
Drawing graph...
Graph drawn to output/graph872/graph872.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph872/graph872.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph872/nodetypes872.json.
outputting edge types to JSON format...
Edge types outputted to output/graph872/edgetypes872.json.
outputting graph to JSON format...
Graph outputted to output/graph872/graph872.json.
Scenarios: submit,ping,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.0831003189086914
edges: 1.6450881958007812e-05
Graph 873 saved.
Drawing graph...
Graph drawn to output/graph873/graph873.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph873/graph873.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph873/nodetypes873.json.
outputting edge types to JSON format...
Edge types outputted to output/graph873/edgetypes873.json.
outputting graph to JSON format...
Graph outputted to output/graph873/graph873.json.
Scenarios: submit,databaseentry,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.06517410278320312
edges: 2.1219253540039062e-05
Graph 874 saved.
Drawing graph...
Graph drawn to output/graph874/graph874.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph874/graph874.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph874/nodetypes874.json.
outputting edge types to JSON format...
Edge types outputted to output/graph874/edgetypes874.json.
outputting graph to JSON format...
Graph outputted to output/graph874/graph874.json.
Scenarios: submit,databaseentry,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.11739063262939453
edges: 1.1205673217773438e-05
Graph 875 saved.
Drawing graph...
Graph drawn to output/graph875/graph875.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph875/graph875.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph875/nodetypes875.json.
outputting edge types to JSON format...
Edge types outputted to output/graph875/edgetypes875.json.
outputting graph to JSON format...
Graph outputted to output/graph875/graph875.json.
Scenarios: submit,databaseentry,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.08958029747009277
edges: 1.1444091796875e-05
Graph 876 saved.
Drawing graph...
Graph drawn to output/graph876/graph876.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph876/graph876.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph876/nodetypes876.json.
outputting edge types to JSON format...
Edge types outputted to output/graph876/edgetypes876.json.
outputting graph to JSON format...
Graph outputted to output/graph876/graph876.json.
Scenarios: submit,databaseentry,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.0308382511138916
edges: 1.1682510375976562e-05
Graph 877 saved.
Drawing graph...
Graph drawn to output/graph877/graph877.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph877/graph877.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph877/nodetypes877.json.
outputting edge types to JSON format...
Edge types outputted to output/graph877/edgetypes877.json.
outputting graph to JSON format...
Graph outputted to output/graph877/graph877.json.
Scenarios: submit,databaseentry,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.043894290924072266
edges: 2.86102294921875e-05
Graph 878 saved.
Drawing graph...
Graph drawn to output/graph878/graph878.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph878/graph878.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph878/nodetypes878.json.
outputting edge types to JSON format...
Edge types outputted to output/graph878/edgetypes878.json.
outputting graph to JSON format...
Graph outputted to output/graph878/graph878.json.
Scenarios: submit,databaseentry,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.029410839080810547
edges: 1.1444091796875e-05
Graph 879 saved.
Drawing graph...
Graph drawn to output/graph879/graph879.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph879/graph879.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph879/nodetypes879.json.
outputting edge types to JSON format...
Edge types outputted to output/graph879/edgetypes879.json.
outputting graph to JSON format...
Graph outputted to output/graph879/graph879.json.
Scenarios: submit,databaseentry,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.08367800712585449
edges: 1.1205673217773438e-05
Graph 880 saved.
Drawing graph...
Graph drawn to output/graph880/graph880.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph880/graph880.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph880/nodetypes880.json.
outputting edge types to JSON format...
Edge types outputted to output/graph880/edgetypes880.json.
outputting graph to JSON format...
Graph outputted to output/graph880/graph880.json.
Scenarios: submit,databaseentry,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.011586189270019531
edges: 1.4066696166992188e-05
Graph 881 saved.
Drawing graph...
Graph drawn to output/graph881/graph881.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph881/graph881.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph881/nodetypes881.json.
outputting edge types to JSON format...
Edge types outputted to output/graph881/edgetypes881.json.
outputting graph to JSON format...
Graph outputted to output/graph881/graph881.json.
Scenarios: submit,databaseentry,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.06144118309020996
edges: 1.1444091796875e-05
Graph 882 saved.
Drawing graph...
Graph drawn to output/graph882/graph882.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph882/graph882.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph882/nodetypes882.json.
outputting edge types to JSON format...
Edge types outputted to output/graph882/edgetypes882.json.
outputting graph to JSON format...
Graph outputted to output/graph882/graph882.json.
Scenarios: submit,databaseentry,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.03851819038391113
edges: 1.6689300537109375e-05
Graph 883 saved.
Drawing graph...
Graph drawn to output/graph883/graph883.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph883/graph883.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph883/nodetypes883.json.
outputting edge types to JSON format...
Edge types outputted to output/graph883/edgetypes883.json.
outputting graph to JSON format...
Graph outputted to output/graph883/graph883.json.
Scenarios: submit,databaseentry,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.05051851272583008
edges: 1.0967254638671875e-05
Graph 884 saved.
Drawing graph...
Graph drawn to output/graph884/graph884.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph884/graph884.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph884/nodetypes884.json.
outputting edge types to JSON format...
Edge types outputted to output/graph884/edgetypes884.json.
outputting graph to JSON format...
Graph outputted to output/graph884/graph884.json.
Scenarios: submit,databaseentry,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.05901002883911133
edges: 1.1444091796875e-05
Graph 885 saved.
Drawing graph...
Graph drawn to output/graph885/graph885.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph885/graph885.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph885/nodetypes885.json.
outputting edge types to JSON format...
Edge types outputted to output/graph885/edgetypes885.json.
outputting graph to JSON format...
Graph outputted to output/graph885/graph885.json.
Scenarios: submit,login,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.0170137882232666
edges: 1.5497207641601562e-05
Graph 886 saved.
Drawing graph...
Graph drawn to output/graph886/graph886.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph886/graph886.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph886/nodetypes886.json.
outputting edge types to JSON format...
Edge types outputted to output/graph886/edgetypes886.json.
outputting graph to JSON format...
Graph outputted to output/graph886/graph886.json.
Scenarios: submit,login,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.021018505096435547
edges: 1.1682510375976562e-05
Graph 887 saved.
Drawing graph...
Graph drawn to output/graph887/graph887.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph887/graph887.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph887/nodetypes887.json.
outputting edge types to JSON format...
Edge types outputted to output/graph887/edgetypes887.json.
outputting graph to JSON format...
Graph outputted to output/graph887/graph887.json.
Scenarios: submit,login,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Scenarios: submit,login,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.04206252098083496
edges: 1.8596649169921875e-05
Graph 888 saved.
Drawing graph...
Graph drawn to output/graph888/graph888.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph888/graph888.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph888/nodetypes888.json.
outputting edge types to JSON format...
Edge types outputted to output/graph888/edgetypes888.json.
outputting graph to JSON format...
Graph outputted to output/graph888/graph888.json.
Scenarios: submit,login,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.009181022644042969
edges: 1.1444091796875e-05
Graph 889 saved.
Drawing graph...
Graph drawn to output/graph889/graph889.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph889/graph889.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph889/nodetypes889.json.
outputting edge types to JSON format...
Edge types outputted to output/graph889/edgetypes889.json.
outputting graph to JSON format...
Graph outputted to output/graph889/graph889.json.
Scenarios: submit,login,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.024982213973999023
edges: 1.0967254638671875e-05
Graph 890 saved.
Drawing graph...
Graph drawn to output/graph890/graph890.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph890/graph890.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph890/nodetypes890.json.
outputting edge types to JSON format...
Edge types outputted to output/graph890/edgetypes890.json.
outputting graph to JSON format...
Graph outputted to output/graph890/graph890.json.
Scenarios: submit,login,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.06271195411682129
edges: 1.5974044799804688e-05
Graph 891 saved.
Drawing graph...
Graph drawn to output/graph891/graph891.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph891/graph891.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph891/nodetypes891.json.
outputting edge types to JSON format...
Edge types outputted to output/graph891/edgetypes891.json.
outputting graph to JSON format...
Graph outputted to output/graph891/graph891.json.
Scenarios: submit,login,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.03496360778808594
edges: 1.1920928955078125e-05
Graph 892 saved.
Drawing graph...
Graph drawn to output/graph892/graph892.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph892/graph892.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph892/nodetypes892.json.
outputting edge types to JSON format...
Edge types outputted to output/graph892/edgetypes892.json.
outputting graph to JSON format...
Graph outputted to output/graph892/graph892.json.
Scenarios: submit,login,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.026626110076904297
edges: 1.4066696166992188e-05
Graph 893 saved.
Drawing graph...
Graph drawn to output/graph893/graph893.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph893/graph893.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph893/nodetypes893.json.
outputting edge types to JSON format...
Edge types outputted to output/graph893/edgetypes893.json.
outputting graph to JSON format...
Graph outputted to output/graph893/graph893.json.
Scenarios: submit,login,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.2722790241241455
edges: 1.1444091796875e-05
Graph 894 saved.
Drawing graph...
Graph drawn to output/graph894/graph894.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph894/graph894.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph894/nodetypes894.json.
outputting edge types to JSON format...
Edge types outputted to output/graph894/edgetypes894.json.
outputting graph to JSON format...
Graph outputted to output/graph894/graph894.json.
Scenarios: submit,login,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.06821393966674805
edges: 1.2874603271484375e-05
Graph 895 saved.
Drawing graph...
Graph drawn to output/graph895/graph895.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph895/graph895.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph895/nodetypes895.json.
outputting edge types to JSON format...
Edge types outputted to output/graph895/edgetypes895.json.
outputting graph to JSON format...
Graph outputted to output/graph895/graph895.json.
Scenarios: submit,login,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.0357203483581543
edges: 3.409385681152344e-05
Graph 896 saved.
Drawing graph...
Graph drawn to output/graph896/graph896.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph896/graph896.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph896/nodetypes896.json.
outputting edge types to JSON format...
Edge types outputted to output/graph896/edgetypes896.json.
outputting graph to JSON format...
Graph outputted to output/graph896/graph896.json.
Scenarios: query,message,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.03491783142089844
edges: 2.1219253540039062e-05
Graph 897 saved.
Drawing graph...
Graph drawn to output/graph897/graph897.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph897/graph897.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph897/nodetypes897.json.
outputting edge types to JSON format...
Edge types outputted to output/graph897/edgetypes897.json.
outputting graph to JSON format...
Graph outputted to output/graph897/graph897.json.
Scenarios: query,message,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.03951716423034668
edges: 1.239776611328125e-05
Graph 898 saved.
Drawing graph...
Graph drawn to output/graph898/graph898.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph898/graph898.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph898/nodetypes898.json.
outputting edge types to JSON format...
Edge types outputted to output/graph898/edgetypes898.json.
outputting graph to JSON format...
Graph outputted to output/graph898/graph898.json.
Scenarios: query,message,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.19387531280517578
edges: 2.4318695068359375e-05
Graph 899 saved.
Drawing graph...
Graph drawn to output/graph899/graph899.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph899/graph899.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph899/nodetypes899.json.
outputting edge types to JSON format...
Edge types outputted to output/graph899/edgetypes899.json.
outputting graph to JSON format...
Graph outputted to output/graph899/graph899.json.
Scenarios: query,message,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.05878305435180664
edges: 4.410743713378906e-05
Graph 900 saved.
Drawing graph...
Graph drawn to output/graph900/graph900.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph900/graph900.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph900/nodetypes900.json.
outputting edge types to JSON format...
Edge types outputted to output/graph900/edgetypes900.json.
outputting graph to JSON format...
Graph outputted to output/graph900/graph900.json.
Scenarios: query,message,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.08584809303283691
edges: 1.1920928955078125e-05
Graph 901 saved.
Drawing graph...
Graph drawn to output/graph901/graph901.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph901/graph901.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph901/nodetypes901.json.
outputting edge types to JSON format...
Edge types outputted to output/graph901/edgetypes901.json.
outputting graph to JSON format...
Graph outputted to output/graph901/graph901.json.
Scenarios: query,message,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03866147994995117
edges: 1.0967254638671875e-05
Graph 902 saved.
Drawing graph...
Graph drawn to output/graph902/graph902.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph902/graph902.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph902/nodetypes902.json.
outputting edge types to JSON format...
Edge types outputted to output/graph902/edgetypes902.json.
outputting graph to JSON format...
Graph outputted to output/graph902/graph902.json.
Scenarios: query,message,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.11116647720336914
edges: 2.0265579223632812e-05
Graph 903 saved.
Drawing graph...
Graph drawn to output/graph903/graph903.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph903/graph903.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph903/nodetypes903.json.
outputting edge types to JSON format...
Edge types outputted to output/graph903/edgetypes903.json.
outputting graph to JSON format...
Graph outputted to output/graph903/graph903.json.
Scenarios: query,message,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.054207563400268555
edges: 4.601478576660156e-05
Graph 904 saved.
Drawing graph...
Graph drawn to output/graph904/graph904.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph904/graph904.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph904/nodetypes904.json.
outputting edge types to JSON format...
Edge types outputted to output/graph904/edgetypes904.json.
outputting graph to JSON format...
Graph outputted to output/graph904/graph904.json.
Scenarios: query,message,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.10479903221130371
edges: 1.239776611328125e-05
Graph 905 saved.
Drawing graph...
Graph drawn to output/graph905/graph905.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph905/graph905.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph905/nodetypes905.json.
outputting edge types to JSON format...
Edge types outputted to output/graph905/edgetypes905.json.
outputting graph to JSON format...
Graph outputted to output/graph905/graph905.json.
Scenarios: query,message,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.08935260772705078
edges: 1.1920928955078125e-05
Graph 906 saved.
Drawing graph...
Graph drawn to output/graph906/graph906.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph906/graph906.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph906/nodetypes906.json.
outputting edge types to JSON format...
Edge types outputted to output/graph906/edgetypes906.json.
outputting graph to JSON format...
Graph outputted to output/graph906/graph906.json.
Scenarios: query,message,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.0964052677154541
edges: 1.1682510375976562e-05
Graph 907 saved.
Drawing graph...
Graph drawn to output/graph907/graph907.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph907/graph907.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph907/nodetypes907.json.
outputting edge types to JSON format...
Edge types outputted to output/graph907/edgetypes907.json.
outputting graph to JSON format...
Graph outputted to output/graph907/graph907.json.
Scenarios: query,message,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.14880585670471191
edges: 1.2636184692382812e-05
Graph 908 saved.
Drawing graph...
Graph drawn to output/graph908/graph908.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph908/graph908.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph908/nodetypes908.json.
outputting edge types to JSON format...
Edge types outputted to output/graph908/edgetypes908.json.
outputting graph to JSON format...
Graph outputted to output/graph908/graph908.json.
Scenarios: query,submit,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.06564545631408691
edges: 1.1444091796875e-05
Graph 909 saved.
Drawing graph...
Graph drawn to output/graph909/graph909.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph909/graph909.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph909/nodetypes909.json.
outputting edge types to JSON format...
Edge types outputted to output/graph909/edgetypes909.json.
outputting graph to JSON format...
Graph outputted to output/graph909/graph909.json.
Scenarios: query,submit,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.01851630210876465
edges: 1.1682510375976562e-05
Graph 910 saved.
Drawing graph...
Graph drawn to output/graph910/graph910.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph910/graph910.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph910/nodetypes910.json.
outputting edge types to JSON format...
Edge types outputted to output/graph910/edgetypes910.json.
outputting graph to JSON format...
Graph outputted to output/graph910/graph910.json.
Scenarios: query,submit,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.0962378978729248
edges: 2.0503997802734375e-05
Graph 911 saved.
Drawing graph...
Graph drawn to output/graph911/graph911.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph911/graph911.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph911/nodetypes911.json.
outputting edge types to JSON format...
Edge types outputted to output/graph911/edgetypes911.json.
outputting graph to JSON format...
Graph outputted to output/graph911/graph911.json.
Scenarios: query,submit,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.1310112476348877
edges: 1.1444091796875e-05
Graph 912 saved.
Drawing graph...
Graph drawn to output/graph912/graph912.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph912/graph912.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph912/nodetypes912.json.
outputting edge types to JSON format...
Edge types outputted to output/graph912/edgetypes912.json.
outputting graph to JSON format...
Graph outputted to output/graph912/graph912.json.
Scenarios: query,submit,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.05380129814147949
edges: 1.1205673217773438e-05
Graph 913 saved.
Drawing graph...
Graph drawn to output/graph913/graph913.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph913/graph913.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph913/nodetypes913.json.
outputting edge types to JSON format...
Edge types outputted to output/graph913/edgetypes913.json.
outputting graph to JSON format...
Graph outputted to output/graph913/graph913.json.
Scenarios: query,submit,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.0236053466796875
edges: 1.1205673217773438e-05
Graph 914 saved.
Drawing graph...
Graph drawn to output/graph914/graph914.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph914/graph914.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph914/nodetypes914.json.
outputting edge types to JSON format...
Edge types outputted to output/graph914/edgetypes914.json.
outputting graph to JSON format...
Graph outputted to output/graph914/graph914.json.
Scenarios: query,submit,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.058301448822021484
edges: 1.1205673217773438e-05
Graph 915 saved.
Drawing graph...
Graph drawn to output/graph915/graph915.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph915/graph915.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph915/nodetypes915.json.
outputting edge types to JSON format...
Edge types outputted to output/graph915/edgetypes915.json.
outputting graph to JSON format...
Graph outputted to output/graph915/graph915.json.
Scenarios: query,submit,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.09424781799316406
edges: 1.1920928955078125e-05
Graph 916 saved.
Drawing graph...
Graph drawn to output/graph916/graph916.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph916/graph916.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph916/nodetypes916.json.
outputting edge types to JSON format...
Edge types outputted to output/graph916/edgetypes916.json.
outputting graph to JSON format...
Graph outputted to output/graph916/graph916.json.
Scenarios: query,submit,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.019529342651367188
edges: 1.7404556274414062e-05
Graph 917 saved.
Drawing graph...
Graph drawn to output/graph917/graph917.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph917/graph917.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph917/nodetypes917.json.
outputting edge types to JSON format...
Edge types outputted to output/graph917/edgetypes917.json.
outputting graph to JSON format...
Graph outputted to output/graph917/graph917.json.
Scenarios: query,submit,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.20637083053588867
edges: 1.1444091796875e-05
Graph 918 saved.
Drawing graph...
Graph drawn to output/graph918/graph918.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph918/graph918.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph918/nodetypes918.json.
outputting edge types to JSON format...
Edge types outputted to output/graph918/edgetypes918.json.
outputting graph to JSON format...
Graph outputted to output/graph918/graph918.json.
Scenarios: query,submit,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.014249086380004883
edges: 1.2159347534179688e-05
Graph 919 saved.
Drawing graph...
Graph drawn to output/graph919/graph919.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph919/graph919.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph919/nodetypes919.json.
outputting edge types to JSON format...
Edge types outputted to output/graph919/edgetypes919.json.
outputting graph to JSON format...
Graph outputted to output/graph919/graph919.json.
Scenarios: query,submit,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.06509256362915039
edges: 1.1205673217773438e-05
Graph 920 saved.
Drawing graph...
Graph drawn to output/graph920/graph920.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph920/graph920.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph920/nodetypes920.json.
outputting edge types to JSON format...
Edge types outputted to output/graph920/edgetypes920.json.
outputting graph to JSON format...
Graph outputted to output/graph920/graph920.json.
Scenarios: query,ping,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.07859253883361816
edges: 1.239776611328125e-05
Graph 921 saved.
Drawing graph...
Graph drawn to output/graph921/graph921.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph921/graph921.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph921/nodetypes921.json.
outputting edge types to JSON format...
Edge types outputted to output/graph921/edgetypes921.json.
outputting graph to JSON format...
Graph outputted to output/graph921/graph921.json.
Scenarios: query,ping,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.05832195281982422
edges: 1.1920928955078125e-05
Graph 922 saved.
Drawing graph...
Graph drawn to output/graph922/graph922.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph922/graph922.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph922/nodetypes922.json.
outputting edge types to JSON format...
Edge types outputted to output/graph922/edgetypes922.json.
outputting graph to JSON format...
Graph outputted to output/graph922/graph922.json.
Scenarios: query,ping,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.11554145812988281
edges: 1.4781951904296875e-05
Graph 923 saved.
Drawing graph...
Graph drawn to output/graph923/graph923.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph923/graph923.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph923/nodetypes923.json.
outputting edge types to JSON format...
Edge types outputted to output/graph923/edgetypes923.json.
outputting graph to JSON format...
Graph outputted to output/graph923/graph923.json.
Scenarios: query,ping,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.05582022666931152
edges: 1.5735626220703125e-05
Graph 924 saved.
Drawing graph...
Graph drawn to output/graph924/graph924.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph924/graph924.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph924/nodetypes924.json.
outputting edge types to JSON format...
Edge types outputted to output/graph924/edgetypes924.json.
outputting graph to JSON format...
Graph outputted to output/graph924/graph924.json.
Scenarios: query,ping,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.12372279167175293
edges: 1.0967254638671875e-05
Graph 925 saved.
Drawing graph...
Graph drawn to output/graph925/graph925.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph925/graph925.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph925/nodetypes925.json.
outputting edge types to JSON format...
Edge types outputted to output/graph925/edgetypes925.json.
outputting graph to JSON format...
Graph outputted to output/graph925/graph925.json.
Scenarios: query,ping,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.010224103927612305
edges: 1.5974044799804688e-05
Graph 926 saved.
Drawing graph...
Graph drawn to output/graph926/graph926.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph926/graph926.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph926/nodetypes926.json.
outputting edge types to JSON format...
Edge types outputted to output/graph926/edgetypes926.json.
outputting graph to JSON format...
Graph outputted to output/graph926/graph926.json.
Scenarios: query,ping,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.03103327751159668
edges: 1.1682510375976562e-05
Graph 927 saved.
Drawing graph...
Graph drawn to output/graph927/graph927.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph927/graph927.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph927/nodetypes927.json.
outputting edge types to JSON format...
Edge types outputted to output/graph927/edgetypes927.json.
outputting graph to JSON format...
Graph outputted to output/graph927/graph927.json.
Scenarios: query,ping,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.08202886581420898
edges: 1.1205673217773438e-05
Graph 928 saved.
Drawing graph...
Graph drawn to output/graph928/graph928.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph928/graph928.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph928/nodetypes928.json.
outputting edge types to JSON format...
Edge types outputted to output/graph928/edgetypes928.json.
outputting graph to JSON format...
Graph outputted to output/graph928/graph928.json.
Scenarios: query,ping,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.10992789268493652
edges: 1.5735626220703125e-05
Graph 929 saved.
Drawing graph...
Graph drawn to output/graph929/graph929.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph929/graph929.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph929/nodetypes929.json.
outputting edge types to JSON format...
Edge types outputted to output/graph929/edgetypes929.json.
outputting graph to JSON format...
Graph outputted to output/graph929/graph929.json.
Scenarios: query,ping,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.0800926685333252
edges: 1.71661376953125e-05
Graph 930 saved.
Drawing graph...
Graph drawn to output/graph930/graph930.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph930/graph930.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph930/nodetypes930.json.
outputting edge types to JSON format...
Edge types outputted to output/graph930/edgetypes930.json.
outputting graph to JSON format...
Graph outputted to output/graph930/graph930.json.
Scenarios: query,ping,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.03883552551269531
edges: 1.0967254638671875e-05
Graph 931 saved.
Drawing graph...
Graph drawn to output/graph931/graph931.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph931/graph931.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph931/nodetypes931.json.
outputting edge types to JSON format...
Edge types outputted to output/graph931/edgetypes931.json.
outputting graph to JSON format...
Graph outputted to output/graph931/graph931.json.
Scenarios: query,ping,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.1589679718017578
edges: 1.6927719116210938e-05
Graph 932 saved.
Drawing graph...
Graph drawn to output/graph932/graph932.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph932/graph932.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph932/nodetypes932.json.
outputting edge types to JSON format...
Edge types outputted to output/graph932/edgetypes932.json.
outputting graph to JSON format...
Graph outputted to output/graph932/graph932.json.
Scenarios: query,databaseentry,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.03772258758544922
edges: 1.1920928955078125e-05
Graph 933 saved.
Drawing graph...
Graph drawn to output/graph933/graph933.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph933/graph933.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph933/nodetypes933.json.
outputting edge types to JSON format...
Edge types outputted to output/graph933/edgetypes933.json.
outputting graph to JSON format...
Graph outputted to output/graph933/graph933.json.
Scenarios: query,databaseentry,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.06690454483032227
edges: 1.1920928955078125e-05
Graph 934 saved.
Drawing graph...
Graph drawn to output/graph934/graph934.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph934/graph934.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph934/nodetypes934.json.
outputting edge types to JSON format...
Edge types outputted to output/graph934/edgetypes934.json.
outputting graph to JSON format...
Graph outputted to output/graph934/graph934.json.
Scenarios: query,databaseentry,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.042975425720214844
edges: 1.5974044799804688e-05
Graph 935 saved.
Drawing graph...
Graph drawn to output/graph935/graph935.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph935/graph935.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph935/nodetypes935.json.
outputting edge types to JSON format...
Edge types outputted to output/graph935/edgetypes935.json.
outputting graph to JSON format...
Graph outputted to output/graph935/graph935.json.
Scenarios: query,databaseentry,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.011443138122558594
edges: 1.5735626220703125e-05
Graph 936 saved.
Drawing graph...
Graph drawn to output/graph936/graph936.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph936/graph936.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph936/nodetypes936.json.
outputting edge types to JSON format...
Edge types outputted to output/graph936/edgetypes936.json.
outputting graph to JSON format...
Graph outputted to output/graph936/graph936.json.
Scenarios: query,databaseentry,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.1095571517944336
edges: 1.71661376953125e-05
Graph 937 saved.
Drawing graph...
Graph drawn to output/graph937/graph937.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph937/graph937.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph937/nodetypes937.json.
outputting edge types to JSON format...
Edge types outputted to output/graph937/edgetypes937.json.
outputting graph to JSON format...
Graph outputted to output/graph937/graph937.json.
Scenarios: query,databaseentry,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.10868525505065918
edges: 1.2159347534179688e-05
Graph 938 saved.
Drawing graph...
Graph drawn to output/graph938/graph938.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph938/graph938.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph938/nodetypes938.json.
outputting edge types to JSON format...
Edge types outputted to output/graph938/edgetypes938.json.
outputting graph to JSON format...
Graph outputted to output/graph938/graph938.json.
Scenarios: query,databaseentry,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.1601879596710205
edges: 1.6927719116210938e-05
Graph 939 saved.
Drawing graph...
Graph drawn to output/graph939/graph939.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph939/graph939.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph939/nodetypes939.json.
outputting edge types to JSON format...
Edge types outputted to output/graph939/edgetypes939.json.
outputting graph to JSON format...
Graph outputted to output/graph939/graph939.json.
Scenarios: query,databaseentry,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.018518447875976562
edges: 1.1444091796875e-05
Graph 940 saved.
Drawing graph...
Graph drawn to output/graph940/graph940.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph940/graph940.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph940/nodetypes940.json.
outputting edge types to JSON format...
Edge types outputted to output/graph940/edgetypes940.json.
outputting graph to JSON format...
Graph outputted to output/graph940/graph940.json.
Scenarios: query,databaseentry,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.10400843620300293
edges: 1.1682510375976562e-05
Graph 941 saved.
Drawing graph...
Graph drawn to output/graph941/graph941.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph941/graph941.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph941/nodetypes941.json.
outputting edge types to JSON format...
Edge types outputted to output/graph941/edgetypes941.json.
outputting graph to JSON format...
Graph outputted to output/graph941/graph941.json.
Scenarios: query,databaseentry,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.07620692253112793
edges: 1.1444091796875e-05
Graph 942 saved.
Drawing graph...
Graph drawn to output/graph942/graph942.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph942/graph942.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph942/nodetypes942.json.
outputting edge types to JSON format...
Edge types outputted to output/graph942/edgetypes942.json.
outputting graph to JSON format...
Graph outputted to output/graph942/graph942.json.
Scenarios: query,databaseentry,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.15809369087219238
edges: 1.1682510375976562e-05
Graph 943 saved.
Drawing graph...
Graph drawn to output/graph943/graph943.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph943/graph943.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph943/nodetypes943.json.
outputting edge types to JSON format...
Edge types outputted to output/graph943/edgetypes943.json.
outputting graph to JSON format...
Graph outputted to output/graph943/graph943.json.
Scenarios: query,databaseentry,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.07929754257202148
edges: 1.7404556274414062e-05
Graph 944 saved.
Drawing graph...
Graph drawn to output/graph944/graph944.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph944/graph944.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph944/nodetypes944.json.
outputting edge types to JSON format...
Edge types outputted to output/graph944/edgetypes944.json.
outputting graph to JSON format...
Graph outputted to output/graph944/graph944.json.
Scenarios: query,login,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.017085552215576172
edges: 1.1682510375976562e-05
Graph 945 saved.
Drawing graph...
Graph drawn to output/graph945/graph945.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph945/graph945.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph945/nodetypes945.json.
outputting edge types to JSON format...
Edge types outputted to output/graph945/edgetypes945.json.
outputting graph to JSON format...
Graph outputted to output/graph945/graph945.json.
Scenarios: query,login,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.09626197814941406
edges: 1.4543533325195312e-05
Graph 946 saved.
Drawing graph...
Graph drawn to output/graph946/graph946.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph946/graph946.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph946/nodetypes946.json.
outputting edge types to JSON format...
Edge types outputted to output/graph946/edgetypes946.json.
outputting graph to JSON format...
Graph outputted to output/graph946/graph946.json.
Scenarios: query,login,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04457879066467285
edges: 1.1682510375976562e-05
Graph 947 saved.
Drawing graph...
Graph drawn to output/graph947/graph947.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph947/graph947.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph947/nodetypes947.json.
outputting edge types to JSON format...
Edge types outputted to output/graph947/edgetypes947.json.
outputting graph to JSON format...
Graph outputted to output/graph947/graph947.json.
Scenarios: query,login,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.08576703071594238
edges: 1.1920928955078125e-05
Graph 948 saved.
Drawing graph...
Graph drawn to output/graph948/graph948.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph948/graph948.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph948/nodetypes948.json.
outputting edge types to JSON format...
Edge types outputted to output/graph948/edgetypes948.json.
outputting graph to JSON format...
Graph outputted to output/graph948/graph948.json.
Scenarios: query,login,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.1369180679321289
edges: 1.0967254638671875e-05
Graph 949 saved.
Drawing graph...
Graph drawn to output/graph949/graph949.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph949/graph949.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph949/nodetypes949.json.
outputting edge types to JSON format...
Edge types outputted to output/graph949/edgetypes949.json.
outputting graph to JSON format...
Graph outputted to output/graph949/graph949.json.
Scenarios: query,login,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04796624183654785
edges: 1.0967254638671875e-05
Graph 950 saved.
Drawing graph...
Graph drawn to output/graph950/graph950.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph950/graph950.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph950/nodetypes950.json.
outputting edge types to JSON format...
Edge types outputted to output/graph950/edgetypes950.json.
outputting graph to JSON format...
Graph outputted to output/graph950/graph950.json.
Scenarios: query,login,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.06855249404907227
edges: 1.9311904907226562e-05
Graph 951 saved.
Drawing graph...
Graph drawn to output/graph951/graph951.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph951/graph951.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph951/nodetypes951.json.
outputting edge types to JSON format...
Edge types outputted to output/graph951/edgetypes951.json.
outputting graph to JSON format...
Graph outputted to output/graph951/graph951.json.
Scenarios: query,login,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.04654216766357422
edges: 1.430511474609375e-05
Graph 952 saved.
Drawing graph...
Graph drawn to output/graph952/graph952.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph952/graph952.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph952/nodetypes952.json.
outputting edge types to JSON format...
Edge types outputted to output/graph952/edgetypes952.json.
outputting graph to JSON format...
Graph outputted to output/graph952/graph952.json.
Scenarios: query,login,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.10768318176269531
edges: 1.8596649169921875e-05
Graph 953 saved.
Drawing graph...
Graph drawn to output/graph953/graph953.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph953/graph953.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph953/nodetypes953.json.
outputting edge types to JSON format...
Edge types outputted to output/graph953/edgetypes953.json.
outputting graph to JSON format...
Graph outputted to output/graph953/graph953.json.
Scenarios: query,login,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.0753474235534668
edges: 1.1205673217773438e-05
Graph 954 saved.
Drawing graph...
Graph drawn to output/graph954/graph954.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph954/graph954.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph954/nodetypes954.json.
outputting edge types to JSON format...
Edge types outputted to output/graph954/edgetypes954.json.
outputting graph to JSON format...
Graph outputted to output/graph954/graph954.json.
Scenarios: query,login,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.08345770835876465
edges: 1.1205673217773438e-05
Graph 955 saved.
Drawing graph...
Graph drawn to output/graph955/graph955.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph955/graph955.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph955/nodetypes955.json.
outputting edge types to JSON format...
Edge types outputted to output/graph955/edgetypes955.json.
outputting graph to JSON format...
Graph outputted to output/graph955/graph955.json.
Scenarios: query,login,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.008347749710083008
edges: 1.3828277587890625e-05
Graph 956 saved.
Drawing graph...
Graph drawn to output/graph956/graph956.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph956/graph956.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph956/nodetypes956.json.
outputting edge types to JSON format...
Edge types outputted to output/graph956/edgetypes956.json.
outputting graph to JSON format...
Graph outputted to output/graph956/graph956.json.
Scenarios: ping,message,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.14038968086242676
edges: 1.1444091796875e-05
Graph 957 saved.
Drawing graph...
Graph drawn to output/graph957/graph957.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph957/graph957.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph957/nodetypes957.json.
outputting edge types to JSON format...
Edge types outputted to output/graph957/edgetypes957.json.
outputting graph to JSON format...
Graph outputted to output/graph957/graph957.json.
Scenarios: ping,message,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.055860042572021484
edges: 1.1444091796875e-05
Graph 958 saved.
Drawing graph...
Graph drawn to output/graph958/graph958.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph958/graph958.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph958/nodetypes958.json.
outputting edge types to JSON format...
Edge types outputted to output/graph958/edgetypes958.json.
outputting graph to JSON format...
Graph outputted to output/graph958/graph958.json.
Scenarios: ping,message,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.15054559707641602
edges: 1.0967254638671875e-05
Graph 959 saved.
Drawing graph...
Graph drawn to output/graph959/graph959.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph959/graph959.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph959/nodetypes959.json.
outputting edge types to JSON format...
Edge types outputted to output/graph959/edgetypes959.json.
outputting graph to JSON format...
Graph outputted to output/graph959/graph959.json.
Scenarios: ping,message,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.08350563049316406
edges: 1.239776611328125e-05
Graph 960 saved.
Drawing graph...
Graph drawn to output/graph960/graph960.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph960/graph960.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph960/nodetypes960.json.
outputting edge types to JSON format...
Edge types outputted to output/graph960/edgetypes960.json.
outputting graph to JSON format...
Graph outputted to output/graph960/graph960.json.
Scenarios: ping,message,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04237723350524902
edges: 1.3113021850585938e-05
Graph 961 saved.
Drawing graph...
Graph drawn to output/graph961/graph961.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph961/graph961.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph961/nodetypes961.json.
outputting edge types to JSON format...
Edge types outputted to output/graph961/edgetypes961.json.
outputting graph to JSON format...
Graph outputted to output/graph961/graph961.json.
Scenarios: ping,message,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.0332789421081543
edges: 1.1920928955078125e-05
Graph 962 saved.
Drawing graph...
Graph drawn to output/graph962/graph962.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph962/graph962.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph962/nodetypes962.json.
outputting edge types to JSON format...
Edge types outputted to output/graph962/edgetypes962.json.
outputting graph to JSON format...
Graph outputted to output/graph962/graph962.json.
Scenarios: ping,message,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.02444291114807129
edges: 1.5735626220703125e-05
Graph 963 saved.
Drawing graph...
Graph drawn to output/graph963/graph963.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph963/graph963.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph963/nodetypes963.json.
outputting edge types to JSON format...
Edge types outputted to output/graph963/edgetypes963.json.
outputting graph to JSON format...
Graph outputted to output/graph963/graph963.json.
Scenarios: ping,message,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.040605783462524414
edges: 1.6689300537109375e-05
Graph 964 saved.
Drawing graph...
Graph drawn to output/graph964/graph964.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph964/graph964.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph964/nodetypes964.json.
outputting edge types to JSON format...
Edge types outputted to output/graph964/edgetypes964.json.
outputting graph to JSON format...
Graph outputted to output/graph964/graph964.json.
Scenarios: ping,message,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.01594710350036621
edges: 1.621246337890625e-05
Graph 965 saved.
Drawing graph...
Graph drawn to output/graph965/graph965.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph965/graph965.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph965/nodetypes965.json.
outputting edge types to JSON format...
Edge types outputted to output/graph965/edgetypes965.json.
outputting graph to JSON format...
Graph outputted to output/graph965/graph965.json.
Scenarios: ping,message,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.07027316093444824
edges: 1.71661376953125e-05
Graph 966 saved.
Drawing graph...
Graph drawn to output/graph966/graph966.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph966/graph966.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph966/nodetypes966.json.
outputting edge types to JSON format...
Edge types outputted to output/graph966/edgetypes966.json.
outputting graph to JSON format...
Graph outputted to output/graph966/graph966.json.
Scenarios: ping,message,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.03278398513793945
edges: 1.1444091796875e-05
Graph 967 saved.
Drawing graph...
Graph drawn to output/graph967/graph967.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph967/graph967.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph967/nodetypes967.json.
outputting edge types to JSON format...
Edge types outputted to output/graph967/edgetypes967.json.
outputting graph to JSON format...
Graph outputted to output/graph967/graph967.json.
Scenarios: ping,message,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.029709339141845703
edges: 1.239776611328125e-05
Graph 968 saved.
Drawing graph...
Graph drawn to output/graph968/graph968.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph968/graph968.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph968/nodetypes968.json.
outputting edge types to JSON format...
Edge types outputted to output/graph968/edgetypes968.json.
outputting graph to JSON format...
Graph outputted to output/graph968/graph968.json.
Scenarios: ping,submit,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.06917071342468262
edges: 1.1444091796875e-05
Graph 969 saved.
Drawing graph...
Graph drawn to output/graph969/graph969.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph969/graph969.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph969/nodetypes969.json.
outputting edge types to JSON format...
Edge types outputted to output/graph969/edgetypes969.json.
outputting graph to JSON format...
Graph outputted to output/graph969/graph969.json.
Scenarios: ping,submit,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.08641695976257324
edges: 1.6689300537109375e-05
Graph 970 saved.
Drawing graph...
Graph drawn to output/graph970/graph970.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph970/graph970.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph970/nodetypes970.json.
outputting edge types to JSON format...
Edge types outputted to output/graph970/edgetypes970.json.
outputting graph to JSON format...
Graph outputted to output/graph970/graph970.json.
Scenarios: ping,submit,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.10417032241821289
edges: 1.6450881958007812e-05
Graph 971 saved.
Drawing graph...
Graph drawn to output/graph971/graph971.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph971/graph971.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph971/nodetypes971.json.
outputting edge types to JSON format...
Edge types outputted to output/graph971/edgetypes971.json.
outputting graph to JSON format...
Graph outputted to output/graph971/graph971.json.
Scenarios: ping,submit,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.07619071006774902
edges: 1.239776611328125e-05
Graph 972 saved.
Drawing graph...
Graph drawn to output/graph972/graph972.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph972/graph972.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph972/nodetypes972.json.
outputting edge types to JSON format...
Edge types outputted to output/graph972/edgetypes972.json.
outputting graph to JSON format...
Graph outputted to output/graph972/graph972.json.
Scenarios: ping,submit,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.07401227951049805
edges: 1.8358230590820312e-05
Graph 973 saved.
Drawing graph...
Graph drawn to output/graph973/graph973.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph973/graph973.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph973/nodetypes973.json.
outputting edge types to JSON format...
Edge types outputted to output/graph973/edgetypes973.json.
outputting graph to JSON format...
Graph outputted to output/graph973/graph973.json.
Scenarios: ping,submit,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.01787853240966797
edges: 1.1444091796875e-05
Graph 974 saved.
Drawing graph...
Graph drawn to output/graph974/graph974.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph974/graph974.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph974/nodetypes974.json.
outputting edge types to JSON format...
Edge types outputted to output/graph974/edgetypes974.json.
outputting graph to JSON format...
Graph outputted to output/graph974/graph974.json.
Scenarios: ping,submit,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.0710911750793457
edges: 1.1920928955078125e-05
Graph 975 saved.
Drawing graph...
Graph drawn to output/graph975/graph975.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph975/graph975.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph975/nodetypes975.json.
outputting edge types to JSON format...
Edge types outputted to output/graph975/edgetypes975.json.
outputting graph to JSON format...
Graph outputted to output/graph975/graph975.json.
Scenarios: ping,submit,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.13783884048461914
edges: 1.811981201171875e-05
Graph 976 saved.
Drawing graph...
Graph drawn to output/graph976/graph976.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph976/graph976.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph976/nodetypes976.json.
outputting edge types to JSON format...
Edge types outputted to output/graph976/edgetypes976.json.
outputting graph to JSON format...
Graph outputted to output/graph976/graph976.json.
Scenarios: ping,submit,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.057598114013671875
edges: 1.6450881958007812e-05
Graph 977 saved.
Drawing graph...
Graph drawn to output/graph977/graph977.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph977/graph977.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph977/nodetypes977.json.
outputting edge types to JSON format...
Edge types outputted to output/graph977/edgetypes977.json.
outputting graph to JSON format...
Graph outputted to output/graph977/graph977.json.
Scenarios: ping,submit,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.10632181167602539
edges: 1.8835067749023438e-05
Graph 978 saved.
Drawing graph...
Graph drawn to output/graph978/graph978.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph978/graph978.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph978/nodetypes978.json.
outputting edge types to JSON format...
Edge types outputted to output/graph978/edgetypes978.json.
outputting graph to JSON format...
Graph outputted to output/graph978/graph978.json.
Scenarios: ping,submit,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.09043264389038086
edges: 1.5974044799804688e-05
Graph 979 saved.
Drawing graph...
Graph drawn to output/graph979/graph979.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph979/graph979.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph979/nodetypes979.json.
outputting edge types to JSON format...
Edge types outputted to output/graph979/edgetypes979.json.
outputting graph to JSON format...
Graph outputted to output/graph979/graph979.json.
Scenarios: ping,submit,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.0836186408996582
edges: 2.0742416381835938e-05
Graph 980 saved.
Drawing graph...
Graph drawn to output/graph980/graph980.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph980/graph980.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph980/nodetypes980.json.
outputting edge types to JSON format...
Edge types outputted to output/graph980/edgetypes980.json.
outputting graph to JSON format...
Graph outputted to output/graph980/graph980.json.
Scenarios: ping,query,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.031002044677734375
edges: 1.1444091796875e-05
Graph 981 saved.
Drawing graph...
Graph drawn to output/graph981/graph981.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph981/graph981.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph981/nodetypes981.json.
outputting edge types to JSON format...
Edge types outputted to output/graph981/edgetypes981.json.
outputting graph to JSON format...
Graph outputted to output/graph981/graph981.json.
Scenarios: ping,query,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04153704643249512
edges: 1.1444091796875e-05
Graph 982 saved.
Drawing graph...
Graph drawn to output/graph982/graph982.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph982/graph982.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph982/nodetypes982.json.
outputting edge types to JSON format...
Edge types outputted to output/graph982/edgetypes982.json.
outputting graph to JSON format...
Graph outputted to output/graph982/graph982.json.
Scenarios: ping,query,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.08740806579589844
edges: 1.1920928955078125e-05
Graph 983 saved.
Drawing graph...
Graph drawn to output/graph983/graph983.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph983/graph983.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph983/nodetypes983.json.
outputting edge types to JSON format...
Edge types outputted to output/graph983/edgetypes983.json.
outputting graph to JSON format...
Graph outputted to output/graph983/graph983.json.
Scenarios: ping,query,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.018652677536010742
edges: 1.1205673217773438e-05
Graph 984 saved.
Drawing graph...
Graph drawn to output/graph984/graph984.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph984/graph984.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph984/nodetypes984.json.
outputting edge types to JSON format...
Edge types outputted to output/graph984/edgetypes984.json.
outputting graph to JSON format...
Graph outputted to output/graph984/graph984.json.
Scenarios: ping,query,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.08877062797546387
edges: 1.1444091796875e-05
Graph 985 saved.
Drawing graph...
Graph drawn to output/graph985/graph985.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph985/graph985.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph985/nodetypes985.json.
outputting edge types to JSON format...
Edge types outputted to output/graph985/edgetypes985.json.
outputting graph to JSON format...
Graph outputted to output/graph985/graph985.json.
Scenarios: ping,query,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.0731658935546875
edges: 1.1205673217773438e-05
Graph 986 saved.
Drawing graph...
Graph drawn to output/graph986/graph986.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph986/graph986.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph986/nodetypes986.json.
outputting edge types to JSON format...
Edge types outputted to output/graph986/edgetypes986.json.
outputting graph to JSON format...
Graph outputted to output/graph986/graph986.json.
Scenarios: ping,query,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.02884364128112793
edges: 1.0967254638671875e-05
Graph 987 saved.
Drawing graph...
Graph drawn to output/graph987/graph987.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph987/graph987.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph987/nodetypes987.json.
outputting edge types to JSON format...
Edge types outputted to output/graph987/edgetypes987.json.
outputting graph to JSON format...
Graph outputted to output/graph987/graph987.json.
Scenarios: ping,query,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.08592581748962402
edges: 1.0967254638671875e-05
Graph 988 saved.
Drawing graph...
Graph drawn to output/graph988/graph988.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph988/graph988.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph988/nodetypes988.json.
outputting edge types to JSON format...
Edge types outputted to output/graph988/edgetypes988.json.
outputting graph to JSON format...
Graph outputted to output/graph988/graph988.json.
Scenarios: ping,query,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.042180776596069336
edges: 1.6689300537109375e-05
Graph 989 saved.
Drawing graph...
Graph drawn to output/graph989/graph989.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph989/graph989.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph989/nodetypes989.json.
outputting edge types to JSON format...
Edge types outputted to output/graph989/edgetypes989.json.
outputting graph to JSON format...
Graph outputted to output/graph989/graph989.json.
Scenarios: ping,query,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.010179519653320312
edges: 1.1920928955078125e-05
Graph 990 saved.
Drawing graph...
Graph drawn to output/graph990/graph990.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph990/graph990.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph990/nodetypes990.json.
outputting edge types to JSON format...
Edge types outputted to output/graph990/edgetypes990.json.
outputting graph to JSON format...
Graph outputted to output/graph990/graph990.json.
Scenarios: ping,query,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.013576507568359375
edges: 1.3113021850585938e-05
Graph 991 saved.
Drawing graph...
Graph drawn to output/graph991/graph991.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph991/graph991.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph991/nodetypes991.json.
outputting edge types to JSON format...
Edge types outputted to output/graph991/edgetypes991.json.
outputting graph to JSON format...
Graph outputted to output/graph991/graph991.json.
Scenarios: ping,query,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.05056929588317871
edges: 1.1205673217773438e-05
Graph 992 saved.
Drawing graph...
Graph drawn to output/graph992/graph992.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph992/graph992.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph992/nodetypes992.json.
outputting edge types to JSON format...
Edge types outputted to output/graph992/edgetypes992.json.
outputting graph to JSON format...
Graph outputted to output/graph992/graph992.json.
Scenarios: ping,databaseentry,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.01795220375061035
edges: 1.1920928955078125e-05
Graph 993 saved.
Drawing graph...
Graph drawn to output/graph993/graph993.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph993/graph993.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph993/nodetypes993.json.
outputting edge types to JSON format...
Edge types outputted to output/graph993/edgetypes993.json.
outputting graph to JSON format...
Graph outputted to output/graph993/graph993.json.
Scenarios: ping,databaseentry,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.036733388900756836
edges: 1.7642974853515625e-05
Graph 994 saved.
Drawing graph...
Graph drawn to output/graph994/graph994.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph994/graph994.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph994/nodetypes994.json.
outputting edge types to JSON format...
Edge types outputted to output/graph994/edgetypes994.json.
outputting graph to JSON format...
Graph outputted to output/graph994/graph994.json.
Scenarios: ping,databaseentry,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.02688121795654297
edges: 1.621246337890625e-05
Graph 995 saved.
Drawing graph...
Graph drawn to output/graph995/graph995.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph995/graph995.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph995/nodetypes995.json.
outputting edge types to JSON format...
Edge types outputted to output/graph995/edgetypes995.json.
outputting graph to JSON format...
Graph outputted to output/graph995/graph995.json.
Scenarios: ping,databaseentry,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.018199920654296875
edges: 1.1205673217773438e-05
Graph 996 saved.
Drawing graph...
Graph drawn to output/graph996/graph996.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph996/graph996.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph996/nodetypes996.json.
outputting edge types to JSON format...
Edge types outputted to output/graph996/edgetypes996.json.
outputting graph to JSON format...
Graph outputted to output/graph996/graph996.json.
Scenarios: ping,databaseentry,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.019788503646850586
edges: 1.1444091796875e-05
Graph 997 saved.
Drawing graph...
Graph drawn to output/graph997/graph997.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph997/graph997.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph997/nodetypes997.json.
outputting edge types to JSON format...
Edge types outputted to output/graph997/edgetypes997.json.
outputting graph to JSON format...
Graph outputted to output/graph997/graph997.json.
Scenarios: ping,databaseentry,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.13451743125915527
edges: 1.1444091796875e-05
Graph 998 saved.
Drawing graph...
Graph drawn to output/graph998/graph998.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph998/graph998.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph998/nodetypes998.json.
outputting edge types to JSON format...
Edge types outputted to output/graph998/edgetypes998.json.
outputting graph to JSON format...
Graph outputted to output/graph998/graph998.json.
Scenarios: ping,databaseentry,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.13919758796691895
edges: 1.1682510375976562e-05
Graph 999 saved.
Drawing graph...
Graph drawn to output/graph999/graph999.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph999/graph999.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph999/nodetypes999.json.
outputting edge types to JSON format...
Edge types outputted to output/graph999/edgetypes999.json.
outputting graph to JSON format...
Graph outputted to output/graph999/graph999.json.
Scenarios: ping,databaseentry,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.08573746681213379
edges: 1.1920928955078125e-05
Graph 1000 saved.
Drawing graph...
Graph drawn to output/graph1000/graph1000.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1000/graph1000.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1000/nodetypes1000.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1000/edgetypes1000.json.
outputting graph to JSON format...
Graph outputted to output/graph1000/graph1000.json.
Scenarios: ping,databaseentry,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.12336063385009766
edges: 2.0503997802734375e-05
Graph 1001 saved.
Drawing graph...
Graph drawn to output/graph1001/graph1001.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1001/graph1001.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1001/nodetypes1001.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1001/edgetypes1001.json.
outputting graph to JSON format...
Graph outputted to output/graph1001/graph1001.json.
Scenarios: ping,databaseentry,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.15047287940979004
edges: 1.1682510375976562e-05
Graph 1002 saved.
Drawing graph...
Graph drawn to output/graph1002/graph1002.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1002/graph1002.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1002/nodetypes1002.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1002/edgetypes1002.json.
outputting graph to JSON format...
Graph outputted to output/graph1002/graph1002.json.
Scenarios: ping,databaseentry,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.0751490592956543
edges: 2.0265579223632812e-05
Graph 1003 saved.
Drawing graph...
Graph drawn to output/graph1003/graph1003.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1003/graph1003.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1003/nodetypes1003.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1003/edgetypes1003.json.
outputting graph to JSON format...
Graph outputted to output/graph1003/graph1003.json.
Scenarios: ping,databaseentry,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.04216933250427246
edges: 1.1444091796875e-05
Graph 1004 saved.
Drawing graph...
Graph drawn to output/graph1004/graph1004.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1004/graph1004.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1004/nodetypes1004.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1004/edgetypes1004.json.
outputting graph to JSON format...
Graph outputted to output/graph1004/graph1004.json.
Scenarios: ping,login,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Scenarios: ping,login,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.05705976486206055
edges: 1.1205673217773438e-05
Graph 1005 saved.
Drawing graph...
Graph drawn to output/graph1005/graph1005.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1005/graph1005.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1005/nodetypes1005.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1005/edgetypes1005.json.
outputting graph to JSON format...
Graph outputted to output/graph1005/graph1005.json.
Scenarios: ping,login,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.09816932678222656
edges: 1.4543533325195312e-05
Graph 1006 saved.
Drawing graph...
Graph drawn to output/graph1006/graph1006.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1006/graph1006.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1006/nodetypes1006.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1006/edgetypes1006.json.
outputting graph to JSON format...
Graph outputted to output/graph1006/graph1006.json.
Scenarios: ping,login,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.19814205169677734
edges: 1.2636184692382812e-05
Graph 1007 saved.
Drawing graph...
Graph drawn to output/graph1007/graph1007.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1007/graph1007.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1007/nodetypes1007.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1007/edgetypes1007.json.
outputting graph to JSON format...
Graph outputted to output/graph1007/graph1007.json.
Scenarios: ping,login,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.03532266616821289
edges: 1.1682510375976562e-05
Graph 1008 saved.
Drawing graph...
Graph drawn to output/graph1008/graph1008.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1008/graph1008.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1008/nodetypes1008.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1008/edgetypes1008.json.
outputting graph to JSON format...
Graph outputted to output/graph1008/graph1008.json.
Scenarios: ping,login,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.07074785232543945
edges: 1.7642974853515625e-05
Graph 1009 saved.
Drawing graph...
Graph drawn to output/graph1009/graph1009.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1009/graph1009.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1009/nodetypes1009.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1009/edgetypes1009.json.
outputting graph to JSON format...
Graph outputted to output/graph1009/graph1009.json.
Scenarios: ping,login,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.024554967880249023
edges: 1.0967254638671875e-05
Graph 1010 saved.
Drawing graph...
Graph drawn to output/graph1010/graph1010.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1010/graph1010.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1010/nodetypes1010.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1010/edgetypes1010.json.
outputting graph to JSON format...
Graph outputted to output/graph1010/graph1010.json.
Scenarios: ping,login,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.08423662185668945
edges: 2.8371810913085938e-05
Graph 1011 saved.
Drawing graph...
Graph drawn to output/graph1011/graph1011.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1011/graph1011.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1011/nodetypes1011.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1011/edgetypes1011.json.
outputting graph to JSON format...
Graph outputted to output/graph1011/graph1011.json.
Scenarios: ping,login,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.01528477668762207
edges: 1.3589859008789062e-05
Graph 1012 saved.
Drawing graph...
Graph drawn to output/graph1012/graph1012.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1012/graph1012.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1012/nodetypes1012.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1012/edgetypes1012.json.
outputting graph to JSON format...
Graph outputted to output/graph1012/graph1012.json.
Scenarios: ping,login,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.08378195762634277
edges: 1.1682510375976562e-05
Graph 1013 saved.
Drawing graph...
Graph drawn to output/graph1013/graph1013.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1013/graph1013.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1013/nodetypes1013.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1013/edgetypes1013.json.
outputting graph to JSON format...
Graph outputted to output/graph1013/graph1013.json.
Scenarios: ping,login,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.18963336944580078
edges: 1.621246337890625e-05
Graph 1014 saved.
Drawing graph...
Graph drawn to output/graph1014/graph1014.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1014/graph1014.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1014/nodetypes1014.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1014/edgetypes1014.json.
outputting graph to JSON format...
Graph outputted to output/graph1014/graph1014.json.
Scenarios: ping,login,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.07217955589294434
edges: 1.5735626220703125e-05
Graph 1015 saved.
Drawing graph...
Graph drawn to output/graph1015/graph1015.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1015/graph1015.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1015/nodetypes1015.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1015/edgetypes1015.json.
outputting graph to JSON format...
Graph outputted to output/graph1015/graph1015.json.
Scenarios: databaseentry,message,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.029094696044921875
edges: 1.1205673217773438e-05
Graph 1016 saved.
Drawing graph...
Graph drawn to output/graph1016/graph1016.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1016/graph1016.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1016/nodetypes1016.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1016/edgetypes1016.json.
outputting graph to JSON format...
Graph outputted to output/graph1016/graph1016.json.
Scenarios: databaseentry,message,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.02854156494140625
edges: 1.71661376953125e-05
Graph 1017 saved.
Drawing graph...
Graph drawn to output/graph1017/graph1017.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1017/graph1017.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1017/nodetypes1017.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1017/edgetypes1017.json.
outputting graph to JSON format...
Graph outputted to output/graph1017/graph1017.json.
Scenarios: databaseentry,message,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.024231672286987305
edges: 1.1920928955078125e-05
Graph 1018 saved.
Drawing graph...
Graph drawn to output/graph1018/graph1018.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1018/graph1018.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1018/nodetypes1018.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1018/edgetypes1018.json.
outputting graph to JSON format...
Graph outputted to output/graph1018/graph1018.json.
Scenarios: databaseentry,message,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.07144379615783691
edges: 1.1444091796875e-05
Graph 1019 saved.
Drawing graph...
Graph drawn to output/graph1019/graph1019.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1019/graph1019.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1019/nodetypes1019.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1019/edgetypes1019.json.
outputting graph to JSON format...
Graph outputted to output/graph1019/graph1019.json.
Scenarios: databaseentry,message,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.09024858474731445
edges: 1.6689300537109375e-05
Graph 1020 saved.
Drawing graph...
Graph drawn to output/graph1020/graph1020.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1020/graph1020.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1020/nodetypes1020.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1020/edgetypes1020.json.
outputting graph to JSON format...
Graph outputted to output/graph1020/graph1020.json.
Scenarios: databaseentry,message,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03445148468017578
edges: 1.2636184692382812e-05
Graph 1021 saved.
Drawing graph...
Graph drawn to output/graph1021/graph1021.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1021/graph1021.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1021/nodetypes1021.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1021/edgetypes1021.json.
outputting graph to JSON format...
Graph outputted to output/graph1021/graph1021.json.
Scenarios: databaseentry,message,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.045716285705566406
edges: 1.1682510375976562e-05
Graph 1022 saved.
Drawing graph...
Graph drawn to output/graph1022/graph1022.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1022/graph1022.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1022/nodetypes1022.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1022/edgetypes1022.json.
outputting graph to JSON format...
Graph outputted to output/graph1022/graph1022.json.
Scenarios: databaseentry,message,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.2092742919921875
edges: 1.5974044799804688e-05
Graph 1023 saved.
Drawing graph...
Graph drawn to output/graph1023/graph1023.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1023/graph1023.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1023/nodetypes1023.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1023/edgetypes1023.json.
outputting graph to JSON format...
Graph outputted to output/graph1023/graph1023.json.
Scenarios: databaseentry,message,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.1330585479736328
edges: 1.1682510375976562e-05
Graph 1024 saved.
Drawing graph...
Graph drawn to output/graph1024/graph1024.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1024/graph1024.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1024/nodetypes1024.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1024/edgetypes1024.json.
outputting graph to JSON format...
Graph outputted to output/graph1024/graph1024.json.
Scenarios: databaseentry,message,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.04809975624084473
edges: 1.1682510375976562e-05
Graph 1025 saved.
Drawing graph...
Graph drawn to output/graph1025/graph1025.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1025/graph1025.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1025/nodetypes1025.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1025/edgetypes1025.json.
outputting graph to JSON format...
Graph outputted to output/graph1025/graph1025.json.
Scenarios: databaseentry,message,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.013498544692993164
edges: 1.1205673217773438e-05
Graph 1026 saved.
Drawing graph...
Graph drawn to output/graph1026/graph1026.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1026/graph1026.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1026/nodetypes1026.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1026/edgetypes1026.json.
outputting graph to JSON format...
Graph outputted to output/graph1026/graph1026.json.
Scenarios: databaseentry,message,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.07421517372131348
edges: 1.1444091796875e-05
Graph 1027 saved.
Drawing graph...
Graph drawn to output/graph1027/graph1027.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1027/graph1027.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1027/nodetypes1027.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1027/edgetypes1027.json.
outputting graph to JSON format...
Graph outputted to output/graph1027/graph1027.json.
Scenarios: databaseentry,submit,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Scenarios: databaseentry,submit,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Scenarios: message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.014803886413574219
edges: 1.6450881958007812e-05
Graph 1028 saved.
Drawing graph...
Graph drawn to output/graph1028/graph1028.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1028/graph1028.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1028/nodetypes1028.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1028/edgetypes1028.json.
outputting graph to JSON format...
Graph outputted to output/graph1028/graph1028.json.
Scenarios: submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.028142690658569336
edges: 2.6464462280273438e-05
Graph 1029 saved.
Drawing graph...
Graph drawn to output/graph1029/graph1029.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1029/graph1029.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1029/nodetypes1029.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1029/edgetypes1029.json.
outputting graph to JSON format...
Graph outputted to output/graph1029/graph1029.json.
Scenarios: query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.01542520523071289
edges: 1.430511474609375e-05
Graph 1030 saved.
Drawing graph...
Graph drawn to output/graph1030/graph1030.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1030/graph1030.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1030/nodetypes1030.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1030/edgetypes1030.json.
outputting graph to JSON format...
Graph outputted to output/graph1030/graph1030.json.
Scenarios: ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.07768726348876953
edges: 1.6450881958007812e-05
Graph 1031 saved.
Drawing graph...
Graph drawn to output/graph1031/graph1031.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1031/graph1031.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1031/nodetypes1031.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1031/edgetypes1031.json.
outputting graph to JSON format...
Graph outputted to output/graph1031/graph1031.json.
Scenarios: databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.0224001407623291
edges: 1.4066696166992188e-05
Graph 1032 saved.
Drawing graph...
Graph drawn to output/graph1032/graph1032.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1032/graph1032.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1032/nodetypes1032.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1032/edgetypes1032.json.
outputting graph to JSON format...
Graph outputted to output/graph1032/graph1032.json.
Scenarios: login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.009176969528198242
edges: 1.0967254638671875e-05
Graph 1033 saved.
Drawing graph...
Graph drawn to output/graph1033/graph1033.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1033/graph1033.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1033/nodetypes1033.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1033/edgetypes1033.json.
outputting graph to JSON format...
Graph outputted to output/graph1033/graph1033.json.
Scenarios: message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.04840993881225586
edges: 1.1444091796875e-05
Graph 1034 saved.
Drawing graph...
Graph drawn to output/graph1034/graph1034.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1034/graph1034.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1034/nodetypes1034.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1034/edgetypes1034.json.
outputting graph to JSON format...
Graph outputted to output/graph1034/graph1034.json.
Scenarios: message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.03910207748413086
edges: 1.6927719116210938e-05
Graph 1035 saved.
Drawing graph...
Graph drawn to output/graph1035/graph1035.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1035/graph1035.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1035/nodetypes1035.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1035/edgetypes1035.json.
outputting graph to JSON format...
Graph outputted to output/graph1035/graph1035.json.
Scenarios: message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.14151906967163086
edges: 1.1682510375976562e-05
Graph 1036 saved.
Drawing graph...
Graph drawn to output/graph1036/graph1036.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1036/graph1036.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1036/nodetypes1036.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1036/edgetypes1036.json.
outputting graph to JSON format...
Graph outputted to output/graph1036/graph1036.json.
Scenarios: message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.025285959243774414
edges: 1.1920928955078125e-05
Graph 1037 saved.
Drawing graph...
Graph drawn to output/graph1037/graph1037.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1037/graph1037.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1037/nodetypes1037.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1037/edgetypes1037.json.
outputting graph to JSON format...
Graph outputted to output/graph1037/graph1037.json.
Scenarios: message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.04625749588012695
edges: 1.1920928955078125e-05
Graph 1038 saved.
Drawing graph...
Graph drawn to output/graph1038/graph1038.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1038/graph1038.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1038/nodetypes1038.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1038/edgetypes1038.json.
outputting graph to JSON format...
Graph outputted to output/graph1038/graph1038.json.
Scenarios: submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.058470964431762695
edges: 1.9073486328125e-05
Graph 1039 saved.
Drawing graph...
Graph drawn to output/graph1039/graph1039.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1039/graph1039.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1039/nodetypes1039.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1039/edgetypes1039.json.
outputting graph to JSON format...
Graph outputted to output/graph1039/graph1039.json.
Scenarios: submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.05542302131652832
edges: 1.430511474609375e-05
Graph 1040 saved.
Drawing graph...
Graph drawn to output/graph1040/graph1040.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1040/graph1040.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1040/nodetypes1040.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1040/edgetypes1040.json.
outputting graph to JSON format...
Graph outputted to output/graph1040/graph1040.json.
Scenarios: submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.011035919189453125
edges: 1.1205673217773438e-05
Graph 1041 saved.
Drawing graph...
Graph drawn to output/graph1041/graph1041.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1041/graph1041.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1041/nodetypes1041.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1041/edgetypes1041.json.
outputting graph to JSON format...
Graph outputted to output/graph1041/graph1041.json.
Scenarios: submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.11998724937438965
edges: 1.2159347534179688e-05
Graph 1042 saved.
Drawing graph...
Graph drawn to output/graph1042/graph1042.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1042/graph1042.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1042/nodetypes1042.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1042/edgetypes1042.json.
outputting graph to JSON format...
Graph outputted to output/graph1042/graph1042.json.
Scenarios: submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.0198667049407959
edges: 1.2636184692382812e-05
Graph 1043 saved.
Drawing graph...
Graph drawn to output/graph1043/graph1043.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1043/graph1043.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1043/nodetypes1043.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1043/edgetypes1043.json.
outputting graph to JSON format...
Graph outputted to output/graph1043/graph1043.json.
Scenarios: query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.020758628845214844
edges: 2.6941299438476562e-05
Graph 1044 saved.
Drawing graph...
Graph drawn to output/graph1044/graph1044.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1044/graph1044.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1044/nodetypes1044.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1044/edgetypes1044.json.
outputting graph to JSON format...
Graph outputted to output/graph1044/graph1044.json.
Scenarios: query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.027826786041259766
edges: 1.9788742065429688e-05
Graph 1045 saved.
Drawing graph...
Graph drawn to output/graph1045/graph1045.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1045/graph1045.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1045/nodetypes1045.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1045/edgetypes1045.json.
outputting graph to JSON format...
Graph outputted to output/graph1045/graph1045.json.
Scenarios: query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.016299724578857422
edges: 1.621246337890625e-05
Graph 1046 saved.
Drawing graph...
Graph drawn to output/graph1046/graph1046.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1046/graph1046.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1046/nodetypes1046.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1046/edgetypes1046.json.
outputting graph to JSON format...
Graph outputted to output/graph1046/graph1046.json.
Scenarios: query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.06078648567199707
edges: 1.1205673217773438e-05
Graph 1047 saved.
Drawing graph...
Graph drawn to output/graph1047/graph1047.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1047/graph1047.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1047/nodetypes1047.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1047/edgetypes1047.json.
outputting graph to JSON format...
Graph outputted to output/graph1047/graph1047.json.
Scenarios: query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03139352798461914
edges: 1.1444091796875e-05
Graph 1048 saved.
Drawing graph...
Graph drawn to output/graph1048/graph1048.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1048/graph1048.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1048/nodetypes1048.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1048/edgetypes1048.json.
outputting graph to JSON format...
Graph outputted to output/graph1048/graph1048.json.
Scenarios: ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.06299376487731934
edges: 1.8596649169921875e-05
Graph 1049 saved.
Drawing graph...
Graph drawn to output/graph1049/graph1049.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1049/graph1049.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1049/nodetypes1049.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1049/edgetypes1049.json.
outputting graph to JSON format...
Graph outputted to output/graph1049/graph1049.json.
Scenarios: ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.07606387138366699
edges: 1.621246337890625e-05
Graph 1050 saved.
Drawing graph...
Graph drawn to output/graph1050/graph1050.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1050/graph1050.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1050/nodetypes1050.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1050/edgetypes1050.json.
outputting graph to JSON format...
Graph outputted to output/graph1050/graph1050.json.
Scenarios: ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.017163753509521484
edges: 1.8358230590820312e-05
Graph 1051 saved.
Drawing graph...
Graph drawn to output/graph1051/graph1051.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1051/graph1051.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1051/nodetypes1051.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1051/edgetypes1051.json.
outputting graph to JSON format...
Graph outputted to output/graph1051/graph1051.json.
Scenarios: ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.06321406364440918
edges: 1.1444091796875e-05
Graph 1052 saved.
Drawing graph...
Graph drawn to output/graph1052/graph1052.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1052/graph1052.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1052/nodetypes1052.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1052/edgetypes1052.json.
outputting graph to JSON format...
Graph outputted to output/graph1052/graph1052.json.
Scenarios: ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.04003453254699707
edges: 1.1920928955078125e-05
Graph 1053 saved.
Drawing graph...
Graph drawn to output/graph1053/graph1053.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1053/graph1053.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1053/nodetypes1053.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1053/edgetypes1053.json.
outputting graph to JSON format...
Graph outputted to output/graph1053/graph1053.json.
Scenarios: databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.05491352081298828
edges: 1.8596649169921875e-05
Graph 1054 saved.
Drawing graph...
Graph drawn to output/graph1054/graph1054.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1054/graph1054.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1054/nodetypes1054.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1054/edgetypes1054.json.
outputting graph to JSON format...
Graph outputted to output/graph1054/graph1054.json.
Scenarios: databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.06520676612854004
edges: 1.2159347534179688e-05
Graph 1055 saved.
Drawing graph...
Graph drawn to output/graph1055/graph1055.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1055/graph1055.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1055/nodetypes1055.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1055/edgetypes1055.json.
outputting graph to JSON format...
Graph outputted to output/graph1055/graph1055.json.
Scenarios: databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.06265664100646973
edges: 1.3589859008789062e-05
Graph 1056 saved.
Drawing graph...
Graph drawn to output/graph1056/graph1056.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1056/graph1056.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1056/nodetypes1056.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1056/edgetypes1056.json.
outputting graph to JSON format...
Graph outputted to output/graph1056/graph1056.json.
Scenarios: databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.05118060111999512
edges: 1.1920928955078125e-05
Graph 1057 saved.
Drawing graph...
Graph drawn to output/graph1057/graph1057.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1057/graph1057.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1057/nodetypes1057.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1057/edgetypes1057.json.
outputting graph to JSON format...
Graph outputted to output/graph1057/graph1057.json.
Scenarios: databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.09407949447631836
edges: 1.6689300537109375e-05
Graph 1058 saved.
Drawing graph...
Graph drawn to output/graph1058/graph1058.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1058/graph1058.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1058/nodetypes1058.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1058/edgetypes1058.json.
outputting graph to JSON format...
Graph outputted to output/graph1058/graph1058.json.
Scenarios: login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.02848076820373535
edges: 1.7404556274414062e-05
Graph 1059 saved.
Drawing graph...
Graph drawn to output/graph1059/graph1059.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1059/graph1059.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1059/nodetypes1059.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1059/edgetypes1059.json.
outputting graph to JSON format...
Graph outputted to output/graph1059/graph1059.json.
Scenarios: login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.027132749557495117
edges: 1.1920928955078125e-05
Graph 1060 saved.
Drawing graph...
Graph drawn to output/graph1060/graph1060.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1060/graph1060.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1060/nodetypes1060.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1060/edgetypes1060.json.
outputting graph to JSON format...
Graph outputted to output/graph1060/graph1060.json.
Scenarios: login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.014583110809326172
edges: 1.1444091796875e-05
Graph 1061 saved.
Drawing graph...
Graph drawn to output/graph1061/graph1061.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1061/graph1061.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1061/nodetypes1061.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1061/edgetypes1061.json.
outputting graph to JSON format...
Graph outputted to output/graph1061/graph1061.json.
Scenarios: login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.021520376205444336
edges: 1.1444091796875e-05
Graph 1062 saved.
Drawing graph...
Graph drawn to output/graph1062/graph1062.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1062/graph1062.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1062/nodetypes1062.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1062/edgetypes1062.json.
outputting graph to JSON format...
Graph outputted to output/graph1062/graph1062.json.
Scenarios: login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.060034751892089844
edges: 1.6450881958007812e-05
Graph 1063 saved.
Drawing graph...
Graph drawn to output/graph1063/graph1063.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1063/graph1063.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1063/nodetypes1063.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1063/edgetypes1063.json.
outputting graph to JSON format...
Graph outputted to output/graph1063/graph1063.json.
Scenarios: message,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.0582575798034668
edges: 1.7642974853515625e-05
Graph 1064 saved.
Drawing graph...
Graph drawn to output/graph1064/graph1064.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1064/graph1064.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1064/nodetypes1064.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1064/edgetypes1064.json.
outputting graph to JSON format...
Graph outputted to output/graph1064/graph1064.json.
Scenarios: message,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.026407241821289062
edges: 1.0967254638671875e-05
Graph 1065 saved.
Drawing graph...
Graph drawn to output/graph1065/graph1065.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1065/graph1065.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1065/nodetypes1065.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1065/edgetypes1065.json.
outputting graph to JSON format...
Graph outputted to output/graph1065/graph1065.json.
Scenarios: message,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04149603843688965
edges: 1.5497207641601562e-05
Graph 1066 saved.
Drawing graph...
Graph drawn to output/graph1066/graph1066.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1066/graph1066.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1066/nodetypes1066.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1066/edgetypes1066.json.
outputting graph to JSON format...
Graph outputted to output/graph1066/graph1066.json.
Scenarios: message,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.026493549346923828
edges: 1.0967254638671875e-05
Graph 1067 saved.
Drawing graph...
Graph drawn to output/graph1067/graph1067.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1067/graph1067.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1067/nodetypes1067.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1067/edgetypes1067.json.
outputting graph to JSON format...
Graph outputted to output/graph1067/graph1067.json.
Scenarios: message,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.049489498138427734
edges: 1.1682510375976562e-05
Graph 1068 saved.
Drawing graph...
Graph drawn to output/graph1068/graph1068.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1068/graph1068.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1068/nodetypes1068.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1068/edgetypes1068.json.
outputting graph to JSON format...
Graph outputted to output/graph1068/graph1068.json.
Scenarios: message,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.10634303092956543
edges: 1.6689300537109375e-05
Graph 1069 saved.
Drawing graph...
Graph drawn to output/graph1069/graph1069.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1069/graph1069.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1069/nodetypes1069.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1069/edgetypes1069.json.
outputting graph to JSON format...
Graph outputted to output/graph1069/graph1069.json.
Scenarios: message,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.016621828079223633
edges: 1.33514404296875e-05
Graph 1070 saved.
Drawing graph...
Graph drawn to output/graph1070/graph1070.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1070/graph1070.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1070/nodetypes1070.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1070/edgetypes1070.json.
outputting graph to JSON format...
Graph outputted to output/graph1070/graph1070.json.
Scenarios: message,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.05413508415222168
edges: 1.1682510375976562e-05
Graph 1071 saved.
Drawing graph...
Graph drawn to output/graph1071/graph1071.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1071/graph1071.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1071/nodetypes1071.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1071/edgetypes1071.json.
outputting graph to JSON format...
Graph outputted to output/graph1071/graph1071.json.
Scenarios: message,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.0462496280670166
edges: 1.2159347534179688e-05
Graph 1072 saved.
Drawing graph...
Graph drawn to output/graph1072/graph1072.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1072/graph1072.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1072/nodetypes1072.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1072/edgetypes1072.json.
outputting graph to JSON format...
Graph outputted to output/graph1072/graph1072.json.
Scenarios: message,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.028958797454833984
edges: 1.5974044799804688e-05
Graph 1073 saved.
Drawing graph...
Graph drawn to output/graph1073/graph1073.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1073/graph1073.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1073/nodetypes1073.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1073/edgetypes1073.json.
outputting graph to JSON format...
Graph outputted to output/graph1073/graph1073.json.
Scenarios: message,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.043686628341674805
edges: 1.1682510375976562e-05
Graph 1074 saved.
Drawing graph...
Graph drawn to output/graph1074/graph1074.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1074/graph1074.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1074/nodetypes1074.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1074/edgetypes1074.json.
outputting graph to JSON format...
Graph outputted to output/graph1074/graph1074.json.
Scenarios: message,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.056778669357299805
edges: 1.1205673217773438e-05
Graph 1075 saved.
Drawing graph...
Graph drawn to output/graph1075/graph1075.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1075/graph1075.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1075/nodetypes1075.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1075/edgetypes1075.json.
outputting graph to JSON format...
Graph outputted to output/graph1075/graph1075.json.
Scenarios: message,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.016333341598510742
edges: 1.1682510375976562e-05
Graph 1076 saved.
Drawing graph...
Graph drawn to output/graph1076/graph1076.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1076/graph1076.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1076/nodetypes1076.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1076/edgetypes1076.json.
outputting graph to JSON format...
Graph outputted to output/graph1076/graph1076.json.
Scenarios: message,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.03134775161743164
edges: 1.1444091796875e-05
Graph 1077 saved.
Drawing graph...
Graph drawn to output/graph1077/graph1077.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1077/graph1077.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1077/nodetypes1077.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1077/edgetypes1077.json.
outputting graph to JSON format...
Graph outputted to output/graph1077/graph1077.json.
Scenarios: message,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.0555567741394043
edges: 1.1444091796875e-05
Graph 1078 saved.
Drawing graph...
Graph drawn to output/graph1078/graph1078.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1078/graph1078.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1078/nodetypes1078.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1078/edgetypes1078.json.
outputting graph to JSON format...
Graph outputted to output/graph1078/graph1078.json.
Scenarios: message,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.09668183326721191
edges: 1.1920928955078125e-05
Graph 1079 saved.
Drawing graph...
Graph drawn to output/graph1079/graph1079.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1079/graph1079.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1079/nodetypes1079.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1079/edgetypes1079.json.
outputting graph to JSON format...
Graph outputted to output/graph1079/graph1079.json.
Scenarios: message,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.013438224792480469
edges: 1.8358230590820312e-05
Graph 1080 saved.
Drawing graph...
Graph drawn to output/graph1080/graph1080.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1080/graph1080.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1080/nodetypes1080.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1080/edgetypes1080.json.
outputting graph to JSON format...
Graph outputted to output/graph1080/graph1080.json.
Scenarios: message,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.02787637710571289
edges: 1.6689300537109375e-05
Graph 1081 saved.
Drawing graph...
Graph drawn to output/graph1081/graph1081.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1081/graph1081.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1081/nodetypes1081.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1081/edgetypes1081.json.
outputting graph to JSON format...
Graph outputted to output/graph1081/graph1081.json.
Scenarios: message,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.13520288467407227
edges: 1.0967254638671875e-05
Graph 1082 saved.
Drawing graph...
Graph drawn to output/graph1082/graph1082.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1082/graph1082.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1082/nodetypes1082.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1082/edgetypes1082.json.
outputting graph to JSON format...
Graph outputted to output/graph1082/graph1082.json.
Scenarios: message,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.057845115661621094
edges: 1.0967254638671875e-05
Graph 1083 saved.
Drawing graph...
Graph drawn to output/graph1083/graph1083.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1083/graph1083.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1083/nodetypes1083.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1083/edgetypes1083.json.
outputting graph to JSON format...
Graph outputted to output/graph1083/graph1083.json.
Scenarios: submit,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.020110368728637695
edges: 1.2159347534179688e-05
Graph 1084 saved.
Drawing graph...
Graph drawn to output/graph1084/graph1084.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1084/graph1084.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1084/nodetypes1084.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1084/edgetypes1084.json.
outputting graph to JSON format...
Graph outputted to output/graph1084/graph1084.json.
Scenarios: submit,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.12833166122436523
edges: 1.1205673217773438e-05
Graph 1085 saved.
Drawing graph...
Graph drawn to output/graph1085/graph1085.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1085/graph1085.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1085/nodetypes1085.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1085/edgetypes1085.json.
outputting graph to JSON format...
Graph outputted to output/graph1085/graph1085.json.
Scenarios: submit,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04414176940917969
edges: 1.1205673217773438e-05
Graph 1086 saved.
Drawing graph...
Graph drawn to output/graph1086/graph1086.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1086/graph1086.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1086/nodetypes1086.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1086/edgetypes1086.json.
outputting graph to JSON format...
Graph outputted to output/graph1086/graph1086.json.
Scenarios: submit,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.061002492904663086
edges: 1.6689300537109375e-05
Graph 1087 saved.
Drawing graph...
Graph drawn to output/graph1087/graph1087.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1087/graph1087.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1087/nodetypes1087.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1087/edgetypes1087.json.
outputting graph to JSON format...
Graph outputted to output/graph1087/graph1087.json.
Scenarios: submit,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.0336756706237793
edges: 1.1205673217773438e-05
Graph 1088 saved.
Drawing graph...
Graph drawn to output/graph1088/graph1088.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1088/graph1088.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1088/nodetypes1088.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1088/edgetypes1088.json.
outputting graph to JSON format...
Graph outputted to output/graph1088/graph1088.json.
Scenarios: submit,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.09915447235107422
edges: 1.1205673217773438e-05
Graph 1089 saved.
Drawing graph...
Graph drawn to output/graph1089/graph1089.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1089/graph1089.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1089/nodetypes1089.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1089/edgetypes1089.json.
outputting graph to JSON format...
Graph outputted to output/graph1089/graph1089.json.
Scenarios: submit,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04196429252624512
edges: 1.1444091796875e-05
Graph 1090 saved.
Drawing graph...
Graph drawn to output/graph1090/graph1090.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1090/graph1090.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1090/nodetypes1090.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1090/edgetypes1090.json.
outputting graph to JSON format...
Graph outputted to output/graph1090/graph1090.json.
Scenarios: submit,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.01230001449584961
edges: 1.1682510375976562e-05
Graph 1091 saved.
Drawing graph...
Graph drawn to output/graph1091/graph1091.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1091/graph1091.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1091/nodetypes1091.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1091/edgetypes1091.json.
outputting graph to JSON format...
Graph outputted to output/graph1091/graph1091.json.
Scenarios: submit,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.041960954666137695
edges: 1.1444091796875e-05
Graph 1092 saved.
Drawing graph...
Graph drawn to output/graph1092/graph1092.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1092/graph1092.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1092/nodetypes1092.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1092/edgetypes1092.json.
outputting graph to JSON format...
Graph outputted to output/graph1092/graph1092.json.
Scenarios: submit,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.07272768020629883
edges: 1.0728836059570312e-05
Graph 1093 saved.
Drawing graph...
Graph drawn to output/graph1093/graph1093.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1093/graph1093.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1093/nodetypes1093.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1093/edgetypes1093.json.
outputting graph to JSON format...
Graph outputted to output/graph1093/graph1093.json.
Scenarios: submit,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.04336142539978027
edges: 1.3589859008789062e-05
Graph 1094 saved.
Drawing graph...
Graph drawn to output/graph1094/graph1094.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1094/graph1094.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1094/nodetypes1094.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1094/edgetypes1094.json.
outputting graph to JSON format...
Graph outputted to output/graph1094/graph1094.json.
Scenarios: submit,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.1096506118774414
edges: 2.384185791015625e-05
Graph 1095 saved.
Drawing graph...
Graph drawn to output/graph1095/graph1095.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1095/graph1095.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1095/nodetypes1095.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1095/edgetypes1095.json.
outputting graph to JSON format...
Graph outputted to output/graph1095/graph1095.json.
Scenarios: submit,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.04670071601867676
edges: 1.1205673217773438e-05
Graph 1096 saved.
Drawing graph...
Graph drawn to output/graph1096/graph1096.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1096/graph1096.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1096/nodetypes1096.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1096/edgetypes1096.json.
outputting graph to JSON format...
Graph outputted to output/graph1096/graph1096.json.
Scenarios: submit,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.04284787178039551
edges: 1.0728836059570312e-05
Graph 1097 saved.
Drawing graph...
Graph drawn to output/graph1097/graph1097.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1097/graph1097.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1097/nodetypes1097.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1097/edgetypes1097.json.
outputting graph to JSON format...
Graph outputted to output/graph1097/graph1097.json.
Scenarios: submit,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.08655428886413574
edges: 1.7881393432617188e-05
Graph 1098 saved.
Drawing graph...
Graph drawn to output/graph1098/graph1098.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1098/graph1098.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1098/nodetypes1098.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1098/edgetypes1098.json.
outputting graph to JSON format...
Graph outputted to output/graph1098/graph1098.json.
Scenarios: submit,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03376007080078125
edges: 1.8835067749023438e-05
Graph 1099 saved.
Drawing graph...
Graph drawn to output/graph1099/graph1099.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1099/graph1099.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1099/nodetypes1099.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1099/edgetypes1099.json.
outputting graph to JSON format...
Graph outputted to output/graph1099/graph1099.json.
Scenarios: submit,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.0473940372467041
edges: 1.1444091796875e-05
Graph 1100 saved.
Drawing graph...
Graph drawn to output/graph1100/graph1100.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1100/graph1100.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1100/nodetypes1100.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1100/edgetypes1100.json.
outputting graph to JSON format...
Graph outputted to output/graph1100/graph1100.json.
Scenarios: submit,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.018091201782226562
edges: 0.00019884109497070312
Graph 1101 saved.
Drawing graph...
Graph drawn to output/graph1101/graph1101.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1101/graph1101.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1101/nodetypes1101.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1101/edgetypes1101.json.
outputting graph to JSON format...
Graph outputted to output/graph1101/graph1101.json.
Scenarios: submit,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.03686952590942383
edges: 1.1920928955078125e-05
Graph 1102 saved.
Drawing graph...
Graph drawn to output/graph1102/graph1102.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1102/graph1102.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1102/nodetypes1102.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1102/edgetypes1102.json.
outputting graph to JSON format...
Graph outputted to output/graph1102/graph1102.json.
Scenarios: submit,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.03766298294067383
edges: 1.1205673217773438e-05
Graph 1103 saved.
Drawing graph...
Graph drawn to output/graph1103/graph1103.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1103/graph1103.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1103/nodetypes1103.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1103/edgetypes1103.json.
outputting graph to JSON format...
Graph outputted to output/graph1103/graph1103.json.
Scenarios: query,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.020636558532714844
edges: 1.1205673217773438e-05
Graph 1104 saved.
Drawing graph...
Graph drawn to output/graph1104/graph1104.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1104/graph1104.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1104/nodetypes1104.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1104/edgetypes1104.json.
outputting graph to JSON format...
Graph outputted to output/graph1104/graph1104.json.
Scenarios: query,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.00872349739074707
edges: 1.1682510375976562e-05
Graph 1105 saved.
Drawing graph...
Graph drawn to output/graph1105/graph1105.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1105/graph1105.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1105/nodetypes1105.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1105/edgetypes1105.json.
outputting graph to JSON format...
Graph outputted to output/graph1105/graph1105.json.
Scenarios: query,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.12376165390014648
edges: 2.4318695068359375e-05
Graph 1106 saved.
Drawing graph...
Graph drawn to output/graph1106/graph1106.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1106/graph1106.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1106/nodetypes1106.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1106/edgetypes1106.json.
outputting graph to JSON format...
Graph outputted to output/graph1106/graph1106.json.
Scenarios: query,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.04892253875732422
edges: 2.8848648071289062e-05
Graph 1107 saved.
Drawing graph...
Graph drawn to output/graph1107/graph1107.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1107/graph1107.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1107/nodetypes1107.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1107/edgetypes1107.json.
outputting graph to JSON format...
Graph outputted to output/graph1107/graph1107.json.
Scenarios: query,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.06309127807617188
edges: 1.0728836059570312e-05
Graph 1108 saved.
Drawing graph...
Graph drawn to output/graph1108/graph1108.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1108/graph1108.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1108/nodetypes1108.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1108/edgetypes1108.json.
outputting graph to JSON format...
Graph outputted to output/graph1108/graph1108.json.
Scenarios: query,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.029721736907958984
edges: 1.1205673217773438e-05
Graph 1109 saved.
Drawing graph...
Graph drawn to output/graph1109/graph1109.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1109/graph1109.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1109/nodetypes1109.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1109/edgetypes1109.json.
outputting graph to JSON format...
Graph outputted to output/graph1109/graph1109.json.
Scenarios: query,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.01583695411682129
edges: 1.2159347534179688e-05
Graph 1110 saved.
Drawing graph...
Graph drawn to output/graph1110/graph1110.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1110/graph1110.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1110/nodetypes1110.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1110/edgetypes1110.json.
outputting graph to JSON format...
Graph outputted to output/graph1110/graph1110.json.
Scenarios: query,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.015741348266601562
edges: 1.6689300537109375e-05
Graph 1111 saved.
Drawing graph...
Graph drawn to output/graph1111/graph1111.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1111/graph1111.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1111/nodetypes1111.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1111/edgetypes1111.json.
outputting graph to JSON format...
Graph outputted to output/graph1111/graph1111.json.
Scenarios: query,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.0523834228515625
edges: 1.1920928955078125e-05
Graph 1112 saved.
Drawing graph...
Graph drawn to output/graph1112/graph1112.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1112/graph1112.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1112/nodetypes1112.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1112/edgetypes1112.json.
outputting graph to JSON format...
Graph outputted to output/graph1112/graph1112.json.
Scenarios: query,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.08399581909179688
edges: 1.9073486328125e-05
Graph 1113 saved.
Drawing graph...
Graph drawn to output/graph1113/graph1113.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1113/graph1113.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1113/nodetypes1113.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1113/edgetypes1113.json.
outputting graph to JSON format...
Graph outputted to output/graph1113/graph1113.json.
Scenarios: query,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.09207725524902344
edges: 1.1682510375976562e-05
Graph 1114 saved.
Drawing graph...
Graph drawn to output/graph1114/graph1114.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1114/graph1114.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1114/nodetypes1114.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1114/edgetypes1114.json.
outputting graph to JSON format...
Graph outputted to output/graph1114/graph1114.json.
Scenarios: query,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.01228475570678711
edges: 1.1444091796875e-05
Graph 1115 saved.
Drawing graph...
Graph drawn to output/graph1115/graph1115.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1115/graph1115.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1115/nodetypes1115.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1115/edgetypes1115.json.
outputting graph to JSON format...
Graph outputted to output/graph1115/graph1115.json.
Scenarios: query,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.057476043701171875
edges: 1.8358230590820312e-05
Graph 1116 saved.
Drawing graph...
Graph drawn to output/graph1116/graph1116.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1116/graph1116.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1116/nodetypes1116.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1116/edgetypes1116.json.
outputting graph to JSON format...
Graph outputted to output/graph1116/graph1116.json.
Scenarios: query,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.07905364036560059
edges: 1.52587890625e-05
Graph 1117 saved.
Drawing graph...
Graph drawn to output/graph1117/graph1117.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1117/graph1117.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1117/nodetypes1117.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1117/edgetypes1117.json.
outputting graph to JSON format...
Graph outputted to output/graph1117/graph1117.json.
Scenarios: query,databaseentry,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.05204010009765625
edges: 1.1205673217773438e-05
Graph 1118 saved.
Drawing graph...
Graph drawn to output/graph1118/graph1118.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1118/graph1118.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1118/nodetypes1118.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1118/edgetypes1118.json.
outputting graph to JSON format...
Graph outputted to output/graph1118/graph1118.json.
Scenarios: query,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.008988142013549805
edges: 1.4781951904296875e-05
Graph 1119 saved.
Drawing graph...
Graph drawn to output/graph1119/graph1119.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1119/graph1119.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1119/nodetypes1119.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1119/edgetypes1119.json.
outputting graph to JSON format...
Graph outputted to output/graph1119/graph1119.json.
Scenarios: query,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.04323101043701172
edges: 1.5735626220703125e-05
Graph 1120 saved.
Drawing graph...
Graph drawn to output/graph1120/graph1120.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1120/graph1120.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1120/nodetypes1120.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1120/edgetypes1120.json.
outputting graph to JSON format...
Graph outputted to output/graph1120/graph1120.json.
Scenarios: query,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.0393681526184082
edges: 5.173683166503906e-05
Graph 1121 saved.
Drawing graph...
Graph drawn to output/graph1121/graph1121.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1121/graph1121.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1121/nodetypes1121.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1121/edgetypes1121.json.
outputting graph to JSON format...
Graph outputted to output/graph1121/graph1121.json.
Scenarios: query,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.025075435638427734
edges: 1.0967254638671875e-05
Graph 1122 saved.
Drawing graph...
Graph drawn to output/graph1122/graph1122.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1122/graph1122.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1122/nodetypes1122.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1122/edgetypes1122.json.
outputting graph to JSON format...
Graph outputted to output/graph1122/graph1122.json.
Scenarios: query,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.0964345932006836
edges: 1.6689300537109375e-05
Graph 1123 saved.
Drawing graph...
Graph drawn to output/graph1123/graph1123.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1123/graph1123.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1123/nodetypes1123.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1123/edgetypes1123.json.
outputting graph to JSON format...
Graph outputted to output/graph1123/graph1123.json.
Scenarios: ping,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.035718679428100586
edges: 1.1205673217773438e-05
Graph 1124 saved.
Drawing graph...
Graph drawn to output/graph1124/graph1124.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1124/graph1124.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1124/nodetypes1124.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1124/edgetypes1124.json.
outputting graph to JSON format...
Graph outputted to output/graph1124/graph1124.json.
Scenarios: ping,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.020462751388549805
edges: 1.2159347534179688e-05
Graph 1125 saved.
Drawing graph...
Graph drawn to output/graph1125/graph1125.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1125/graph1125.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1125/nodetypes1125.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1125/edgetypes1125.json.
outputting graph to JSON format...
Graph outputted to output/graph1125/graph1125.json.
Scenarios: ping,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.03712606430053711
edges: 1.1682510375976562e-05
Graph 1126 saved.
Drawing graph...
Graph drawn to output/graph1126/graph1126.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1126/graph1126.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1126/nodetypes1126.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1126/edgetypes1126.json.
outputting graph to JSON format...
Graph outputted to output/graph1126/graph1126.json.
Scenarios: ping,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.08257770538330078
edges: 1.1920928955078125e-05
Graph 1127 saved.
Drawing graph...
Graph drawn to output/graph1127/graph1127.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1127/graph1127.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1127/nodetypes1127.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1127/edgetypes1127.json.
outputting graph to JSON format...
Graph outputted to output/graph1127/graph1127.json.
Scenarios: ping,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.050985097885131836
edges: 1.3828277587890625e-05
Graph 1128 saved.
Drawing graph...
Graph drawn to output/graph1128/graph1128.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1128/graph1128.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1128/nodetypes1128.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1128/edgetypes1128.json.
outputting graph to JSON format...
Graph outputted to output/graph1128/graph1128.json.
Scenarios: ping,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.01693272590637207
edges: 1.2874603271484375e-05
Graph 1129 saved.
Drawing graph...
Graph drawn to output/graph1129/graph1129.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1129/graph1129.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1129/nodetypes1129.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1129/edgetypes1129.json.
outputting graph to JSON format...
Graph outputted to output/graph1129/graph1129.json.
Scenarios: ping,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.08498716354370117
edges: 3.528594970703125e-05
Graph 1130 saved.
Drawing graph...
Graph drawn to output/graph1130/graph1130.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1130/graph1130.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1130/nodetypes1130.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1130/edgetypes1130.json.
outputting graph to JSON format...
Graph outputted to output/graph1130/graph1130.json.
Scenarios: ping,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.020372867584228516
edges: 1.2636184692382812e-05
Graph 1131 saved.
Drawing graph...
Graph drawn to output/graph1131/graph1131.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1131/graph1131.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1131/nodetypes1131.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1131/edgetypes1131.json.
outputting graph to JSON format...
Graph outputted to output/graph1131/graph1131.json.
Scenarios: ping,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.06294870376586914
edges: 1.1444091796875e-05
Graph 1132 saved.
Drawing graph...
Graph drawn to output/graph1132/graph1132.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1132/graph1132.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1132/nodetypes1132.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1132/edgetypes1132.json.
outputting graph to JSON format...
Graph outputted to output/graph1132/graph1132.json.
Scenarios: ping,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.05370593070983887
edges: 1.1444091796875e-05
Graph 1133 saved.
Drawing graph...
Graph drawn to output/graph1133/graph1133.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1133/graph1133.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1133/nodetypes1133.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1133/edgetypes1133.json.
outputting graph to JSON format...
Graph outputted to output/graph1133/graph1133.json.
Scenarios: ping,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.026993989944458008
edges: 1.621246337890625e-05
Graph 1134 saved.
Drawing graph...
Graph drawn to output/graph1134/graph1134.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1134/graph1134.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1134/nodetypes1134.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1134/edgetypes1134.json.
outputting graph to JSON format...
Graph outputted to output/graph1134/graph1134.json.
Scenarios: ping,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.0388646125793457
edges: 1.1205673217773438e-05
Graph 1135 saved.
Drawing graph...
Graph drawn to output/graph1135/graph1135.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1135/graph1135.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1135/nodetypes1135.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1135/edgetypes1135.json.
outputting graph to JSON format...
Graph outputted to output/graph1135/graph1135.json.
Scenarios: ping,databaseentry,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.0798182487487793
edges: 1.1444091796875e-05
Graph 1136 saved.
Drawing graph...
Graph drawn to output/graph1136/graph1136.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1136/graph1136.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1136/nodetypes1136.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1136/edgetypes1136.json.
outputting graph to JSON format...
Graph outputted to output/graph1136/graph1136.json.
Scenarios: ping,databaseentry,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.024393558502197266
edges: 1.8596649169921875e-05
Graph 1137 saved.
Drawing graph...
Graph drawn to output/graph1137/graph1137.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1137/graph1137.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1137/nodetypes1137.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1137/edgetypes1137.json.
outputting graph to JSON format...
Graph outputted to output/graph1137/graph1137.json.
Scenarios: ping,databaseentry,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.05363273620605469
edges: 1.0967254638671875e-05
Graph 1138 saved.
Drawing graph...
Graph drawn to output/graph1138/graph1138.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1138/graph1138.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1138/nodetypes1138.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1138/edgetypes1138.json.
outputting graph to JSON format...
Graph outputted to output/graph1138/graph1138.json.
Scenarios: ping,databaseentry,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.06361746788024902
edges: 1.2159347534179688e-05
Graph 1139 saved.
Drawing graph...
Graph drawn to output/graph1139/graph1139.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1139/graph1139.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1139/nodetypes1139.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1139/edgetypes1139.json.
outputting graph to JSON format...
Graph outputted to output/graph1139/graph1139.json.
Scenarios: ping,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.043969154357910156
edges: 1.6450881958007812e-05
Graph 1140 saved.
Drawing graph...
Graph drawn to output/graph1140/graph1140.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1140/graph1140.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1140/nodetypes1140.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1140/edgetypes1140.json.
outputting graph to JSON format...
Graph outputted to output/graph1140/graph1140.json.
Scenarios: ping,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.031560659408569336
edges: 1.5974044799804688e-05
Graph 1141 saved.
Drawing graph...
Graph drawn to output/graph1141/graph1141.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1141/graph1141.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1141/nodetypes1141.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1141/edgetypes1141.json.
outputting graph to JSON format...
Graph outputted to output/graph1141/graph1141.json.
Scenarios: ping,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.033936500549316406
edges: 1.1205673217773438e-05
Graph 1142 saved.
Drawing graph...
Graph drawn to output/graph1142/graph1142.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1142/graph1142.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1142/nodetypes1142.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1142/edgetypes1142.json.
outputting graph to JSON format...
Graph outputted to output/graph1142/graph1142.json.
Scenarios: ping,login,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.08516073226928711
edges: 1.6450881958007812e-05
Graph 1143 saved.
Drawing graph...
Graph drawn to output/graph1143/graph1143.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1143/graph1143.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1143/nodetypes1143.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1143/edgetypes1143.json.
outputting graph to JSON format...
Graph outputted to output/graph1143/graph1143.json.
Scenarios: databaseentry,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.04335498809814453
edges: 1.71661376953125e-05
Graph 1144 saved.
Drawing graph...
Graph drawn to output/graph1144/graph1144.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1144/graph1144.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1144/nodetypes1144.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1144/edgetypes1144.json.
outputting graph to JSON format...
Graph outputted to output/graph1144/graph1144.json.
Scenarios: databaseentry,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.05309295654296875
edges: 1.1682510375976562e-05
Graph 1145 saved.
Drawing graph...
Graph drawn to output/graph1145/graph1145.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1145/graph1145.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1145/nodetypes1145.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1145/edgetypes1145.json.
outputting graph to JSON format...
Graph outputted to output/graph1145/graph1145.json.
Scenarios: databaseentry,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.09963631629943848
edges: 1.0967254638671875e-05
Graph 1146 saved.
Drawing graph...
Graph drawn to output/graph1146/graph1146.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1146/graph1146.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1146/nodetypes1146.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1146/edgetypes1146.json.
outputting graph to JSON format...
Graph outputted to output/graph1146/graph1146.json.
Scenarios: databaseentry,message,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.15529394149780273
edges: 1.5974044799804688e-05
Graph 1147 saved.
Drawing graph...
Graph drawn to output/graph1147/graph1147.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1147/graph1147.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1147/nodetypes1147.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1147/edgetypes1147.json.
outputting graph to JSON format...
Graph outputted to output/graph1147/graph1147.json.
Scenarios: databaseentry,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.023398876190185547
edges: 1.1920928955078125e-05
Graph 1148 saved.
Drawing graph...
Graph drawn to output/graph1148/graph1148.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1148/graph1148.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1148/nodetypes1148.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1148/edgetypes1148.json.
outputting graph to JSON format...
Graph outputted to output/graph1148/graph1148.json.
Scenarios: databaseentry,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.030655384063720703
edges: 1.9550323486328125e-05
Graph 1149 saved.
Drawing graph...
Graph drawn to output/graph1149/graph1149.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1149/graph1149.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1149/nodetypes1149.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1149/edgetypes1149.json.
outputting graph to JSON format...
Graph outputted to output/graph1149/graph1149.json.
Scenarios: databaseentry,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.01496267318725586
edges: 1.1682510375976562e-05
Graph 1150 saved.
Drawing graph...
Graph drawn to output/graph1150/graph1150.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1150/graph1150.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1150/nodetypes1150.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1150/edgetypes1150.json.
outputting graph to JSON format...
Graph outputted to output/graph1150/graph1150.json.
Scenarios: databaseentry,submit,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03504800796508789
edges: 1.1920928955078125e-05
Graph 1151 saved.
Drawing graph...
Graph drawn to output/graph1151/graph1151.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1151/graph1151.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1151/nodetypes1151.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1151/edgetypes1151.json.
outputting graph to JSON format...
Graph outputted to output/graph1151/graph1151.json.
Scenarios: databaseentry,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.039191484451293945
edges: 3.0040740966796875e-05
Graph 1152 saved.
Drawing graph...
Graph drawn to output/graph1152/graph1152.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1152/graph1152.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1152/nodetypes1152.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1152/edgetypes1152.json.
outputting graph to JSON format...
Graph outputted to output/graph1152/graph1152.json.
Scenarios: databaseentry,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.06834745407104492
edges: 1.8358230590820312e-05
Graph 1153 saved.
Drawing graph...
Graph drawn to output/graph1153/graph1153.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1153/graph1153.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1153/nodetypes1153.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1153/edgetypes1153.json.
outputting graph to JSON format...
Graph outputted to output/graph1153/graph1153.json.
Scenarios: databaseentry,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.035807132720947266
edges: 1.1205673217773438e-05
Graph 1154 saved.
Drawing graph...
Graph drawn to output/graph1154/graph1154.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1154/graph1154.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1154/nodetypes1154.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1154/edgetypes1154.json.
outputting graph to JSON format...
Graph outputted to output/graph1154/graph1154.json.
Scenarios: databaseentry,query,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.02724909782409668
edges: 1.1205673217773438e-05
Graph 1155 saved.
Drawing graph...
Graph drawn to output/graph1155/graph1155.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1155/graph1155.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1155/nodetypes1155.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1155/edgetypes1155.json.
outputting graph to JSON format...
Graph outputted to output/graph1155/graph1155.json.
Scenarios: databaseentry,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.01336050033569336
edges: 1.5735626220703125e-05
Graph 1156 saved.
Drawing graph...
Graph drawn to output/graph1156/graph1156.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1156/graph1156.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1156/nodetypes1156.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1156/edgetypes1156.json.
outputting graph to JSON format...
Graph outputted to output/graph1156/graph1156.json.
Scenarios: databaseentry,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.07883667945861816
edges: 3.4809112548828125e-05
Graph 1157 saved.
Drawing graph...
Graph drawn to output/graph1157/graph1157.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1157/graph1157.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1157/nodetypes1157.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1157/edgetypes1157.json.
outputting graph to JSON format...
Graph outputted to output/graph1157/graph1157.json.
Scenarios: databaseentry,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.01961040496826172
edges: 1.6450881958007812e-05
Graph 1158 saved.
Drawing graph...
Graph drawn to output/graph1158/graph1158.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1158/graph1158.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1158/nodetypes1158.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1158/edgetypes1158.json.
outputting graph to JSON format...
Graph outputted to output/graph1158/graph1158.json.
Scenarios: databaseentry,ping,login
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/singlelogin.py
Saving graph to database...
type: 0.03257322311401367
edges: 1.1444091796875e-05
Graph 1159 saved.
Drawing graph...
Graph drawn to output/graph1159/graph1159.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1159/graph1159.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1159/nodetypes1159.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1159/edgetypes1159.json.
outputting graph to JSON format...
Graph outputted to output/graph1159/graph1159.json.
Scenarios: databaseentry,login,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.050704240798950195
edges: 1.6450881958007812e-05
Graph 1160 saved.
Drawing graph...
Graph drawn to output/graph1160/graph1160.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1160/graph1160.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1160/nodetypes1160.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1160/edgetypes1160.json.
outputting graph to JSON format...
Graph outputted to output/graph1160/graph1160.json.
Scenarios: databaseentry,login,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.029154300689697266
edges: 1.5735626220703125e-05
Graph 1161 saved.
Drawing graph...
Graph drawn to output/graph1161/graph1161.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1161/graph1161.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1161/nodetypes1161.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1161/edgetypes1161.json.
outputting graph to JSON format...
Graph outputted to output/graph1161/graph1161.json.
Scenarios: databaseentry,login,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.009353160858154297
edges: 1.0967254638671875e-05
Graph 1162 saved.
Drawing graph...
Graph drawn to output/graph1162/graph1162.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1162/graph1162.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1162/nodetypes1162.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1162/edgetypes1162.json.
outputting graph to JSON format...
Graph outputted to output/graph1162/graph1162.json.
Scenarios: databaseentry,login,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/databaseentry.py
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.023255348205566406
edges: 1.0967254638671875e-05
Graph 1163 saved.
Drawing graph...
Graph drawn to output/graph1163/graph1163.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1163/graph1163.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1163/nodetypes1163.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1163/edgetypes1163.json.
outputting graph to JSON format...
Graph outputted to output/graph1163/graph1163.json.
Scenarios: login,message,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.04765963554382324
edges: 1.0967254638671875e-05
Graph 1164 saved.
Drawing graph...
Graph drawn to output/graph1164/graph1164.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1164/graph1164.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1164/nodetypes1164.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1164/edgetypes1164.json.
outputting graph to JSON format...
Graph outputted to output/graph1164/graph1164.json.
Scenarios: login,message,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.02787470817565918
edges: 1.5497207641601562e-05
Graph 1165 saved.
Drawing graph...
Graph drawn to output/graph1165/graph1165.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1165/graph1165.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1165/nodetypes1165.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1165/edgetypes1165.json.
outputting graph to JSON format...
Graph outputted to output/graph1165/graph1165.json.
Scenarios: login,message,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.05739736557006836
edges: 1.2636184692382812e-05
Graph 1166 saved.
Drawing graph...
Graph drawn to output/graph1166/graph1166.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1166/graph1166.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1166/nodetypes1166.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1166/edgetypes1166.json.
outputting graph to JSON format...
Graph outputted to output/graph1166/graph1166.json.
Scenarios: login,message,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/messageboard.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.10439634323120117
edges: 1.1444091796875e-05
Graph 1167 saved.
Drawing graph...
Graph drawn to output/graph1167/graph1167.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1167/graph1167.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1167/nodetypes1167.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1167/edgetypes1167.json.
outputting graph to JSON format...
Graph outputted to output/graph1167/graph1167.json.
Scenarios: login,submit,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.08471274375915527
edges: 1.2636184692382812e-05
Graph 1168 saved.
Drawing graph...
Graph drawn to output/graph1168/graph1168.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1168/graph1168.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1168/nodetypes1168.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1168/edgetypes1168.json.
outputting graph to JSON format...
Graph outputted to output/graph1168/graph1168.json.
Scenarios: login,submit,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.03121805191040039
edges: 1.2159347534179688e-05
Graph 1169 saved.
Drawing graph...
Graph drawn to output/graph1169/graph1169.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1169/graph1169.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1169/nodetypes1169.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1169/edgetypes1169.json.
outputting graph to JSON format...
Graph outputted to output/graph1169/graph1169.json.
Scenarios: login,submit,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.027886390686035156
edges: 1.2636184692382812e-05
Graph 1170 saved.
Drawing graph...
Graph drawn to output/graph1170/graph1170.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1170/graph1170.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1170/nodetypes1170.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1170/edgetypes1170.json.
outputting graph to JSON format...
Graph outputted to output/graph1170/graph1170.json.
Scenarios: login,submit,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/questionnaire.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.0999300479888916
edges: 1.1920928955078125e-05
Graph 1171 saved.
Drawing graph...
Graph drawn to output/graph1171/graph1171.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1171/graph1171.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1171/nodetypes1171.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1171/edgetypes1171.json.
outputting graph to JSON format...
Graph outputted to output/graph1171/graph1171.json.
Scenarios: login,query,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.08141160011291504
edges: 1.1682510375976562e-05
Graph 1172 saved.
Drawing graph...
Graph drawn to output/graph1172/graph1172.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1172/graph1172.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1172/nodetypes1172.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1172/edgetypes1172.json.
outputting graph to JSON format...
Graph outputted to output/graph1172/graph1172.json.
Scenarios: login,query,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.06831240653991699
edges: 1.239776611328125e-05
Graph 1173 saved.
Drawing graph...
Graph drawn to output/graph1173/graph1173.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1173/graph1173.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1173/nodetypes1173.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1173/edgetypes1173.json.
outputting graph to JSON format...
Graph outputted to output/graph1173/graph1173.json.
Scenarios: login,query,ping
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/commandlineping.py
Saving graph to database...
type: 0.014601707458496094
edges: 1.7404556274414062e-05
Graph 1174 saved.
Drawing graph...
Graph drawn to output/graph1174/graph1174.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1174/graph1174.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1174/nodetypes1174.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1174/edgetypes1174.json.
outputting graph to JSON format...
Graph outputted to output/graph1174/graph1174.json.
Scenarios: login,query,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/pagequery.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.046364545822143555
edges: 1.7881393432617188e-05
Graph 1175 saved.
Drawing graph...
Graph drawn to output/graph1175/graph1175.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1175/graph1175.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1175/nodetypes1175.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1175/edgetypes1175.json.
outputting graph to JSON format...
Graph outputted to output/graph1175/graph1175.json.
Scenarios: login,ping,message
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/messageboard.py
Saving graph to database...
type: 0.07740259170532227
edges: 3.457069396972656e-05
Graph 1176 saved.
Drawing graph...
Graph drawn to output/graph1176/graph1176.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1176/graph1176.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1176/nodetypes1176.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1176/edgetypes1176.json.
outputting graph to JSON format...
Graph outputted to output/graph1176/graph1176.json.
Scenarios: login,ping,submit
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/questionnaire.py
Saving graph to database...
type: 0.023997783660888672
edges: 1.4066696166992188e-05
Graph 1177 saved.
Drawing graph...
Graph drawn to output/graph1177/graph1177.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1177/graph1177.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1177/nodetypes1177.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1177/edgetypes1177.json.
outputting graph to JSON format...
Graph outputted to output/graph1177/graph1177.json.
Scenarios: login,ping,query
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/pagequery.py
Saving graph to database...
type: 0.1314229965209961
edges: 1.1205673217773438e-05
Graph 1178 saved.
Drawing graph...
Graph drawn to output/graph1178/graph1178.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1178/graph1178.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1178/nodetypes1178.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1178/edgetypes1178.json.
outputting graph to JSON format...
Graph outputted to output/graph1178/graph1178.json.
Scenarios: login,ping,databaseentry
Result: [31mxssstored--Execute XSS Stored Attack[0m
[31mxssreflected--Execute XSS Reflected Attack[0m
[31mxssdom--Execute XSS DOM Attack[0m
[31mcommandinjection--Execute Command Injection Attack[0m
[31msqlinjection--Execute SQL Injection Attack[0m
[31mbruteforce--Execute Brute Force Attack[0m
[31mcustomattack--Use My Own Attack[0m
[32mmessage--Message Board Post (Benign version of XSS stored)[0m
[32msubmit--Complete a Questionnaire (Benign version of XSS reflected)[0m
[32mquery--Query a Webpage (Benign version of XSS DOM)[0m
[32mping--Ping Local Host (Benign version of command injection)[0m
[32mdatabaseentry--Create a User ID (Benign version of SQL injection)[0m
[32mlogin--Enter Username and Password (Benign version of brute force)[0m
[32mcustombehavior--Use My Own Custom Behavior[0m
Select one or more attacks to run in a comma-separated list: Execution loop is constructed. How many iterations would you like to make? [35m1--whole system[0m
[35m2--HTTP server[0m
[35m3--MySQL database[0m
[35m4--Chrome browser[0m
Select provenance capture granularity: FINE = CamFlow-provided node and edge types, COARSE = W3C-PROV model types
Select FINE (f) or COARSE (c) granularity for edge types: Select FINE (f) or COARSE (c) granularity for node types: Driver initialized.
Connecting MQTT subscriber...
Connected with result code 0
running /home/periadhityan/flurry/scripts/singlelogin.py
running /home/periadhityan/flurry/scripts/commandlineping.py
running /home/periadhityan/flurry/scripts/databaseentry.py
Saving graph to database...
type: 0.020109891891479492
edges: 1.811981201171875e-05
Graph 1179 saved.
Drawing graph...
Graph drawn to output/graph1179/graph1179.png.
converting graph to pickle...
Making NetworkX Graph...
Graph constructed.
Graph pickle outputted to output/graph1179/graph1179.gpickle.
outputting node types to JSON format...
Node types outputted to output/graph1179/nodetypes1179.json.
outputting edge types to JSON format...
Edge types outputted to output/graph1179/edgetypes1179.json.
outputting graph to JSON format...
Graph outputted to output/graph1179/graph1179.json.
